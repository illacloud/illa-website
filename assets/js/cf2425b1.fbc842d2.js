"use strict";(self.webpackChunkilla_website=self.webpackChunkilla_website||[]).push([[5330],{9393:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=n(1527),l=n(7214);const a={slug:"postgresql-isnull",title:"Best Practices for PostgreSQL ISNULL and ISNOTNULL",description:"This article explains how to use the `IS NULL` operator in PostgreSQL to check if a value is `NULL`. PostgreSQL `IS NULL` is a boolean operator that checks if a value is `NULL`. A `NULL` value is a special value that indicates nothing, it is neither an empty string nor false.",authors:["owen"],image:"https://cdn.illacloud.com/illa-website/blog/postgresql-isnull/cover.webp",tags:["postgresql","isnull","isnotnull"],date:"2024-02-04T11:00",is_featured:!0},i=void 0,o={permalink:"/illa-website/blog/postgresql-isnull",source:"@site/blog/postgresql-isnull/postgresql-isnull.md",title:"Best Practices for PostgreSQL ISNULL and ISNOTNULL",description:"This article explains how to use the `IS NULL` operator in PostgreSQL to check if a value is `NULL`. PostgreSQL `IS NULL` is a boolean operator that checks if a value is `NULL`. A `NULL` value is a special value that indicates nothing, it is neither an empty string nor false.",date:"2024-02-04T11:00:00.000Z",formattedDate:"February 4, 2024",tags:[{label:"postgresql",permalink:"/illa-website/blog/tags/postgresql"},{label:"isnull",permalink:"/illa-website/blog/tags/isnull"},{label:"isnotnull",permalink:"/illa-website/blog/tags/isnotnull"}],readingTime:2.435,hasTruncateMarker:!1,authors:[{name:"Owen Chen",title:"CEO",url:"https://github.com/smallSohoSolo",imageURL:"https://avatars.githubusercontent.com/u/7929686?v=4",key:"owen"}],frontMatter:{slug:"postgresql-isnull",title:"Best Practices for PostgreSQL ISNULL and ISNOTNULL",description:"This article explains how to use the `IS NULL` operator in PostgreSQL to check if a value is `NULL`. PostgreSQL `IS NULL` is a boolean operator that checks if a value is `NULL`. A `NULL` value is a special value that indicates nothing, it is neither an empty string nor false.",authors:["owen"],image:"https://cdn.illacloud.com/illa-website/blog/postgresql-isnull/cover.webp",tags:["postgresql","isnull","isnotnull"],date:"2024-02-04T11:00",is_featured:!0},unlisted:!1,nextItem:{title:"Most Popular 5 React Component Libraries in 2024",permalink:"/illa-website/blog/react-component-library"},relatedPosts:[],authorPosts:[]},r={authorsImageUrls:[void 0]},c=[{value:"PostgreSQL IS NULL Syntax",id:"postgresql-is-null-syntax",level:2},{value:"PostgreSQL IS NULL Operator Rules",id:"postgresql-is-null-operator-rules",level:2},{value:"PostgreSQL IS NULL Examples",id:"postgresql-is-null-examples",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const s={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["This article explains how to use the ",(0,t.jsx)(s.code,{children:"IS NULL"})," operator in PostgreSQL to check if a value is ",(0,t.jsx)(s.code,{children:"NULL"}),".\nPostgreSQL ",(0,t.jsx)(s.code,{children:"IS NULL"})," is a boolean operator that checks if a value is ",(0,t.jsx)(s.code,{children:"NULL"}),". A ",(0,t.jsx)(s.code,{children:"NULL"})," value is a special value that\nindicates nothing, it is neither an empty string nor false."]}),"\n",(0,t.jsx)(s.h2,{id:"postgresql-is-null-syntax",children:"PostgreSQL IS NULL Syntax"}),"\n",(0,t.jsxs)(s.p,{children:["PostgreSQL ",(0,t.jsx)(s.code,{children:"IS NULL"})," is a unary comparison operator that only requires one operand. The syntax for the ",(0,t.jsx)(s.code,{children:"IS NULL"}),"\noperator is:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"expr IS NULL\nexpr IS NOT NULL\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Breakdown:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"expr"})," can be a field name, a value, or an expression."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"IS NOT NULL"})," is the negation of ",(0,t.jsx)(s.code,{children:"IS NULL"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"IS NULL"})," and ",(0,t.jsx)(s.code,{children:"IS NOT NULL"})," can be used in ",(0,t.jsx)(s.code,{children:"SELECT"})," statements or ",(0,t.jsx)(s.code,{children:"WHERE"})," clauses."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"postgresql-is-null-operator-rules",children:"PostgreSQL IS NULL Operator Rules"}),"\n",(0,t.jsxs)(s.p,{children:["When the operand on the left side of the PostgreSQL ",(0,t.jsx)(s.code,{children:"IS NULL"})," operator is ",(0,t.jsx)(s.code,{children:"NULL"}),", the ",(0,t.jsx)(s.code,{children:"IS NULL"})," operator returns ",(0,t.jsx)(s.code,{children:"t"}),",\notherwise it returns ",(0,t.jsx)(s.code,{children:"f"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:'SELECT\n    NULL IS NULL "NULL IS NULL",\n    0 IS NULL "0 IS NULL",\n    1 IS NULL "1 IS NULL";\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:" NULL IS NOT NULL | 0 IS NOT NULL | 1 IS NOT NULL\n------------------+---------------+---------------\n f                | t             | t\n"})}),"\n",(0,t.jsx)(s.h2,{id:"postgresql-is-null-examples",children:"PostgreSQL IS NULL Examples"}),"\n",(0,t.jsxs)(s.p,{children:["We will use the tables in the ",(0,t.jsx)(s.code,{children:"Sakila"})," sample database for demonstration. Please install the ",(0,t.jsx)(s.code,{children:"Sakila"})," sample database in\nPostgreSQL first."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Sakila"})," sample database is one of the most widely used and best sample databases. The ",(0,t.jsx)(s.code,{children:"Sakila"})," sample database was\noriginally developed by Mike Hillyer, a former member of the MySQL AB documentation team. It is designed to provide a\nstandard schema that can be used for example demonstrations in books, tutorials, articles, etc."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Sakila"})," database models a DVD rental store business, including movies, actors, movie-actor relationships, and a\ncentral inventory table that connects movies, stores, and rental transactions."]}),"\n",(0,t.jsxs)(s.p,{children:["As one of the best sample databases, the ",(0,t.jsx)(s.code,{children:"Sakila"})," database has been ported to platforms such as PostgreSQL, Oracle, DB2,\nand SQLite."]}),"\n",(0,t.jsxs)(s.p,{children:["In the ",(0,t.jsx)(s.code,{children:"Sakila"})," sample database, the ",(0,t.jsx)(s.code,{children:"staff"})," table stores employee information for the DVD rental store."]}),"\n",(0,t.jsxs)(s.p,{children:["In the ",(0,t.jsx)(s.code,{children:"staff"})," table, ",(0,t.jsx)(s.code,{children:"picture"})," stores the employee's photo file. To query for employees who have not uploaded a photo\nfrom the ",(0,t.jsx)(s.code,{children:"staff"})," table, you need to check if ",(0,t.jsx)(s.code,{children:"picture"})," is ",(0,t.jsx)(s.code,{children:"NULL"}),". Use the following SQL statement with ",(0,t.jsx)(s.code,{children:"IS NULL"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"SELECT\n    first_name, last_name, picture\nFROM\n    staff\nWHERE\n    picture IS NULL;\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:" first_name | last_name | picture\n------------+-----------+---------\n Mike       | Hillyer   | <null>\n Jon        | Stephens  | <null>\n"})}),"\n",(0,t.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(s.p,{children:["In this article, we learned the syntax and usage of the ",(0,t.jsx)(s.code,{children:"IS NULL"})," and ",(0,t.jsx)(s.code,{children:"IS NOT NULL"})," comparison operators in PostgreSQL.\nHere are the key takeaways from this article:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"IS NULL"})," and ",(0,t.jsx)(s.code,{children:"IS NOT NULL"})," are unary comparison operators."]}),"\n",(0,t.jsxs)(s.li,{children:["Use the ",(0,t.jsx)(s.code,{children:"IS NULL"})," operator to check if a value is ",(0,t.jsx)(s.code,{children:"NULL"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"IS NOT NULL"})," operator is the negation of ",(0,t.jsx)(s.code,{children:"IS NULL"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"NULL IS NULL"})," evaluates to true."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7214:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>i});var t=n(959);const l={},a=t.createContext(l);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);