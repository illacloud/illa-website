<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://illacloud.github.io/illa-website/ja/blog</id>
    <title>ILLA Cloud Blog</title>
    <updated>2024-01-25T10:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://illacloud.github.io/illa-website/ja/blog"/>
    <subtitle>ILLA Cloud Blog</subtitle>
    <icon>https://illacloud.github.io/illa-website/ja/img/public/favicon.ico</icon>
    <rights>Copyright © 2024 ILLA.</rights>
    <entry>
        <title type="html"><![CDATA[最も実用的なTypeScriptの一般的な機能]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation"/>
        <updated>2024-01-25T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[プロジェクトでの型プログラミングの重要性は言うまでもありません。この記事では、TypeScriptの一般的な機能をまとめ、TypeScriptの使用を熟練させるのに役立ちます。]]></summary>
        <content type="html"><![CDATA[<p>プロジェクトでの型プログラミングの重要性は言うまでもありません。この記事では、TypeScriptの一般的な機能をまとめ、TypeScriptの使用を熟練させるのに役立ちます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="アドバンストタイプ">アドバンスト・タイプ<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%A2%E3%83%89%E3%83%90%E3%83%B3%E3%82%B9%E3%83%88%E3%82%BF%E3%82%A4%E3%83%97" class="hash-link" aria-label="アドバンスト・タイプ への直接リンク" title="アドバンスト・タイプ への直接リンク">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="交差型">交差型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E4%BA%A4%E5%B7%AE%E5%9E%8B" class="hash-link" aria-label="交差型 への直接リンク" title="交差型 への直接リンク">​</a></h3>
<p>交差型は、&amp; 記号を使用して複数の型を1つの型に結合します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">I1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">I2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T3</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I1</span><span class="token plain"> </span><span class="token operator">&amp;</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T3</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tj"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">11</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ユニオン型">ユニオン型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%83%A6%E3%83%8B%E3%82%AA%E3%83%B3%E5%9E%8B" class="hash-link" aria-label="ユニオン型 への直接リンク" title="ユニオン型 への直接リンク">​</a></h3>
<p>ユニオン型は、| 記号を使用して値がいくつかの型のうちのどれかであることを表します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">1</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="文字列リテラル型">文字列リテラル型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%96%87%E5%AD%97%E5%88%97%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E5%9E%8B" class="hash-link" aria-label="文字列リテラル型 への直接リンク" title="文字列リテラル型 への直接リンク">​</a></h3>
<p>文字列リテラル型は、文字列型を変数の型として使用します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'number'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'number'</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="数値リテラル型">数値リテラル型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%95%B0%E5%80%A4%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E5%9E%8B" class="hash-link" aria-label="数値リテラル型 への直接リンク" title="数値リテラル型 への直接リンク">​</a></h3>
<p>数値リテラル型は、数字を変数の型として使用します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">1</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ブールリテラル型">ブールリテラル型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%83%96%E3%83%BC%E3%83%AB%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E5%9E%8B" class="hash-link" aria-label="ブールリテラル型 への直接リンク" title="ブールリテラル型 への直接リンク">​</a></h3>
<p>ブールリテラル型は、真偽値を変数の型として使用します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean">true</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="文字列テンプレート型">文字列テンプレート型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%96%87%E5%AD%97%E5%88%97%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E5%9E%8B" class="hash-link" aria-label="文字列テンプレート型 への直接リンク" title="文字列テンプレート型 への直接リンク">​</a></h3>
<p>文字列テンプレート型は、ES6のテンプレート文字列構文を使用して型を制約します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">https</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">https://</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation builtin" style="color:rgb(189, 147, 249)">string</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> https </span><span class="token operator">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">https://jd.com</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="演算子">演算子<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%BC%94%E7%AE%97%E5%AD%90" class="hash-link" aria-label="演算子 への直接リンク" title="演算子 への直接リンク">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="keyof">keyof<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#keyof" class="hash-link" aria-label="keyof への直接リンク" title="keyof への直接リンク">​</a></h3>
<p>keyofは、特定の型のすべてのキーを取得するために使用され、その戻り値はユニオン型です。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// const a: 'name' | 'age' = 'name'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'name'</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="typeof">typeof<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#typeof" class="hash-link" aria-label="typeof への直接リンク" title="typeof への直接リンク">​</a></h3>
<p>typeofは、オブジェクトまたは関数の構造型を取得するために使用されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a2 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tj'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> a2 </span><span class="token comment" style="color:rgb(98, 114, 164)">// {name: string}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">fn1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> x </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> fn1 </span><span class="token comment" style="color:rgb(98, 114, 164)">// (x: number) =&gt; number</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="in">in<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#in" class="hash-link" aria-label="in への直接リンク" title="in への直接リンク">​</a></h3>
<p>inは、ユニオン型を繰り返し処理するために使用されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> obj </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tj"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">11</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T5</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> obj</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">  name: any,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">  age: any</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="tk">T[K]<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#tk" class="hash-link" aria-label="T[K] への直接リンク" title="T[K] への直接リンク">​</a></h3>
<p>T[K]は、インデックスにアクセスし、そのインデックスに対応する値のユニオン型を取得するために使用されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">I3</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T6</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string | number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="演算子-1">演算子<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%BC%94%E7%AE%97%E5%AD%90-1" class="hash-link" aria-label="演算子 への直接リンク" title="演算子 への直接リンク">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="非nullアサーション演算子">非nullアサーション演算子<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E9%9D%9Enull%E3%82%A2%E3%82%B5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E6%BC%94%E7%AE%97%E5%AD%90" class="hash-link" aria-label="非nullアサーション演算子 への直接リンク" title="非nullアサーション演算子 への直接リンク">​</a></h3>
<p>非nullアサーション演算子 ! は、要素がnullまたはundefinedでないことを強調し、プロパティは明示的に値が割り当てられることをTypeScriptに伝えます。</p>
<div class="language-jsx codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-jsx codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(80, 250, 123)">Demo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">JSX</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access maybe-class-name" style="color:rgb(80, 250, 123)">Element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> divRef </span><span class="token operator">=</span><span class="token plain"> useRef</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">HTMLDivElement</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text">()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">   useEffect(() =&gt; </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      divRef</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">current</span><span class="token operator">!</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">scrollIntoView</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// divRef.currentがnullまたはundefinedでないことをアサーション</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain-text">, [])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">   return </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">ref</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">divRef</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text">divDemo</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="オプショナルチェイン演算子">オプショナルチェイン演算子<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%AB%E3%83%81%E3%82%A7%E3%82%A4%E3%83%B3%E6%BC%94%E7%AE%97%E5%AD%90" class="hash-link" aria-label="オプショナルチェイン演算子 への直接リンク" title="オプショナルチェイン演算子 への直接リンク">​</a></h3>
<p>オプショナルチェイン演算子 ?. は、左側の式の値がnullまたはundefinedかどうかを判断し、そうであれば式の実行を停止します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> b</span><span class="token operator">?.</span><span class="token plain">a</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="nullish合併演算子">nullish合併演算子<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#nullish%E5%90%88%E4%BD%B5%E6%BC%94%E7%AE%97%E5%AD%90" class="hash-link" aria-label="nullish合併演算子 への直接リンク" title="nullish合併演算子 への直接リンク">​</a></h3>
<p>nullish合併演算子 ?? は、左側の式の値がnullまたはundefinedかどうかを判断し、そうでない場合は右側の値を返します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> b </span><span class="token operator">??</span><span class="token plain"> </span><span class="token number">10</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="数値セパレータ">数値セパレータ<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%95%B0%E5%80%A4%E3%82%BB%E3%83%91%E3%83%AC%E3%83%BC%E3%82%BF" class="hash-link" aria-label="数値セパレータ への直接リンク" title="数値セパレータ への直接リンク">​</a></h3>
<p>数値セパレータ _ は、長い数字を区切り、数字を読みやすくするために使用されます。コンパイル結果では _ は自動的に削除されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> num</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">1_111_111_111</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="型エイリアス">型エイリアス<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E5%9E%8B%E3%82%A8%E3%82%A4%E3%83%AA%E3%82%A2%E3%82%B9" class="hash-link" aria-label="型エイリアス への直接リンク" title="型エイリアス への直接リンク">​</a></h2>
<p>型エイリアスは、型に新しい名前を付けるために使用されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Message</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(80, 250, 123)">greet</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">message</span><span class="token operator">:</span><span class="token plain"> Message</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="型アサーション">型アサーション<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E5%9E%8B%E3%82%A2%E3%82%B5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3" class="hash-link" aria-label="型アサーション への直接リンク" title="型アサーション への直接リンク">​</a></h2>
<p>型アサーションは、ブラウザに対して型を明示的に指定することを意味します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// 尖括弧構文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> someValue</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"this is a string"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> strLength</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token operator">&gt;</span><span class="token plain">someValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">length</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">構文</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> someValue</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"this is a string"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> strLength</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">someValue </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">as</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">length</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="型ガード">型ガード<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E5%9E%8B%E3%82%AC%E3%83%BC%E3%83%89" class="hash-link" aria-label="型ガード への直接リンク" title="型ガード への直接リンク">​</a></h2>
<p>型ガードは、実行時に特定のスコープ内の型を確認するためのいくつかの式です。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">A</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">B</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  sex</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  home</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">doSomething</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">person</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">A</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">B</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">person</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// エラー</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// `in`型ガードを使用する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">doSomething</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">person</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">A</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">B</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> person</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// OK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// `typeof`型ガードを使用する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">A</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> a </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"string"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// OK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> a </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"number"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// OK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// `instanceof`型ガード</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Foo</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">Bar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">test</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">input</span><span class="token operator">:</span><span class="token plain"> Foo </span><span class="token operator">|</span><span class="token plain"> Bar</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">input </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">instanceof</span><span class="token plain"> </span><span class="token class-name">Foo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// ここで `input` の型が「狭まる」</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">// ここで `input` の型が「狭まる」</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコ�ピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリック">ジェネリック<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF" class="hash-link" aria-label="ジェネリック への直接リンク" title="ジェネリック への直接リンク">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリックの紹介">ジェネリックの紹介<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E3%81%AE%E7%B4%B9%E4%BB%8B" class="hash-link" aria-label="ジェネリックの紹介 への直接リンク" title="ジェネリックの紹介 への直接リンク">​</a></h3>
<p>ジェネリックは、型に引数を渡してより汎用的な型を取得する方法です。関数に引数を渡すように、型にも引数を渡して新しい型を取得します。</p>
<p>以下の例では、ジェネリック型T1を取得し、引数を渡すことでT2型がstring[]、T3型がnumber[]になります。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T1</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string[]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T3</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T1</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// number[]</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Tは変数であり、任意の他の変数名で代用できます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T4</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">A</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">A</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T5</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T4</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string[]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T6</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T4</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// number[]</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="命名規則">命名規則<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E5%91%BD%E5%90%8D%E8%A6%8F%E5%89%87" class="hash-link" aria-label="命名規�則 への直接リンク" title="命名規則 への直接リンク">​</a></h3>
<p>TypeScriptのジェネリック変数の命名規則では、通常4つの一般的なジェネリック変数名がデフォルトで提供されており、可読性を向上させるために他の変数名を使用しないことが推奨されています。</p>
<p>T：最初の引数を表す
K：オブジェクトのキータイプを表す
V：オブジェクトの値の型を表す
E：要素の型を表す</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリックインターフェース">ジェネリックインターフェース<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9" class="hash-link" aria-label="ジェネリックインターフェース への直接リンク" title="ジェネリックインターフェース への直接リンク">​</a></h3>
<p>ジェネリックインターフェースは、前述の例と同様に、インターフェースに型引数を渡します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">I1</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">U</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">U</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">I2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I1</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリック制約extends演算子">ジェネリック制約（extends演算子）<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E5%88%B6%E7%B4%84extends%E6%BC%94%E7%AE%97%E5%AD%90" class="hash-link" aria-label="ジェネリック制約（extends演算子） への直接リンク" title="ジェネリック制約（extends演算子） への直接リンク">​</a></h3>
<p>時折、ジェネリックパラメータを制約し、各変数の型を制限する必要があります。TypeScriptはextendsを使用して型制約を実現します。</p>
<p>ジェネリック制約の構文は次のとおりです。</p>
<p>ジェネリック名 extends 型
TをLengthとして指定し、Tの型がlengthプロパティを含み、その型がnumberである必要がある制約を設定しています。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name">Length</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  length</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:rgb(80, 250, 123)">fn1</span><span class="token generic-function generic class-name operator">&lt;</span><span class="token generic-function generic class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token generic-function generic class-name"> Length</span><span class="token generic-function generic class-name operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">arg</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> arg</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">length</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>extendsを使用してKがTのキーであることを制約しています。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:rgb(80, 250, 123)">getProperty</span><span class="token generic-function generic class-name operator">&lt;</span><span class="token generic-function generic class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token generic-function generic class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name constant" style="color:rgb(189, 147, 249)">K</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token generic-function generic class-name operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">obj</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> key</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> obj</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">key</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> tsInfo </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Typescript"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  supersetOf</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Javascript"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  difficulty</span><span class="token operator">:</span><span class="token plain"> Difficulty</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Intermediate</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> difficulty</span><span class="token operator">:</span><span class="token plain"> Difficulty </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">getProperty</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tsInfo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"difficulty"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// OK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> supersetOf</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">getProperty</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">tsInfo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"superset_of"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// エラー</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリックパラメータのデフォルト値">ジェネリックパラメータのデフォルト値<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%81%AE%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E5%80%A4" class="hash-link" aria-label="ジェネリックパラメータのデフォルト値 への直接リンク" title="ジェネリックパラメータのデフォルト値 への直接リンク">​</a></h3>
<p>ジェネリックパラメータのデフォルト値は、関数パラメータのデフォルト値と同様に、パラメータが指定されていない場合にデフォルト値を提供します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">I4</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name"> </span><span class="token class-name operator">=</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">string</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">S1</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I4</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"123"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// デフォルトでname: string型</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">S2</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">I4</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">123</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリック条件">ジェネリック条件<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E6%9D%A1%E4%BB%B6" class="hash-link" aria-label="ジェネリック条件 への直接リンク" title="ジェネリック条件 への直接リンク">​</a></h3>
<p>条件型は、JavaScriptの条件文と同じように、条件が満たされる場合はxx、そうでない場合はyyを意味します。</p>
<p>条件型の表現は次のとおりです。</p>
<p>T extends U ? X : Y</p>
<p>TがUに代入可能であれば、型はXであり、それ以外の場合は型はYです。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'string'</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'number'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T1</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// 'string'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T3</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T1</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// 'number'</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリック推論infer演算子">ジェネリック推論（infer演算子）<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E6%8E%A8%E8%AB%96infer%E6%BC%94%E7%AE%97%E5%AD%90" class="hash-link" aria-label="ジェネリック推論（infer演算子） への直接リンク" title="ジェネリック推論（infer演算子） への直接リンク">​</a></h3>
<p>ジェネリック推論のキーワードはinferであり、構文はinfer型です。</p>
<p>通常、ジェネリック条件と組み合わせて使用し、具体例を理解します。</p>
<p>ジェネリックパラメータTが型<code>{t: infer Test}</code>に代入可能である場合、型Testが推論され、それ以外の場合はstring型になります。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Foo</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">t</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">infer</span><span class="token plain"> Test</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> Test </span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ジェネリックパラメータnumberにはtプロパティがないため、型はstringになります。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">One</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Foo</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ジェネリックパラメータのtプロパティがbooleanであるため、型はbooleanに推論されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Two</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Foo</span><span class="token operator">&lt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> t</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// boolean</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ジェネリックパラメータのtプロパティが() =&gt; voidであるため、型は() =&gt; voidに推論されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Three</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Foo</span><span class="token operator">&lt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(80, 250, 123)">t</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// () =&gt; void</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="ジェネリックユーティリティ型">ジェネリックユーティリティ型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E3%83%A6%E3%83%BC%E3%83%86%E3%82%A3%E3%83%AA%E3%83%86%E3%82%A3%E5%9E%8B" class="hash-link" aria-label="ジェネリックユーティリティ型 への直接リンク" title="ジェネ�リックユーティリティ型 への直接リンク">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="マップ型">マップ型<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E3%83%9E%E3%83%83%E3%83%97%E5%9E%8B" class="hash-link" aria-label="マップ型 への直接リンク" title="マップ型 への直接リンク">​</a></h3>
<p>マップ型は、元のオブジェクト型を新しいオブジェクト型にマップするためのジェネリック型です。</p>
<p>一般的なマップ型の構文は次のとおりです。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">readonly</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">readonly</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token operator">-</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">readonly</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>例を示します。すべてのプロパティをオプションに変更するためのマップ型を作成します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Partial</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="partial">Partial<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#partial" class="hash-link" aria-label="Partial への直接リンク" title="Partial への直接リンク">​</a></h3>
<p>TypeScriptは、いくつかの一般的なマップ型を提供しており、Partialはジェネリックのすべてのプロパティをオプションにするために使用されます。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Partial</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Partial</span><span class="token operator">&lt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// nameプロパティがなくてもエラーにならない</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="required">Required<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#required" class="hash-link" aria-label="Required への直接リンク" title="Required への直接リンク">​</a></h3>
<p>Requiredは、ジェネリックのすべてのプロパティを必須にします。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Required</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Required</span><span class="token operator">&lt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> b</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// エラー、プロパティ "name" が欠けていますが、型 "Required&lt;{ name?: string | undefined; }&gt;" ではそのプロパティが必要です。ts(2741)</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>構文の-?は、?（オプション）プロパティを取り除く意味です。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="readonly">Readonly<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#readonly" class="hash-link" aria-label="Readonly への直接リンク" title="Readonly への直接リンク">​</a></h3>
<p>Readonlyは、ジェネリックのすべてのプロパティを読み取り専用にします。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T3</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Readonly</span><span class="token operator">&lt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> c</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T3</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tj"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tj1"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// エラー、読み取り専用のプロパティ "name" には代入できません。ts(2540)</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="pick">Pick<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#pick" class="hash-link" aria-label="Pick への直接リンク" title="Pick への直接リンク">​</a></h3>
<p>Pickは型から特定のプロパティを選択し、新しい型を生成します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Pick</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">K</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T4</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Pick</span><span class="token operator">&lt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">これは新しい型で、T4={name: string}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> d</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T4</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"tj"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="record">Record<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#record" class="hash-link" aria-label="Record への直接リンク" title="Record への直接リンク">​</a></h3>
<p>Recordはキーと値をT型に変換します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Record</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">K</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">any</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">key </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> e</span><span class="token operator">:</span><span class="token plain"> Record</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tj'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> f</span><span class="token operator">:</span><span class="token plain"> Record</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">11</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>keyof anyはnumber | string | symbolに対応し、オブジェクトのキーの型セットを表します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="returntype">ReturnType<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#returntype" class="hash-link" aria-label="ReturnType への直接リンク" title="ReturnType への直接リンク">​</a></h3>
<p>ReturnTypeはT型に対応する関数の戻り値の型を取得します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">ReturnType</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name operator">...</span><span class="token class-name">args</span><span class="token class-name operator">:</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">any</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token class-name"> </span><span class="token class-name operator">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">...</span><span class="token plain">args</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">infer</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">?</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">never</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="exclude">Exclude<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#exclude" class="hash-link" aria-label="Exclude への直接リンク" title="Exclude への直接リンク">​</a></h3>
<p>ExcludeはT型からU型に属する型を削除します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Exclude</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">U</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">U</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">never</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T0</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Exclude</span><span class="token operator">&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// "b" | "c"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Exclude</span><span class="token operator">&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// "c"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T2</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Exclude</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">Function</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string | number</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="extract">Extract<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#extract" class="hash-link" aria-label="Extract への直接リンク" title="Extract への直接リンク">​</a></h3>
<p>ExtractはT型からU型を抽出します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Extract</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">U</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">U</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">never</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T0</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Extract</span><span class="token operator">&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"f"</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// "a"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Extract</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">Function</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// () =&gt; void</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="omit">Omit<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#omit" class="hash-link" aria-label="Omit への直接リンク" title="Omit への直接リンク">​</a></h3>
<p>OmitはT型からK型を除外して新しい型を構築します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Omit</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token class-name"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">K</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">any</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Pick</span><span class="token operator">&lt;</span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Exclude</span><span class="token operator">&lt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">keyof</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">K</span><span class="token operator">&gt;&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">interface</span><span class="token plain"> </span><span class="token class-name">Todo</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  completed</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">boolean</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  description</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">TodoPreview</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Omit</span><span class="token operator">&lt;</span><span class="token plain">Todo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"description"</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">title: string;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">completed: boolean;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">*/</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="nonnullable">NonNullable<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#nonnullable" class="hash-link" aria-label="NonNullable への直接リンク" title="NonNullable への直接リンク">​</a></h3>
<p>NonNullableは型からnullとundefinedの型をフィルタリングします。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">NonNullable</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">undefined</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">never</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T0</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> NonNullable</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">number</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">undefined</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string | number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> NonNullable</span><span class="token operator">&lt;</span><span class="token builtin" style="color:rgb(189, 147, 249)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">null</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">undefined</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// string[]</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="parameters">Parameters<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#parameters" class="hash-link" aria-label="Parameters への直接リンク" title="Parameters への直接リンク">​</a></h3>
<p>Parametersは関数のパラメータの型のタプル型を取得します。</p>
<div class="language-typescript codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-typescript codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name">Parameters</span><span class="token class-name operator">&lt;</span><span class="token class-name constant" style="color:rgb(189, 147, 249)">T</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token class-name"> </span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name operator">...</span><span class="token class-name">args</span><span class="token class-name operator">:</span><span class="token class-name"> </span><span class="token class-name builtin" style="color:rgb(189, 147, 249)">any</span><span class="token class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token class-name"> </span><span class="token class-name operator">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">T</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">...</span><span class="token plain">args</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">infer</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">?</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249)">P</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">never</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">A</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Parameters</span><span class="token operator">&lt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// []</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">B</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Parameters</span><span class="token operator">&lt;</span><span class="token plain">typeofArray</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">isArray</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// [any]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">C</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Parameters</span><span class="token operator">&lt;</span><span class="token plain">typeofparseInt</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// [string, (number | undefined)?]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">type</span><span class="token plain"> </span><span class="token class-name constant" style="color:rgb(189, 147, 249)">D</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> Parameters</span><span class="token operator">&lt;</span><span class="token plain">typeofMath</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">max</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// number[]</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="最後に">最後に<a href="https://illacloud.github.io/illa-website/ja/blog/typescript-most-practical-features-compilation#%E6%9C%80%E5%BE%8C%E3%81%AB" class="hash-link" aria-label="最後に への直接リンク" title="最後に への直接リンク">​</a></h2>
<p>これをお気に入りに追加しましょう！</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="typescript" term="typescript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ITサポートのための最適なツール]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/it-support</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/it-support"/>
        <updated>2024-01-23T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[通常の企業では、IT部門のテクニカルサポートが会社の情報システム、データベースの管理を担当しています]]></summary>
        <content type="html"><![CDATA[<p>ITサポートはテクニカルサポートとプログラムサポートに分かれています。</p>
<p>テクニカルサポートには幅広い知識構造を持つ技術者が必要です。ある程度の規模の企業はすべてIT部門を持っており、通常はネットワーク管理と呼ばれますが、すべての企業がプログラムサポートを持っているわけではありません。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="itサポートの仕事内容">ITサポートの仕事内容<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#it%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%AE%E4%BB%95%E4%BA%8B%E5%86%85%E5%AE%B9" class="hash-link" aria-label="ITサポートの仕事内容 への直接リンク" title="ITサポートの仕事内容 への直接リンク">​</a></h2>
<p>通常の企業では、IT部門のテクニカルサポートは会社の情報システム、データベース、機器のハードウェア設備などの管理を担当しています。会社が特別なソフトウェアが必要な場合や新しいシステムを更新する場合、通常は技術企業からプログラマーと共にチームを結成し、会社自体のプログラムサポートを行います。</p>
<p>テクニカルサポートはコンサルタントのようであり、より大まかな方向を指導する役割を果たすため、一般的に多くの知識を持っています。</p>
<p>プログラムサポートは主にコーディングに特化しています。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="おすすめのツール">おすすめのツール<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E3%81%8A%EF%BF%BD%E3%81%99%E3%81%99%E3%82%81%E3%81%AE%E3%83%84%E3%83%BC%E3%83%AB" class="hash-link" aria-label="おすすめのツール への直接リンク" title="おすすめのツール への直接リンク">​</a></h2>
<p>ITサポートの業務では、タスクをより効果的に遂行するために多くのツールが必要です。なぜなら、ITには共通のニーズが多くあります。例えば：</p>
<ul>
<li>作業指示の処理</li>
<li>プロジェクト管理</li>
<li>コード管理</li>
<li>ドキュメント管理</li>
<li>通知</li>
<li>会議</li>
<li>...</li>
</ul>
<p>ここでは、皆さんが仕事をより効果的に遂行するのに役立ついくつかのおすすめのツールを紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud">ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#illa-cloud" class="hash-link" aria-label="ILLA Cloud への直接リンク" title="ILLA Cloud への直接リンク">​</a></h2>
<p>もしビジネスロジック指向のツールを構築し、複雑なアニメーションや派手なページを追求せずに美しいUIだけを求める場合、ILLA Cloudが開発と構築におすすめです。</p>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、新しいプロジェクトを作成する必要がないシンプルなJSで内部ツールを素早く構築できる、箱から出して使えるローコードツールです。</p>
<ul>
<li>Web＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
<li>CRM</li>
</ul>
<p>ILLA Cloudはコードを書かずにドラッグアンドドロップでツールを素早く構築できるため、作業効率が10倍向上します。また、チーム協力をネイティブサポートしており、同僚と一緒に編集と構築ができます。</p>
<p>ILLA Cloudはコネクタ機能も備えており、他の使用しているSaaSツールとの迅速な接続をサポートします。予定されたタスク、Webhooks、パラメータの渡し、その他もサポートしています。</p>
<p>ILLA CloudにはAIエージェント機能も含まれており、テキスト分析、音声分析、画像分析などのAI駆動ツールを素早く構築するのに役立ちます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="linear">Linear<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#linear" class="hash-link" aria-label="Linear への直接リンク" title="Linear への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/it-support/linear.png" alt="linear" class="img_CfaS"></p>
<p>Linearはソフトウェアプロジェクト、スプリント、タスク、バグトラッキングを効率化するプロジェクト管理ツールです。高性能なチーム向けに構築されたシンプルで高速かつ強力なツールです。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="利点">利点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E5%88%A9%E7%82%B9" class="hash-link" aria-label="利点 への直接リンク" title="利点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>効率的なプロジェクト管理</strong>: Linearはソフトウェアプロジェクトを効率化することを重視しており、ユーザーフレンドリーなインターフェースを提供し、複雑なプロジェクト管理タスクを簡素化し、チームがプロジェクトの目標と締切を達成しやすくしています。</p>
</li>
<li>
<p><strong>効率的なスプリントとタスク管理</strong>: スプリントとタスクを管理するためにカスタマイズされた機能を備えているため、Linearはアジャイル手法を管理するのに効果的なツールを提供し、ソフトウェア開発サイクルの計画、トラッキング、実行を容易にします。</p>
</li>
<li>
<p><strong>効果的なバグトラッキング</strong>: バグトラッキングへの重点は、Linearがソフトウェアの品質と信頼性を維持するため</p>
</li>
</ol>
<p>に重要なソフトウェアのバグを特定、文書化、解決するための堅実なツールを提供していることを示しており、非常に重要です。</p>
<ol start="4">
<li>
<p><strong>速度とシンプリシティ</strong>: シンプルで速いとされるLinearは、迅速なセットアップと使いやすさを提供し、学習コストの低いツールを実装したいチームにとって特に有益です。</p>
</li>
<li>
<p><strong>高性能チーム向けの適用性</strong>: 高性能チーム向けに構築されたLinearは、効率性と拡張性が最適化されており、パフォーマンスの低下なしに複雑なプロジェクトを管理するチームをサポートするでしょう。</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点">欠点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E6%AC%A0%E7%82%B9" class="hash-link" aria-label="欠点 への直接リンク" title="欠点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>過度の単純化の可能性</strong>: 単純さは利点ですが、非常に大規模または複雑なプロジェクトに必要な一部の高度な機能が不足している可能性があり、一部の特殊なアプリケーションに対するユーティリティを制限する可能性があります。</p>
</li>
<li>
<p><strong>ソフトウェアプロジェクトへの焦点</strong>: Linearの特定のソフトウェアプロジェクトへの焦点は、非ソフトウェアのチームには適していない可能性があり、非ソフトウェアのチームには汎用性が制限される可能性があります。</p>
</li>
<li>
<p><strong>新しいユーザー向けの学習コスト</strong>: シンプルさにもかかわらず、新しいユーザー、特にアジャイル手法に慣れていないユーザーは、特定のニーズに最適にツールを活用する方法を理解する際に学習コストを負担する可能性があります。</p>
</li>
<li>
<p><strong>カスタマイズの制限</strong>: 速くてシンプルなツールは、カスタマイズオプションが限られていることがあり、非常にカスタマイズされたプロジェクト管理ソリューションを必要とするチームのニーズを満たさない可能性があります。</p>
</li>
<li>
<p><strong>チームの規律に依存</strong>: どのプロジェクト管理ツールも、Linearを含めて、チームがそれを一貫して正しく使用する規律に依存することが多いため、いくつかの組織文化での課題となる可能性があります。</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="gitlab">Gitlab<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#gitlab" class="hash-link" aria-label="Gitlab への直接リンク" title="Gitlab への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/it-support/gitlab.png" alt="gitlab" class="img_CfaS"></p>
<p>GitLabは単一のアプリケーションとして提供される完全なDevOpsプラットフォームです。これはソフトウェアライフサイクルを200％高速化し、ビジネスのスピードを劇的に向上させることができます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="利点-1">利点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E5%88%A9%E7%82%B9-1" class="hash-link" aria-label="利点 への直接リンク" title="利点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>統合されたDevOpsワークフロー</strong>: 完全なDevOpsソリューションを提供する単一のアプリケーションとして、GitLabは計画からモニタリングまでのソフトウェア開発のすべての段階に統合環境を提供し、ワークフローを大幅に単純化できます。</p>
</li>
<li>
<p><strong>効率の向上</strong>: GitLabのConcurrent DevOpsへの重点は、開発サイクルの同時アクションをサポートすることを示唆しており、ソフトウェアライフサイクルを200％高速化できるため、ビジネスのペースを加速させることができます。</p>
</li>
<li>
<p><strong>オールインワンプラットフォーム</strong>: プラットフォームのオールインワン性は、チームが複数の個別ツールを統合する手間を省き、複雑さと互換性の問題を減少させることができます。</p>
</li>
<li>
<p><strong>効果的なコラボレーション</strong>: GitLabはコードリポジトリ、課題トラッキング、CI/CDなど、チームメンバー間の協力を促進するための統合プラットフォームを提供するため、チームワークと生産性を向上させることができます。</p>
</li>
<li>
<p><strong>可視性と透明性</strong>: DevOpsサイクルのすべての側面を1つの場所に持っていることは、開発プロセス全体での可視性と透明性を提供でき、より情報を元にした意思決定を可能にします。</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-1">欠点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E6%AC%A0%E7%82%B9-1" class="hash-link" aria-label="欠点 への直接リンク" title="欠点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>学習コスト</strong>: GitLabの包括的な性質は、特にそうした包括的なプラットフォームに慣れていないチームや、より単純なツールから移行しているチームにとって、学習コストが高いかもしれません。</p>
</li>
<li>
<p><strong>リソースの消費</strong>: 機能の幅広さから、GitLabはサーバーリソースを多く</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="gitlab-1">Gitlab<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#gitlab-1" class="hash-link" aria-label="Gitlab への直接リンク" title="Gitlab への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/it-support/gitlab.png" alt="gitlab" class="img_CfaS"></p>
<p>GitLabは、1つのアプリケーションとして提供される完全なDevOpsプラットフォームです。これにより、同時に行われるDevOpsによってソフトウェアライフサイクルが200％高速化され、ビジネスのスピードが大幅に向上します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="利点-2">利点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E5%88%A9%E7%82%B9-2" class="hash-link" aria-label="利点 への直接リンク" title="利点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>統合されたDevOpsワークフロー</strong>：完全なDevOpsソリューションを提供する1つのアプリケーションとして、GitLabはソフトウェア開発のすべての段階に統合された環境を提供し、ワークフローを大幅に簡略化できます。</p>
</li>
<li>
<p><strong>効率の向上</strong>：GitLabはConcurrent DevOpsに重点を置いており、開発サイクルでの同時アクションをサポートしており、ソフトウェアライフサイクルが200％高速化される可能性があり、ビジネスのペースを加速させることができます。</p>
</li>
<li>
<p><strong>オールインワンプラットフォーム</strong>：このプラットフォームのオールインワンの性質により、チームは複数の別々のツールを統合する手間を省くことができ、複雑さと互換性の問題を軽減できます。</p>
</li>
<li>
<p><strong>効率的な協力</strong>：GitLabは、コードリポジトリ、課題追跡、CI/CDなどを提供する統一されたプラットフォームを提供することで、チームメンバー間の協力を促進し、チームワークと生産性を向上させるでしょう。</p>
</li>
<li>
<p><strong>可視性と透明性</strong>：DevOpsサイクルのすべての側面が1か所にあるため、開発プロセス全体での可視性と透明性が向上し、より情報を元にした意思決定ができます。</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-2">欠点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E6%AC%A0%E7%82%B9-2" class="hash-link" aria-label="欠点 への直接リンク" title="欠点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>学習カーブ</strong>：GitLabの包括的な性質は、特にこのような包括的なプラットフォームに慣れていないチームや、よりシンプルなツールから移行しているチームにとって、学習カーブが急である可能性があります。</p>
</li>
<li>
<p><strong>リソースの消費</strong>：多機能性が広がっているため、GitLabはサーバーリソースを多く必要とする可能性があり、小規模な組織やITインフラストラクチャが限られているチームにとっては課題となるかもしれません。</p>
</li>
<li>
<p><strong>小規模プロジェクトへの過度な対応</strong>：GitLabの広範な機能は、小規模なプロジェクトやチームにとっては必要以上になり、プラットフォームの過少利用を引き起こす可能性があります。</p>
</li>
<li>
<p><strong>ベンダーロックインの可能性</strong>：すべてのDevOpsニーズに1つのプラットフォームに依存することは、チームがGitLabに依存し、将来他のツールに切り替える場合に課題が生じる可能性があります。</p>
</li>
<li>
<p><strong>コストの考慮</strong>：GitLabは無料ティアを含むさまざまなプランを提供していますが、より高度な機能（大規模なチームと複雑なプロジェクトに必要なもの）は、通常、有料プランの一部で提供されており、一部の組織にとってはかなりの費用がかかる可能性があります。</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="notion">Notion<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#notion" class="hash-link" aria-label="Notion への直接リンク" title="Notion への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/it-support/notion.png" alt="notion" class="img_CfaS"></p>
<p>Notionは、メモ、タスク、ウィキ、データベースを含むあらゆるものを管理するためのオールインワンワークスペースです。これは、高性能なチーム向けに構築されたシンプルで高速かつ強力なツールです。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="利点-3">利点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E5%88%A9%E7%82%B9-3" class="hash-link" aria-label="利点 への直接リンク" title="利点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>多用途性</strong>：オールインワンワークスペースとして、Notionはメモ、タスク、ウィキ、データベースなどさまざまなコンテンツタイプを管理できる多目的プラットフォームを提供します。この多目的性は、1つのアプリケーション内でさまざまな作業の効率を向上させることができます。</p>
</li>
<li>
<p><strong>使いやすさ</strong>：シンプルで高速と評されるNotionは、ユーザーフレンドリーなインターフェースを持つ可能性が高く、迅速な導入と使いやすさを実現します。これにより、学習カーブが低減し、生産性が向上します。</p>
</li>
<li>
<p><strong>カスタマイズ性</strong>：Notionのプラットフォームは一般的に高度なカスタマイズが可能で、ユーザーは</p>
</li>
</ol>
<p>個人の使用またはチームの協力に合わせて調整できます。</p>
<ol start="4">
<li>
<p><strong>協力機能</strong>：高性能なチーム向けに構築されたNotionは、効果的なチームワーク、情報共有、プロジェクト管理を促進する堅牢な協力機能を持っていることが期待されます。</p>
</li>
<li>
<p><strong>統合機能</strong>：Notionは他のツールとの統合がうまく行きがちで、さまざまなアプリケーションやサービスを使用するチームにとって便利です。</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-3">欠点<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E6%AC%A0%E7%82%B9-3" class="hash-link" aria-label="欠点 への直接リンク" title="欠点 への直接リンク">​</a></h3>
<ol>
<li>
<p><strong>新規ユーザーにとっては圧倒的かもしれない</strong>：Notionの多機能性とカスタマイズオプションの幅広さは、新規ユーザーにとっては圧倒的である可能性があり、よりシンプルなプラグアンドプレイ型のソリューションを求めているユーザーには適していないかもしれません。</p>
</li>
<li>
<p><strong>オフライン時の機能制限</strong>：Notionの機能はオフライン時に制限されることがあり、インターネット接続が不安定またはない場所でワークスペースにアクセスする必要があるユーザーにとっては欠点となる可能性があります。</p>
</li>
<li>
<p><strong>大規模なデータベースでのパフォーマンスの問題</strong>：データベースが大きくなるにつれて、Notionではパフォーマンスの問題が報告されており、読み込み時間の遅延やラグなどが発生することがあり、効率を妨げる可能性があります。</p>
</li>
<li>
<p><strong>データのエクスポートオプションの制約</strong>：Notionは情報の蓄積と整理には優れていますが、このデータをNotionからエクスポートすることが時々難しいことがあり、データの移植性に問題を引き起こす可能性があります。</p>
</li>
<li>
<p><strong>プレミアム機能のコスト要因</strong>：Notionは無料のティアを提供していますが、より高度な機能と大規模な使用制限は有料プランに制約されており、予算に敏感な個人や小規模なチームにとって考慮すべき要因となる可能性があります。</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-flow">ILLA Flow<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#illa-flow" class="hash-link" aria-label="ILLA Flow への直接リンク" title="ILLA Flow への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/it-support/connector.png" alt="connector" class="img_CfaS"></p>
<p>ILLA Flowは、ビジネスプロセスを自動化するのに役立つローコードワークフローツールです。これは、高性能なチーム向けに構築されたシンプルで高速かつ強力なツールです。</p>
<p>ドラッグアンドドロップインターフェースを使用して独自のワークフローを構築し、トリガーのスケジューリングまたはWebhookトリガーを使用してワークフローを実行できます。</p>
<p>スムーズなドラッグアンドドロップの体験により、統合の問題を心配することなく迅速にワークフローを構築できます。システム全体はJavaScriptによって駆動されており、柔軟性を確保しながら開発者向けにもフレンドリーです。</p>
<p>ILLA Flowは、スケジュールトリガーやWebhookトリガーを含む複数のトリガータイプをサポートしています。</p>
<p>ILLA Flowを使用して、次のようなことができます：</p>
<ul>
<li>新しいユーザーが登録したときにSlackにメッセージを送信する</li>
<li>GitHubのスターの数を毎日レポートする</li>
<li>毎日会議室を予約する</li>
<li>...</li>
</ul>
<p>エンジニアは、ILLA Flowを使用して多くのタスクを自動化しています：</p>
<ul>
<li>データベースからビジネスデータを読み取り、毎日Slackに送信する</li>
<li>CI/CDレポートシステムを構築する</li>
<li>警告が発生した場合にメールを送信する</li>
<li>...</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/it-support#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>ITサポートにおいて、シンプルで使いやすいツールは効率を向上させるための鍵です。自分のニーズに合った適切なツールを選ぶことは重要です。皆さんが有用なツールを見つけて優れたITサポートになることを願っています。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ワークフロー" term="ワークフロー"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024年の市民開発者にとっての最高のツール]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool"/>
        <updated>2024-01-23T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[最近の数十年間、アプリケーション開発はITプログラマーの専売特許でしたが、これは将来変わるかもしれません！]]></summary>
        <content type="html"><![CDATA[<p>最近の数十年間、アプリケーション開発はITプログラマーの専売特許でしたが、これは将来変わるかもしれません！</p>
<p>競争がますます激化するビジネス要求を考えると、企業が発展する唯一の方法は、追加費用をかけずにビジネス能力を向上させ、デリバリースピードを加速することです。</p>
<p>企業が直面するデジタルの課題に対処するために、市民開発（CD）は非技術的なビジネスユーザー（市民開発者とも呼ばれる）の道を開きます。IT承認済みのLow Code/No Code（LCNC）プラットフォームを使用すると、効率的で柔軟でユーザーフレンドリーな環境で企業アプリケーションを直感的に構築できます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="市民開発の価値">市民開発の価値<a href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool#%E5%B8%82%E6%B0%91%E9%96%8B%E7%99%BA%E3%81%AE%E4%BE%A1%E5%80%A4" class="hash-link" aria-label="市民開発の価値 への直接リンク" title="市民開発の価値 への直接リンク">​</a></h2>
<p>プロジェクトマネジメント協会（PMI）によれば、市民開発はこの新しい標準を破壊する要因となり、多くの低コード/ノーコードプラットフォームはすでにそのクライアントやパートナーにこれを実証しています。実際の使用では、LCNCは最小のコストでアプリケーション開発の複雑さを大幅に削減する能力を証明しています。これまでに多くの組織が市民開発を採用し、迅速な変化を刺激し、コミュニティ全体で独自の足跡を作成し、全体の生産性を向上させるために運用しています。特に今日のデジタルの世界では、低コード/ノーコードは新しいデジタル空間が提供する無限の可能性を活用し、イノベーションを簡単に引き起こすのに重要な役割を果たしています。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="おすすめのツール">おすすめのツール<a href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool#%E3%81%8A%E3%81%99%E3%81%99%E3%82%81%E3%81%AE%E3%83%84%E3%83%BC%E3%83%AB" class="hash-link" aria-label="おすすめのツール への直接リンク" title="おすすめのツール への直接リンク">​</a></h2>
<p>基本的なコンピュータースキルを持つ市民開発者として、仕事をサポートするためのさまざまなツールが必要です。仕事を効率化するためのいくつかのおすすめのツールを以下に示します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud">ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool#illa-cloud" class="hash-link" aria-label="ILLA Cloud への直接リンク" title="ILLA Cloud への直接リンク">​</a></h3>
<p>ビジネスロジック指向のツールを構築し、複雑なアニメーションや派手なページを追求せずに美しいUIだけが必要な場合、ILLA Cloudは開発と構築におすすめです。</p>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、新しいプロジェクトを作成する必要なく、シンプルなJSで内部ツールを迅速に構築できるノーコードツールです。</p>
<ul>
<li>ウェブ＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
<li>CRM</li>
</ul>
<p>ILLA Cloudを使用すると、コードを書く必要なくドラッグアンドドロップで迅速にツールを構築でき、作業効率が10倍向上します。また、チーム共同作業をネイティブでサポートし、同僚と一緒に編集と構築ができます。</p>
<p>ILLA Cloudにはコネクタの機能も備わっており、使用する他のSaaSツールに迅速に接続できます。スケジュールされたタスク、Webhooks、パラメーターの受け渡しなどもサポートしています。</p>
<p>ILLA CloudにはAIエージェント機能も含まれており、テキスト分析、音声分析、画像分析などのAI駆動ツールを迅速に構築するのに役立ちます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="webflow">Webflow<a href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool#webflow" class="hash-link" aria-label="Webflow への直接リンク" title="Webflow への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/webflow.png" alt="webflow" class="img_CfaS"></p>
<p>高いUI要件を持つユーザー向けツールを構築し考えている場合、複雑なアニメーションやクールなページを追求している場合、Webflowは開発と構築におすすめです。</p>
<p>Webflowは自然な形で多くのアニメーション機能と強力なUI設定をサポートしており、非常に短い時間で見事なページを構築できます。また、モバイルデバイスに自然に適応します。</p>
<p>Webflowのコミュニティには、eコマース、ブログ、企業のウェブサイトなど、さまざまなビジネスニーズをサポートするテンプレートが豊富にあります。</p>
<p>Webflowには、ウェブサイト訪問者を管理するためのCRMバックエンドも含まれており、基本的な管理タスクのための二次開発が不要になり、迅速に使用できるようになっています。</p>
<p>もちろん、Webflowは運用コストなしでホスティングサービスもサポートしています。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="supabase">Supabase<a href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool#supabase" class="hash-link" aria-label="Supabase への直接リンク" title="Supabase への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/supabase.png" alt="supabase" class="img_CfaS"></p>
<p>オンラインサイトを構築した場合、ユーザー向けの部分にはWebflow、内部ツールにはILLA Cloudを使用します。しかし、まだ重要な要素が欠けています。</p>
<p>ビジネス開発のデータには、それを保存する場所が必要です。</p>
<p>Supabaseはストレージにおすすめで、以下の利点を提供しています。</p>
<ul>
<li>開発者向けにフレンドリーで、非常に複雑な要件からシンプルなビジネス要件まで対応しています。</li>
<li>ビジネスの急速な成長に伴う技術的な問題を心配する必要はありません。事業が成長するにつれて動的に拡張します。</li>
<li>異なるテクノロジーとの互換性をサポートするさまざまなSDKをサポートしています。</li>
<li>SupabaseはPostgreSQLをベースにしているため、SQLを使用した簡単なデータ操作が可能です。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/best-citizen-developer-tool#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>市民開発者にとって、シンプルで使いやすいツールは作業効率を向上させるための鍵です。自分のニーズに合った適切なツールを選ぶことは重要です。皆さんが有用なツールを見つけ、優れた市民開発者になれることを願っています。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="市民開発者" term="市民開発者"/>
        <category label="市民開発" term="市民開発"/>
        <category label="市民開発者ツール" term="市民開発者ツール"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Appsmith vs Retool: オープンソースの低コードプラットフォーム、どちらが優れている？]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool"/>
        <updated>2024-01-23T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[低コード開発プラットフォームの常に進化する風景で、AppsmithとRetoolは強力な競合相手として登場し、それぞれユニークな機能と能力を提供しています。これらのプラットフォームは、アプリケーション開発を簡素化し、組織がカスタムの内部ツールを効率的に構築できるようにすることを目指しています。この包括的な比較では、両方のプラットフォームの強みと弱みを探り、低コード開発ニーズに対する情報提供をお手伝いするために、トップティアの代替案であるILLA Cloudを紹介します。]]></summary>
        <content type="html"><![CDATA[<p>低コード開発プラットフォームの常に進化する風景で、AppsmithとRetoolは強力な競合相手として登場し、それぞれユニークな機能と能力を提供しています。これらのプラットフォームは、アプリケーション開発を簡素化し、組織がカスタムの内部ツールを効率的に構築できるようにすることを目指しています。この包括的な比較では、両方のプラットフォームの強みと弱みを探り、低コード開発ニーズに対する情報提供をお手伝いするために、トップティアの代替案であるILLA Cloudを紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud-最高のソフトウェア開発ツール">ILLA Cloud: 最高のソフトウェア開発ツール<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#illa-cloud-%E6%9C%80%E9%AB%98%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB" class="hash-link" aria-label="ILLA Cloud: 最高のソフトウェア開発ツール への直接リンク" title="ILLA Cloud: 最高のソフトウェア開発ツール への直接リンク">​</a></h2>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、新しいプロジェクトを作成する必要なく、簡単なJavaScriptで内部ツールを迅速に構築できる、使いやすい低コードツールです。</p>
<ul>
<li>Web＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/illa.png" alt="illa" class="img_CfaS"></p>
<p>コンポーネントライブラリでの構築と比較して、ILLA Cloudは10倍速いツールの構築を可能にし、チーム内での共同編集をサポートします。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="appsmith">Appsmith<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#appsmith" class="hash-link" aria-label="Appsmith への直接リンク" title="Appsmith への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/appsmith.png" alt="appsmith" class="img_CfaS"></p>
<p>Appsmithは、インド拠点のオープンソースプラットフォームで、低コード開発分野で急速に認知されています。Retoolアプリケーションビルダーの多くの側面と機能の機能対応を誇り、強力な競合相手です。ただし、Appsmithを特徴付ける特定の特性について詳しく調べることが重要です。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="appsmithの利点">Appsmithの利点：<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#appsmith%E3%81%AE%E5%88%A9%E7%82%B9" class="hash-link" aria-label="Appsmithの利点： への直接リンク" title="Appsmithの利点： への直接リンク">​</a></h3>
<ul>
<li>オープンソースの利点：Appsmithはオープンソースプラットフォームで、開発者にプラットフォームのソースコードへのアクセスを提供します。このオープンな性質は、協力とカスタマイズを奨励し、開発環境に対するより大きな制御が必要な人々にとって好ましい選択肢です。</li>
<li>クラウドとオンプレミスの展開：Appsmithは、クラウドと完全なオンプレミスの展開をサポートすることにより、組織がセキュリティとコンプライアンスの要件に合致するホスティングオプションを選択できる柔軟性を提供します。</li>
<li>アクティブな開発者コミュニティ：Appsmithは、Githubなどのプラットフォームで成長している開発者コミュニティを楽しんでいます。このコミュニティのサポートにより、プラットフォームは現在のユーザーのニーズに合わせて最新で反応性のある状態を保つため、継続的な改善、タイムリーなバグ修正、新機能の開発が行われます。</li>
<li>幅広い統合オプション：Appsmithは、さまざまなデータベースとAPIとの統合を容易にし、ビジネスが必要なデータリソースにシームレスに接続できるようにします。この多様性により、アプリケーションが必要なデータリソースと連携できることが保証されます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="appsmithのデメリット">Appsmithのデメリット：<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#appsmith%E3%81%AE%E3%83%87%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88" class="hash-link" aria-label="Appsmithのデメリット： への直接リンク" title="Appsmithのデメリット： への直接リンク">​</a></h3>
<p>化されたワークフローが不足：顕著な制約の1つは、Appsmith内での自動化ワークフローやスケジュールされたジョブのサポートがないことです。これは、内部ツールで複雑な自動化プロセスを必要とする組織にとっては欠点となる可能性があります。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="retool-内部ツール作成のパイオニア">Retool: 内部ツール作成のパイオニア<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#retool-%E5%86%85%E9%83%A8%E3%83%84%E3%83%BC%E3%83%AB%E4%BD%9C%E6%88%90%E3%81%AE%E3%83%91%E3%82%A4%E3%82%AA%E3%83%8B%E3%82%A2" class="hash-link" aria-label="Retool: 内部ツール作成のパイオニア への直接リンク" title="Retool: 内部ツール作成のパイオニア への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/retool.png" alt="retool" class="img_CfaS"></p>
<p>Retoolは、カスタム内部ソフトウェアを作成するための確立された開発プラットフォームです。直感的なドラッグアンドドロップのアプリケーションビルダーとプレビルトのUIコンポーネントライブラリを提供しています。ただし、その強みと短所の両方を認識することが重要です。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="retoolの利点">Retoolの利点：<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#retool%E3%81%AE%E5%88%A9%E7%82%B9" class="hash-link" aria-label="Retoolの利点： への直接リンク" title="Retoolの利点： への直接リンク">​</a></h3>
<ul>
<li>ドラッグ＆ドロップのアプリケーションビルダー：Retoolは直感的なドラッグ＆ドロップのアプリケーションビルダーを提供し、さまざまな技術的な専門知識を持つユーザーにアクセス可能にします。</li>
<li>統合ライブラリ：豊富な統合ライブラリを備えているため、RetoolはデータベースとAPIへの接続プロセスを簡素化し、ビジネスがデータを効率的にアクセスおよび操作できるようにします。</li>
<li>細かいアクセス制御：Retoolは役割ベースのアクセス制御をサポートし、セキュアな環境を提供し、ユーザーが適切なツールとデータに適切なアクセス権を持っていることを確認します。</li>
<li>エンタープライズ機能：Retoolはシングルサインオン（SSO）、監査ログ記録、専任のエンタープライズサポートなどの機能を提供し、エンタープライズのニーズを満たします。</li>
<li>ネイティブモバイルアプリ：Retool Mobileは、Retool環境内でネイティブiOSおよびAndroidモバイルアプリを構築するための専用ソリューションを提供します。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="retoolのデメリット">Retoolのデメリット：<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#retool%E3%81%AE%E3%83%87%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88" class="hash-link" aria-label="Retoolのデメリ�ット： への直接リンク" title="Retoolのデメリット： への直接リンク">​</a></h3>
<ul>
<li>コードの拡張性が限られています：Retoolのコードの拡張性は主にJavaScriptをサポートしており、さまざまなコーディングオプションを必要とする開発者には課題があるかもしれません。</li>
<li>パフォーマンスが低い：ユーザーは、ブラウザベースのコード実行、単一ステップクエリ、グローバルエッジキャッシングの不足などに起因するRetoolアプリケーションのパフォーマンス問題を頻繁に報告しています。</li>
<li>ワークフローとスケジュールジョブが限られています：Retoolのワークフローオファリングはまだベータ版であり、完全な機能が不足しています。さらに、それはRetool Cloudでのみ利用可能で、セルフホステッドの顧客にアクセスが制限されています。</li>
<li>SQL専用の生成AI：Retoolの生成AI機能はSQLに制限されており、さまざまな言語とユースケースでのコード生成と最適化に対する開発者の要件を完全に満たす可能性がありません。</li>
<li>レガシーオンプレミス展開：Retoolのオンプレミス展開モデルはリソースを消費し、ビジネスがツールの開発からリソースを逸 divertしさせる複雑さを持っています。</li>
<li>高価な価格設定：Retoolは、多くの組織にとって高価なプラットフォーム手数料を採用しており、柔軟性に欠けています。</li>
<li>機能の遅い展開：新機能は時折遅く展開され、特にオンプレミスの顧客にとっては最新のテクノロジーを活用するのに遅れが生じることがあります。</li>
<li>クローズドソースコード：Retoolはクローズドソースであり、コード監査と拡張性オプションを制限しています。</li>
<li>米国クラウドのみ：Retool Cloudは米国でホスティングされており、米国外のユーザーとデータセンターに対するパフォーマンス低下を引き起こす可能性があります。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudはベストオブ両方を提供します">ILLA Cloudはベストオブ両方を提供します<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#illa-cloud%E3%81%AF%E3%83%99%E3%82%B9%E3%83%88%E3%82%AA%E3%83%96%E4%B8%A1%E6%96%B9%E3%82%92%E6%8F%90%E4%BE%9B%E3%81%97%E3%81%BE%E3%81%99" class="hash-link" aria-label="ILLA Cloudはベストオブ両方を提供します への直接リンク" title="ILLA Cloudはベストオブ両方を提供します への直接リンク">​</a></h2>
<p>ILLAは、内部ツールの開発において最も速いプラットフォームの一つです。これにより、開発者はウェブデザインやその他の仕事にかける貴重な時間を節約できます。開発者がますますILLAを選ぶ主な理由の1つは、そのライブラリです。このプラットフォームは、コードコンポーネントの豊富なコレクションを簡単にドラッグアンドドロップして複雑なアプリケーションを数分で構築できます。</p>
<p>また、アプリケーションプログラムインターフェースを使用して、選択したデータベースとILLAを結合することもできます。このプラットフォームはバックエンドとフロントエンドのデータを優れた方法で統合できます。その結果、開発者は基本的なデータ呼び出しで広範な情報のやり取りを実現できます。</p>
<p>どの開発者も、ILLAを選ぶ理由が2つあります。自由と他の開発者と同時に作業できる機会です。まず第一に、開発者はどこでもJavaScriptを書くことができます。これにより、仕事の柔軟性が向上し、多様な結果が得られます。</p>
<p>第二に、開発者はILLA Builderで他のプロフェッショナルとリアルタイムでリンクを共有できます。したがって、彼らは一緒に作業しながらお互いの作業を編集し、コメントすることができます。言い換えれば、開発者は楽しく協力的なワークスペースで作業できます。当然、これにより迅速で改善された結果が得られます。</p>
<p>最後に、開発者は常にILLAクラウドを使用して作業を持ち歩くことができます。どんなデバイスからでもクラウドにアクセスし、ILLAのユーザーインターフェースに移動できます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="illaの主要な特徴">ILLAの主要な特徴<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#illa%E3%81%AE%E4%B8%BB%E8%A6%81%E3%81%AA%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="ILLAの主要な特徴 への直接リンク" title="ILLAの主要な特徴 への直接リンク">​</a></h3>
<p>ILLAの主要な特徴は次のとおりです：</p>
<ul>
<li>ILLAにはReactコンポーネントの使用可能なライブラリがあります。</li>
<li>ILLAデザインツールにはTypeScriptのタイピング機能があり、予測可能な静的タイピングをサポートしています。</li>
<li>ILLAデザインは、開発者の生産性向上に役立つクイックで簡単なインポートを提供します。</li>
<li>美しく設計された強力なテーマとコンポーネントにアクセスできます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="アップグレードされたillaの特徴">アップグレードされたILLAの特徴<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#%E3%82%A2%E3%83%83%E3%83%97%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89%E3%81%95%E3%82%8C%E3%81%9Filla%E3%81%AE%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="アップグレードされたILLAの特徴 への直接リンク" title="アップグレードされたILLAの特徴 への直接リンク">​</a></h3>
<p>ILLAのいくつかのアップグレードされた特徴は次のとおりです：</p>
<ul>
<li>任意のデータソースとの迅速な統合</li>
<li>ILLAを主要なデータベースまたは他のデータソースに接続できます。このツールを使用すると、バックエンドからフロントエンドコンポーネントを使用してデータを取得できます。</li>
<li>効率の向上のためのリアルタイムコラボレーション</li>
<li>ILLA Builderは開発者がプロジェクトで協力して作業できるようにします。彼らは異なる開発者にリンクを作成し共同編集し、リアルタイムで他のチームメンバーとコミュニケーションを取ることができます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="あなたのニーズに合ったレスポンシブなuiライブラリ">あなたのニーズに合ったレスポンシブなUIライブラリ<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AE%E3%83%8B%E3%83%BC%E3%82%BA%E3%81%AB%E5%90%88%E3%81%A3%E3%81%9F%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B7%E3%83%96%E3%81%AAui%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA" class="hash-link" aria-label="あなたのニーズに合ったレスポンシブなUIライブラリ への直接リンク" title="あなたのニーズに合ったレスポンシブなUIライブラリ への直接リンク">​</a></h3>
<p>ILLA Builderには、すべての開発者のニーズに対応する多くのコンポーネントも含まれています。したがって、開発者は望む内部ツールを迅速に開発するためにドラッグアンドドロップビルダーにアクセスできます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/appsmith-vs-retool#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>総括すると、AppsmithとAppsmithはどちらも優れた低コードプラットフォームで、アプリケーションの迅速かつ効率的な構築をサポートできます。ただし、それぞれ独自の強みと弱みがあり、どちらが適切かを決定する前に自身のニーズを考慮することが重要です。強力な管理機能を備えた手を動かすアプローチをお求めの場合、Tooljetが適しているかもしれません。一方、コーディングの経験が必要ないユーザーフレンドリーなプラットフォームをお求めの場合、Appsmithが適しているかもしれません。最終的に、それはあなたがどのような開発者で、どのようなアプリケーションを構築したいかにかかっています。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="tooljet" term="tooljet"/>
        <category label="appsmith" term="appsmith"/>
        <category label="retool" term="retool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tooljet vs Appsmitm: Which open-source low-code platform is better?]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith"/>
        <updated>2024-01-23T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[If you’re considering using a low-code development platform to build applications, you may wonder whether Tooljet or Appsmith is the better option]]></summary>
        <content type="html"><![CDATA[<p>If you’re considering using a low-code development platform to build applications, you may wonder whether Tooljet or Appsmith is the better option. Both are open-source platforms with various features to choose from, but they each have their own strengths and weaknesses. This blog post will compare Tooljet and Appsmith to help you decide which is suitable for your needs.</p>
<p>Tooljet is excellent for those who prefer working with visual elements and drag-and-drop tools. Its user interface allows you to quickly create applications by simply dragging and dropping different components into place, making it easy and fast to build applications from the ground up. Additionally, Tooljet has powerful management features that allow you to collaborate with other users in real-time and monitor project progress.</p>
<p>Appsmith is an excellent option for developers who want more control over their applications. It offers a wide range of great features, such as API integration, triggers, and scripts that can add complex functionality to your apps. Moreover, Appsmith also provides an intuitive code editor, making it easy to write custom code in your projects if needed.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud-the-best-software-development-tool">ILLA Cloud: The best software development tool<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#illa-cloud-the-best-software-development-tool" class="hash-link" aria-label="ILLA Cloud: The best software development tool への直接リンク" title="ILLA Cloud: The best software development tool への直接リ�ンク">​</a></h2>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>
<ul>
<li>Web &amp; App Admin Panel</li>
<li>Data Dashboard</li>
<li>Customized B2B Tools</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/illa.png" alt="illa" class="img_CfaS"></p>
<p>Compared to building with a component library, ILLA Cloud enables 10x faster tool construction and supports collaborative editing within teams.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="tooljet-and-appsmith-are-two-popular-software-development-tools">Tooljet and Appsmith are two popular software development tools.<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#tooljet-and-appsmith-are-two-popular-software-development-tools" class="hash-link" aria-label="Tooljet and Appsmith are two popular software development tools. への直接リンク" title="Tooljet and Appsmith are two popular software development tools. への直接リンク">​</a></h2>
<p>Tooljet and Appsmith are two extremely powerful software development tools that enable developers to create applications with data sources quickly and efficiently without too much hand coding. Both tools use intuitive drag-and-drop elements, code tools, data connectors, and a visual development process to help streamline business process management.</p>
<p>With their extensive feature sets, both Tooljet and Appsmith have successfully served many developers as they continue to rapidly develop data-driven applications. They prove time and time again that they are essential tools for any software developer with coding knowledge looking to create advanced data-driven applications in just a few simple steps.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="tooljet---better-for-those-who-want-more-control-over-their-project">Tooljet - better for those who want more control over their project<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#tooljet---better-for-those-who-want-more-control-over-their-project" class="hash-link" aria-label="Tooljet - better for those who want more control over their project への直接リンク" title="Tooljet - better for those who want more control over their project への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/tooljet.png" alt="tooljet" class="img_CfaS"></p>
<p>Both Tooljet and Appsmith are powerful for citizen developers to do rapid application development. Tooljet provides flexibility with a more hands-on approach, allowing business users the control they need to create total admin panels with custom UI components.</p>
<p>It offers an intuitive user interface that allows users to rapidly design, develop, and manage applications through a series of drag-and-drop tools, visual elements, and data sources. Beyond its easy UI, Tooljet also boasts powerful features such as real-time collaboration, comprehensive project management capabilities, and built-in components.</p>
<p>This comprehensive suite of features makes it easier for developers to quickly build robust apps without worrying about coding from scratch. Tooljet also supports various coding languages, including Java, JavaScript, Python, and Ruby, giving developers even more freedom when creating custom applications. Additionally, Tooljet has extensive documentation for users looking for additional support when working on their projects.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="pros-of-tooljet">Pros of Tooljet:<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#pros-of-tooljet" class="hash-link" aria-label="Pros of Tooljet: への直接リンク" title="Pros of Tooljet: への直接リンク">​</a></h3>
<ul>
<li>Intuitive and easy-to-use user interface that makes it simple to create applications quickly with drag-and-drop tools</li>
<li>Powerful management features to help collaborate with other users in real-time and monitor project progress</li>
<li>Built-in analytics and reporting tools to measure the performance, usage, and reliability of applications</li>
<li>A feature-rich platform that supports webhooks, API integration, and custom code for added complexity</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="cons-of-tooljet">Cons of Tooljet:<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#cons-of-tooljet" class="hash-link" aria-label="Cons of Tooljet: への直接リンク" title="Cons of Tooljet: への直接リンク">​</a></h3>
<ul>
<li>The visual approach means it can be difficult to troubleshoot problems without an understanding of the underlying code</li>
<li>Visual elements are limited, which may not provide enough flexibility for more complex projects</li>
<li>Limited support for third-party integrations, which could restrict the use cases for certain applications</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="appsmith---more-user-friendly">Appsmith - more user-friendly<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#appsmith---more-user-friendly" class="hash-link" aria-label="Appsmith - more user-friendly への直接リンク" title="Appsmith - more user-friendly への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/appsmith.png" alt="appsmith" class="img_CfaS"></p>
<p>On the other hand, Appsmith is ideal for those who don’t have coding experience but still want to craft an app - it makes app development more accessible than ever with user-friendly tools that require no technical knowledge. Appsmith is an intuitive, user-friendly low-code platform for non-technical users to build robust data-driven applications quickly. With a simple drag-and-drop interface, you can easily create custom UI components and manage your projects with comprehensive project management capabilities.</p>
<p>Appsmith also offers advanced security features such as role-based access control to ensure that only authorized personnel access sensitive information. Additionally, Appsmith integrates with third-party services and supports webhooks, API integration, and custom code, which makes it a great choice for creating robust applications without the need to code from scratch.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="pros-of-appsmith">Pros of Appsmith:<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#pros-of-appsmith" class="hash-link" aria-label="Pros of Appsmith: への直接リンク" title="Pros of Appsmith: への直接リンク">​</a></h3>
<ul>
<li>Highly customizable features so developers can add complex functionality to their apps easily</li>
<li>Intuitive code editor makes it easy to write custom code into your projects if needed</li>
<li>Supports multiple programming languages such as JavaScript, HTML5, CSS3, TypeScript, etc.</li>
<li>Flexible API integration allows users to connect various services together quickly and securely</li>
<li>A wide range of predefined templates and components make it easier to create new applications from scratch</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="cons-of-appsmith">Cons of Appsmith:<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#cons-of-appsmith" class="hash-link" aria-label="Cons of Appsmith: への直接リンク" title="Cons of Appsmith: への直接リンク">​</a></h3>
<ul>
<li>Not as beginner-friendly compared to other low-code platforms, which could limit its usefulness for certain users</li>
<li>Code changes can be tricky as they require manual adjustments every time they are made</li>
<li>More expensive than Tooljet, which may not make it a viable option for some budgets</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud-offers-the-best-of-both-worlds">ILLA Cloud offers the best of both worlds<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#illa-cloud-offers-the-best-of-both-worlds" class="hash-link" aria-label="ILLA Cloud offers the best of both worlds への直接リンク" title="ILLA Cloud offers the best of both worlds への直接リンク">​</a></h2>
<p>ILLA is one of the fastest platforms for internal tool development. It saves developers precious time on web design and other aspects of their job. One of the main reasons developers are increasingly choosing ILLA is the library. The platform has conjured a rich collection of code components that you can simply drag and drop and build complex applications within minutes.</p>
<p>You can also use application programming interfaces to join ILLA with a database of your choice. The platform can excellently integrate back-end and front-end data. As a result, developers can make vast information interactions possible with basic data calls.</p>
<p>Any developer will love ILLA for two reasons- freedom and the chance to work simultaneously with other developers. Firstly, developers can write JavaScript wherever they want. This permits more flexibility in their job and increased variety in results.</p>
<p>Secondly, developers can share links in ILLA Builder with other professionals in real time. Consequently, they can edit and comment on each other’s work as they go along. In other words, developers get to work in a fun and collaborative workspace. Naturally, this yields faster and improved results.</p>
<p>Lastly, developers can always carry their work with them when using ILLA cloud. Just one click from any device will give them access to the cloud and bring them to ILLA’s user interface.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="key-features-of-illa">Key features of ILLA<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#key-features-of-illa" class="hash-link" aria-label="Key features of ILLA への直接リンク" title="Key features of ILLA への直接リンク">​</a></h3>
<p>Here are the key features of ILLA you must know:</p>
<ul>
<li>ILLA has a ready-to-use library for React components.</li>
<li>Most amazingly, the ILLA design tool has a typescript typing feature and supports predictable static typing.</li>
<li>ILLA Design provides quick and easy import, which helps in improving developers’ productivity.</li>
<li>You can access beautifully designed and powerful themes and components.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="upgraded-illa-features">Upgraded ILLA features<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#upgraded-illa-features" class="hash-link" aria-label="Upgraded ILLA features への直接リンク" title="Upgraded ILLA features への直接リンク">​</a></h3>
<p>Here are some upgraded features of ILLA that you must know:</p>
<ul>
<li>Quick integration with any data source</li>
<li>You can connect ILLA to any mainstream database or any other data source. This tool allows you to get data from the backend using front-end components.</li>
<li>Real-time collaboration for enhanced efficiency</li>
<li>ILLA Builder allows developers to work collaboratively on a project. They can create and share links to different developers to co-edit their tools and communicate with other team members in real time.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="responsive-ui-library-to-meet-your-needs">Responsive UI library to meet your needs<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#responsive-ui-library-to-meet-your-needs" class="hash-link" aria-label="Responsive UI library to meet your needs への直接リンク" title="Responsive UI library to meet your needs への直接リンク">​</a></h3>
<p>ILLA Builder also has numerous components to meet every developer’s needs efficiently. So, developers can access the drag-and-drop builder to develop their desired internal tools quickly.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="conclusion">Conclusion<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-appsmith#conclusion" class="hash-link" aria-label="Conclusion への直接リンク" title="Conclusion への直接リンク">​</a></h2>
<p>In conclusion, Tooljet and Appsmith are both excellent low-code platforms that can help you build applications quickly and efficiently. However, they each have their own strengths and weaknesses, so it’s important to consider your needs before deciding which one is right for you. If you’re looking for a more hands-on approach with powerful management features, then Tooljet may be the better option for you. On the other hand, if you want a user-friendly platform that doesn’t require any coding experience, then Appsmith may be the better choice. Ultimately, it all comes down to what type of developer you are and what type of application you want to build.</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="tooljet" term="tooljet"/>
        <category label="appsmith" term="appsmith"/>
        <category label="retool" term="retool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tooljet vs Retool: Which open-source low-code platform is better?]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool"/>
        <updated>2024-01-23T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[The demand for efficient and easy-to-use internal tools is on the rise, and low-code platforms have emerged as the go-to solution for businesses.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_dXVO" id="introduction">Introduction<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#introduction" class="hash-link" aria-label="Introduction への直接リンク" title="Introduction への直接リンク">​</a></h2>
<p>The demand for efficient and easy-to-use internal tools is on the rise, and low-code platforms have emerged as the go-to solution for businesses looking to streamline their internal processes. Retool and Tooljet are two popular low-code platforms that have attracted attention for their ability to build internal tools with ease. In this blog, we'll compare Retool and Tooljet, exploring their key features, use cases, and performance, and introduce ILLA Cloud as a supporting platform for app development and deployment.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud-the-best-software-development-tool">ILLA Cloud: The best software development tool<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#illa-cloud-the-best-software-development-tool" class="hash-link" aria-label="ILLA Cloud: The best software development tool への直接リンク" title="ILLA Cloud: The best software development tool への直接リンク">​</a></h2>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>
<ul>
<li>Web &amp; App Admin Panel</li>
<li>Data Dashboard</li>
<li>Customized B2B Tools</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/illa.png" alt="illa" class="img_CfaS"></p>
<p>Compared to building with a component library, ILLA Cloud enables 10x faster tool construction and supports collaborative editing within teams.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="retool">Retool<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#retool" class="hash-link" aria-label="Retool への直接リンク" title="Retool への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/retool.png" alt="retool" class="img_CfaS"></p>
<p>Retool is a widely-used low-code platform that makes it easy to build custom internal tools, including SQL GUIs and Airtable dashboards. With its extensive integration capabilities, Retool allows users to connect to various databases and APIs, making it a popular choice for developing Redis UIs and Airtable admin panels. Retool offers both self-hosted and cloud-based solutions, making it a flexible option for businesses of all sizes. However, some users may find Retool's pricing a bit steep, which has led to a search for open-source Retool alternatives.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="retools-key-features-and-use-cases">Retool's key features and use cases:<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#retools-key-features-and-use-cases" class="hash-link" aria-label="Retool's key features and use cases: への直接リンク" title="Retool's key features and use cases: への直接リンク">​</a></h3>
<ul>
<li>Extensive Integration Capabilities: Retool supports a wide range of databases and APIs, such as SQL, Redis, and Airtable, making it a popular choice for developing Redis UIs, SQL GUIs, and Airtable admin panels.</li>
<li>User Interface and Experience: Retool features a drag-and-drop interface, which enables users to build internal tools without extensive coding knowledge. The platform also provides a range of pre-built components, such as tables, forms, and charts, to speed up the development process.</li>
<li>Customizability: With Retool custom components, users can create bespoke solutions tailored to their specific needs. This feature allows for greater flexibility and control over the appearance and functionality of internal tools.</li>
<li>Security and Compliance: Retool offers robust security features, including role-based access control, audit logs, and SSO. In addition to its cloud-based solution, Retool's self-hosted and on-premise options provide businesses with even more control over their data and infrastructure.</li>
<li>Pricing: Retool offers a range of pricing plans, but its relatively higher costs may lead some users to search for more affordable open-source Retool alternatives.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="tooljet">Tooljet<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#tooljet" class="hash-link" aria-label="Tooljet への直接リンク" title="Tooljet への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/tooljet.png" alt="tooljet" class="img_CfaS"></p>
<p>Tooljet is another powerful low-code platform that enables users to build and deploy internal tools and software quickly. Like Retool, Tooljet offers a wide range of integrations, making it easy to create GUIs for Redis and MySQL, as well as handle Redis queries. Tooljet's open-source nature makes it an appealing choice for businesses looking for Retool alternatives. In addition to its ease of use and customizability, Tooljet offers a secure and compliant environment for developing internal tooling, with features like SSO and Docker support.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="tooljets-key-features-and-use-cases">Tooljet's key features and use cases:<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#tooljets-key-features-and-use-cases" class="hash-link" aria-label="Tooljet's key features and use cases: への直接リンク" title="Tooljet's key features and use cases: への直接リンク">​</a></h3>
<ul>
<li>Integration Capabilities: Like Retool, Tooljet offers a wide range of integrations, allowing users to connect to various databases and APIs, such as SQL, Redis, and Airtable. This makes it easy to create GUIs for Redis and MySQL and handle Redis queries.</li>
<li>User Interface and Experience: Tooljet provides an intuitive interface with a drag-and-drop builder, making it easy for users to create and customize their internal tools. It also includes a rich library of pre-built components to facilitate rapid development.</li>
<li>Customizability: Tooljet's open-source nature allows for greater customization and flexibility than Retool. Users can modify the source code and contribute to the platform's development, ensuring that their internal tools align with their unique requirements.</li>
<li>Security and Compliance: Tooljet prioritizes security, offering features like SSO, Docker support, and role-based access control. This ensures that your internal tools remain secure and compliant while using Tooljet.</li>
<li>Pricing: Tooljet's open-source model is free to use and modify, making it an attractive and cost-effective alternative to Retool, especially for smaller businesses or those with limited budgets.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="comparing-retool-and-tooljet">Comparing Retool and Tooljet<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#comparing-retool-and-tooljet" class="hash-link" aria-label="Comparing Retool and Tooljet への直接リンク" title="Comparing Retool and Tooljet への直接リンク">​</a></h2>
<p>When comparing Retool and Tooljet, several key factors come into play:</p>
<ul>
<li>Integration Capabilities: Both platforms offer extensive integrations, allowing users to connect to various databases and APIs, including SQL, Redis, and Airtable. While both platforms excel in this area, your choice may depend on specific integration requirements or preferences.</li>
<li>User Interface and Experience: Retool and Tooljet both provide intuitive drag-and-drop interfaces and a library of pre-built components, making it easy for users to build internal tools like Google internal tools and Airtable dashboards. Personal preferences and ease of use will play a role in determining the best option for your needs.</li>
<li>Customizability: Retool offers custom components, while Tooljet's open-source nature allows for even greater customization. Consider the level of customization required for your internal tools when choosing between the two platforms.</li>
<li>Security and Compliance: Both platforms prioritize security, with Retool providing self-hosted and on-premise options, while Tooljet offers SSO and Docker support. Evaluate your organization's specific security and compliance requirements when making a decision.</li>
<li>Pricing: Retool's pricing may be a barrier for some users, while Tooljet's open-source model offers a more budget-friendly alternative. Consider your organization's budget and financial constraints when selecting the most suitable platform.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="choosing-the-right-low-code-platform-for-your-needs">Choosing the Right Low-Code Platform for Your Needs<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#choosing-the-right-low-code-platform-for-your-needs" class="hash-link" aria-label="Choosing the Right Low-Code Platform for Your Needs への直接リンク" title="Choosing the Right Low-Code Platform for Your Needs への直接リンク">​</a></h2>
<p>To choose between Retool and Tooljet, consider the following factors:</p>
<ul>
<li>Integration Requirements: Both platforms offer extensive integration options, so your choice may depend on specific needs or preferences. Evaluate which platform best supports the databases and APIs essential to your internal tools.</li>
<li>Customizability: If custom components are a priority, Retool may be the better choice. However, if you prefer an open-source platform with greater flexibility, Tooljet could be more suitable.</li>
<li>Security and Compliance: Both Retool and Tooljet offer robust security features, so consider your specific compliance requirements when making a decision. Assess which platform best aligns with your organization's security policies and standards.</li>
<li>Budget: If you're searching for a cost-effective solution, Tooljet's open-source model may be more appealing than Retool's pricing structure. Take into account the long-term costs associated with each platform, including potential updates and maintenance.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud-offers-the-best-of-both-worlds">ILLA Cloud offers the best of both worlds<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#illa-cloud-offers-the-best-of-both-worlds" class="hash-link" aria-label="ILLA Cloud offers the best of both worlds への直接リンク" title="ILLA Cloud offers the best of both worlds への直接リンク">​</a></h2>
<p>ILLA is one of the fastest platforms for internal tool development. It saves developers precious time on web design and other aspects of their job. One of the main reasons developers are increasingly choosing ILLA is the library. The platform has conjured a rich collection of code components that you can simply drag and drop and build complex applications within minutes.</p>
<p>You can also use application programming interfaces to join ILLA with a database of your choice. The platform can excellently integrate back-end and front-end data. As a result, developers can make vast information interactions possible with basic data calls.</p>
<p>Any developer will love ILLA for two reasons-freedom and the chance to work simultaneously with other developers. Firstly, developers can write JavaScript wherever they want. This permits more flexibility in their job and increased variety in results.</p>
<p>Secondly, developers can share links in ILLA Builder with other professionals in real time. Consequently, they can edit and comment on each other’s work as they go along. In other words, developers get to work in a fun and collaborative workspace. Naturally, this yields faster and improved results.</p>
<p>Lastly, developers can always carry their work with them when using ILLA cloud. Just one click from any device will give them access to the cloud and bring them to ILLA’s user interface.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="key-features-of-illa">Key features of ILLA<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#key-features-of-illa" class="hash-link" aria-label="Key features of ILLA への直接リンク" title="Key features of ILLA への直接リンク">​</a></h3>
<p>Here are the key features of ILLA you must know:</p>
<ul>
<li>ILLA has a ready-to-use library for React components.</li>
<li>Most amazingly, the ILLA design tool has a typescript typing feature and supports predictable static typing.</li>
<li>ILLA Design provides quick and easy import, which helps in improving developers’ productivity.</li>
<li>You can access beautifully designed and powerful themes and components.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="upgraded-illa-features">Upgraded ILLA features<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#upgraded-illa-features" class="hash-link" aria-label="Upgraded ILLA features への直接リンク" title="Upgraded ILLA features への直接リンク">​</a></h3>
<p>Here are some upgraded features of ILLA that you must know:</p>
<ul>
<li>Quick integration with any data source</li>
<li>You can connect ILLA to any mainstream database or any other data source. This tool allows you to get data from the backend using front-end components.</li>
<li>Real-time collaboration for enhanced efficiency</li>
<li>ILLA Builder allows developers to work collaboratively on a project. They can create and share links to different developers to co-edit their tools and communicate with other team members in real time.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="responsive-ui-library-to-meet-your-needs">Responsive UI library to meet your needs<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#responsive-ui-library-to-meet-your-needs" class="hash-link" aria-label="Responsive UI library to meet your needs への直接リンク" title="Responsive UI library to meet your needs への直接リンク">​</a></h3>
<p>ILLA Builder also has numerous components to meet every developer’s needs efficiently. So, developers can access the drag-and-drop builder to develop their desired internal tools quickly.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="conclusion">Conclusion<a href="https://illacloud.github.io/illa-website/ja/blog/tooljet-vs-retool#conclusion" class="hash-link" aria-label="Conclusion への直接リンク" title="Conclusion への直接リンク">​</a></h2>
<p>In conclusion, Tooljet and Appsmith are both excellent low-code platforms that can help you build applications quickly and efficiently. However, they each have their own strengths and weaknesses, so it’s important to consider your needs before deciding which one is right for you. If you’re looking for a more hands-on approach with powerful management features, then Tooljet may be the better option for you. On the other hand, if you want a user-friendly platform that doesn’t require any coding experience, then Appsmith may be the better choice. Ultimately, it all comes down to what type of developer you are and what type of application you want to build.</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="tooljet" term="tooljet"/>
        <category label="appsmith" term="appsmith"/>
        <category label="retool" term="retool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ブロックのようにAIツールを作成する]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/build-ai-tools</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/build-ai-tools"/>
        <updated>2024-01-19T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[AIの開発は、今日では新奇性ではなく、さまざまな分野で広く適用されています。]]></summary>
        <content type="html"><![CDATA[<p>AIの開発は、今日では新奇性ではなく、さまざまな分野で広く適用されています。しかし、ほとんどの人にとって、AIは高い障壁の技術であり、実用的な仕事に効果的に適用する前に、多くの時間と労力を学ぶ必要があります。</p>
<p>私たちそれぞれには、テキストから画像への変換ツールを構築したり、仕事の連鎖に特化したツールを作成したりするなど、独自のニーズがあります。 HuggingFaceには多くの興味深いモデルがあり、これらのモデルを基に独自のAIツールを素早く作成できるようになり、私たちの仕事をより賢くすることができます！</p>
<p>以下は、ユーザーがブロックのようにAIツールを構築できるようにする推奨ツールです：</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud">ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/build-ai-tools#illa-cloud" class="hash-link" aria-label="ILLA Cloud への直接リンク" title="ILLA Cloud への直接リンク">​</a></h2>
<p>公式ウェブサイト: <a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">https://illacloud.com</a></p>
<p>Github: <a href="https://github.com/illacloud/illa-builder" target="_blank" rel="noopener noreferrer">https://github.com/illacloud/illa-builder</a></p>
<p>このオープンソースの低コードツールのスローガンは「<strong>AI駆動のビジネスツールを構築する</strong>」です。これは、ユーザーが迅速にAI駆動のツールを構築するのを支援することに焦点を当てています。ユーザーはドラッグアンドドロップを使用してページを構築し、次に3つの主要な機能を使用してAIに接続できます：</p>
<ul>
<li>ILLA AIエージェント</li>
<li>HuggingFaceのモデル</li>
<li>OpenAIのインターフェースを呼び出すためのRestAPI</li>
</ul>
<p>これにより、個人専用のAIツールを迅速に作成できます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="スマートアプリケーションの構築">スマートアプリケーションの構築<a href="https://illacloud.github.io/illa-website/ja/blog/build-ai-tools#%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%A7%8B%E7%AF%89" class="hash-link" aria-label="スマートアプリケーションの構築 への直接リンク" title="スマートアプリケーションの構築 への直接リンク">​</a></h2>
<p>ここでは、ILLA Cloudで構築されたツールを使用して、独自のテキストから画像への変換パネルを構築します。これにより、次のような利点が得られます：</p>
<p>例: <a href="https://illacloud.com/image-generator" target="_blank" rel="noopener noreferrer">https://illacloud.com/image-generator</a></p>
<ul>
<li>生成された画像は、ILLA Flow機能を使用して任意のシステムやSaaSに送信できます。</li>
<li>後で使用するモデルは、RestAPIを介してまたはHuggingFaceのモデルを介して呼び出すことができます。</li>
<li>独自のプロンプトを追加して生成されたコンテンツが十分にカスタマイズされるようにできます。</li>
<li>ILLA AIエージェント機能を使用してコンテンツのプロンプトを充実させることができます。誰もがプロンプトの作成に精通しているわけではありませんから。</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/build-ai-tools/image_generate_content.webp" alt="image_generate_content" class="img_CfaS"></p>
<p>ここではいくつかのコンポーネントを使用し、ドラッグアンドドロップを使用して独自のWebパネルを迅速に作成し、次にJavaScriptを使用してロジックを接続し、私のチームで使用できるようにしました。</p>
<p>私は2つの例を構築しました。もう1つはAI音声処理パネルです。</p>
<p>例: <a href="https://illacloud.com/ai-voice-generator" target="_blank" rel="noopener noreferrer">https://illacloud.com/ai-voice-generator</a></p>
<p>このパネルには以下の機能があります：</p>
<ul>
<li>会議の議事録の書き起こし</li>
<li>会議の議事録の生成</li>
<li>会議の議事録の翻訳と吹き替え</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/build-ai-tools/mix_ai_voice.webp" alt="mix_ai_voice" class="img_CfaS"></p>
<p>これは主にOpenAIのWhisper機能を使用しています。数千のAI機能がありますが、最も重要なのは自分に合ったものを見つけることです。ILLA Cloudを使用すると、ブロックのように迅速にAIアプリケーションを構築できます。ぜひ今すぐご利用ください！</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/build-ai-tools#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>上記の紹介からわかるように、ILLA Cloudを使用すると迅速に独自のAIツールを構築でき、ILLA Cloudには多くのコンポーネントが含まれており、ほとんどの日常ビジネスニーズに対応できます。</p>
<p>ILLAの自社開発コンポーネントライブラリは、上記の機能を柔軟にカスタマイズできるようにしました。ILLA Cloudを使用して独自のAIツールを構築してみてください！</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ai" term="ai"/>
        <category label="ツール" term="ツール"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Slackへのメッセージ送信を自動化するための最適な開発者向けツール]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/automate-send-to-slack</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/automate-send-to-slack"/>
        <updated>2024-01-17T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Slackは多くの人々の仕事における主要なコミュニケーションツールとなり、日常的に開かなければならない必須ツールの1つとなりました。強力なテキストとメディアフォーマットをサポートするSlackは、さまざまなメッセージを送信できるようにしています。開発者として、自動化が必要な多くのタスクがあります。]]></summary>
        <content type="html"><![CDATA[<p>多くの人々の仕事における主要なコミュニケーションツールとしてのSlackは、日常的に開かなければならない必須ツールの1つとなりました。強力なテキストとメディアフォーマットをサポートするSlackは、さまざまなメッセージを送信できるようにしています。開発者として、次のような多くの自動化が必要なタスクがあります：</p>
<ul>
<li><strong>コードのコンパイルとビルド</strong>: 特に大規模なプロジェクトでは、コードのコンパイルプロセスを自動化することは効率を大幅に向上させることができます。</li>
<li><strong>テスト実行</strong>: ユニットテスト、統合テスト、性能テストを自動的に実行してコードの品質を確保します。</li>
<li><strong>コードのデプロイ</strong>: CI/CDプロセスで一般的なコードの本番環境またはテスト環境へのデプロイを自動化します。</li>
<li><strong>データのバックアップとリカバリ</strong>: 定期的にデータベースとアプリケーションデータのバックアップを自動化し、必要な場合にそれを復元します。</li>
<li><strong>モニタリングとアラート</strong>: システムとアプリケーションのパフォーマンスを自動的にモニタリングし、問題が発生した場合にアラートを送信します。</li>
<li><strong>ログファイルの管理</strong>: ログの収集、分析、アーカイブを自動化します。</li>
<li><strong>環境の設定</strong>: 構成管理ツールを使用して開発、テスト、本番環境を自動的に設定および維持します。</li>
<li><strong>ドキュメンテーションの生成</strong>: コードコメントやデータベース構造から自動的にドキュメンテーションを生成します。</li>
<li><strong>データやファイルの一括処理</strong>: データ変換、移行、またはその他の一括処理タスクを自動的に実行します。</li>
<li><strong>依存関係の管理</strong>: プロジェクトの依存関係を自動的に管理して、ライブラリとフレームワークの最新かつ互換性のあるバージョンを確保します。</li>
</ul>
<p>これらのタスクは通常、JenkinsやGitHub Actionsを使用してCI/CDプロセスを実行したり、環境の設定と管理のためにAnsible、Puppetを使用したりするなど、さまざまなツールとスクリプトを使用して自動化されます。開発者はこれらのタスクを実行するために多くのツールを使用しますが、これらのツールは通常独立しています。タスクの完了後、私たち全員が更新情報について包括的な通知を評価するでしょう。</p>
<p>研究によれば、問題がSlackを介して作成時に通知されると、解決までの時間が50％短縮される可能性があると言われています。そのため、Slackへのメッセージ送信を自動化するためのツールが必要であり、さまざまなツールを確認するのではなく、1つの場所ですべてのメッセージを表示できるようにする必要があります。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/connector.png" alt="connector" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="解決方法">解決方法<a href="https://illacloud.github.io/illa-website/ja/blog/automate-send-to-slack#%E8%A7%A3%EF%BF%BD%E6%B1%BA%E6%96%B9%E6%B3%95" class="hash-link" aria-label="解決方法 への直接リンク" title="解決方法 への直接リンク">​</a></h2>
<p>ここでは、この問題を解決するためのツールとして「ILLA Flow」というツールを選択します。これは、開発者向けのコネクタツールであり、Slackへのメッセージ送信を自動化するのをサポートします。</p>
<p>ILLA Flowは、RestAPI、GraphQL、さまざまなデータベース接続、さまざまなSaaSプラットフォームの機能など、さまざまな統合を提供しており、製品をお客様が使用しているものと簡単に接続できるようにしています。ILLA Flowはまた、スケジュールされたタスク、Webhook、パラメータの受け渡しをサポートしています。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/resource.png" alt="resource" class="img_CfaS"></p>
<p>ILLA Flowの最もユニークな機能は、ワークフローにAIエージェントを組み込む能力です。これにより、通知を送信する前にOpenAIのモデルによって作成されたAIエージェントを使用して、通知をよりスマートで興味深いものにすることができます。また、AIエージェントを使用して複雑な分析にも利用でき、以前は難解だった要約を簡素化できます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/agent.png" alt="agent" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="達成した結果">達成した結果<a href="https://illacloud.github.io/illa-website/ja/blog/automate-send-to-slack#%E9%81%94%E6%88%90%E3%81%97%E3%81%9F%E7%B5%90%E6%9E%9C" class="hash-link" aria-label="達成した結果 への直接リンク" title="達成した結果 への直接リンク">​</a></h2>
<p>ILLA Flowでワークフローを作成し、そのワークフロー内でSlackのWebhookを呼び出すことで、Slackへの自動メッセージ送信を実現できます。</p>
<p>CI/CDツールの完了後、または日常的なスケジュールタスクの後、Slackでメッセージを表示できます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/connector.png" alt="connector" class="img_CfaS"></p>
<p>また、ILLA FlowをGitHubに接続し、ILLA Flowによって送信されたメッセージをGitHub Issuesで表示できます。</p>
<p>ILLA Flowをアラート監視システムに接続することもでき、アラームや異常が発生した場合にSlackでメッセージを表示できます。</p>
<p>最後に、ILLAの別製品であるILLA Builderは、Slackで送信されたリンクを介して詳細情報を表示するためにカスタムパネルを構築するのをサポートしており、通知を非常にスマートかつ詳細にします。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/automate-send-to-slack#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>日常の業務には多くの自動化シナリオがあり、ILLA Flowは開発者向けのツールです。他のほとんどの自動接続ツールは一般のユーザー向けに設計されており、開発者にとって設定が複雑になることがあります。</p>
<p>ILLA Flowを使用すると、AIエージェントとさまざまなSaaSを1クリックで統合でき、内部チームプロセスをより自動化し、通知をよりスマートにできます。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ワークフロー、Slack、自動化" term="ワークフロー、Slack、自動化"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[フリーランサーが管理パネルを作成するための最高の製品]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/boost-freelancer</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/boost-freelancer"/>
        <updated>2024-01-15T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[私は現在フリーランサーで、以前フリーランスのプラットフォームでウェブ開発のプロジェクトを手掛けました。]]></summary>
        <content type="html"><![CDATA[<p>皆さん、こんにちは。私はオーウェンです。以前はTikTokで働いていたフルスタックエンジニアです。そこでの私の役割は、短いビデオコンテンツで知られるプラットフォームの開発と、快適なユーザーエクスペリエンスの確保に関わっていました。</p>
<p>私は現在フリーランサーで、以前フリーランスのプラットフォームでウェブ開発のプロジェクトを手掛けました。このプロジェクトのフロントエンド部分はそれほど時間がかからなかったのですが、管理パネルの広範な要件には多くの時間が費やされました。</p>
<p>私のデータはすべてSupabaseに保存されており、バックエンド管理のための完全なREST APIセットを開発しました。SupabaseでのCRUD操作にほとんどの作業が関わっていることに気づきました。管理パネルを迅速に開発するためのツールが必要でした。</p>
<p>そこで、管理パネルの迅速な開発を支援するオープンソースプロジェクトを作成しました。このプロジェクトはILLA Cloudと名付けられました。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudとは何か">ILLA Cloudとは何か<a href="https://illacloud.github.io/illa-website/ja/blog/boost-freelancer#illa-cloud%E3%81%A8%E3%81%AF%E4%BD%95%E3%81%8B" class="hash-link" aria-label="ILLA Cloudとは何か への直接リンク" title="ILLA Cloudとは何か への直接リンク">​</a></h2>
<p>ILLAは開発者向けに設計されたローコードツールで、ドラッグアンドドロップのインターフェースを通じて迅速に管理パネルやダッシュボードを開発することができます。ILLA Cloudは、REST APIやGraphQLを含む一般的なデータベースやデータソースと幅広く統合します。</p>
<p>公式ウェブサイト: <a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">https://illacloud.com</a></p>
<p>ILLAを使用すると、以下のような様々なツールを迅速に構築することができます。</p>
<ul>
<li>ウェブ＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
</ul>
<p>これらはドラッグアンドドロップで簡単に作成でき、論理的な接続には最小限のJavaScriptのみが必要です。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/boost-freelancer/dashboard.png" alt="ダッシュボード" class="img_CfaS"></p>
<p>ILLAには、AI、データベース、さまざまなSaaSプラットフォームを統合するための包括的なコネクタツールセットもあります。これにより、お客様は、あなたが構築した製品を使用している製品と迅速にリンクすることができます。スケジュールされたタスク、Webhookのサポートに加えて、パラメータの渡しも可能です。</p>
<p>![コネクタ](<a href="https://cdn.illacloud.com/" target="_blank" rel="noopener noreferrer">https://cdn.illacloud.com</a></p>
<p>/illa-website/blog/boost-freelancer/connector.png)</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜilla-cloudを作成したか">なぜILLA Cloudを作成したか<a href="https://illacloud.github.io/illa-website/ja/blog/boost-freelancer#%E3%81%AA%E3%81%9Cilla-cloud%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%9F%E3%81%8B" class="hash-link" aria-label="なぜILLA Cloudを作成したか への直接リンク" title="なぜILLA Cloudを作成したか への直接リンク">​</a></h2>
<p>フリーランサーにとって、最も重要なことは疑いなく時間です。時間はお金です。管理パネルにあまり時間をかけたくないので、管理パネルを迅速に開発するのに役立つツールが必要でした。さらに、私のクライアントにとっては、使いやすさと美的魅力が最も重要です。そのため、開発にローコードツールを使用することは非常にユーザーフレンドリーな体験を提供します。</p>
<p>ドラッグアンドドロップを使用すると、コードを書くことなくSupabaseと直接やり取りする管理パネルを迅速に構築できます。このツールは管理パネルの迅速な開発に役立ち、ビジネスロジックの開発に集中することができます。</p>
<p>Supabaseを使用する理由は、非常にユーザーフレンドリーなオープンソースプロジェクトであり、バックエンドサービスの迅速な設定を支援するためです。また、そのドキュメントは非常にアクセスしやすく、私が始めるのに容易でした。</p>
<p>ILLA CloudにはSupabaseとの統合があります。SQLを使用すると、Supabase内のデータを迅速にクエリしたり変更したりすることができ、ダッシュボードや管理パネルの迅速な開発を促進します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜilla-cloudを推奨するか">なぜILLA Cloudを推奨するか<a href="https://illacloud.github.io/illa-website/ja/blog/boost-freelancer#%E3%81%AA%E3%81%9Cilla-cloud%E3%82%92%E6%8E%A8%E5%A5%A8%E3%81%99%E3%82%8B%E3%81%8B" class="hash-link" aria-label="なぜILLA Cloudを推奨するか への直接リンク" title="なぜILLA Cloudを推奨するか への直接リンク">​</a></h2>
<p>ILLAには月額20ドルのみ支払う必要があり、この料金はILLAのエディターの使用のためだけにかかります。これは非常にフリーランサーに優しいものです。あなたは数多くのクライアントとやり取りする必要があるかもしれませんが、ユーザーには支払う必要はありません。あなた自身のためだけに支払います。</p>
<p>さらに、ILLAにはすぐに使用できるドライブサービスが付属しています。開発中のファイルストレージのニーズには、ドライブサービスを直接使用することができ、迅速な開発に役立ちます。さらに、クライアントが高い使用量を持っている場合、彼らに自分のアカウントを再チャージしてもらうこともできますし、あなたに戻ってきてもらうこともできます。これはフォローアップの取引を締結するのに非常に有益です。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="フリーランサー" term="フリーランサー"/>
        <category label="フリーランス" term="フリーランス"/>
        <category label="アップワーク" term="アップワーク"/>
        <category label="ファイバー" term="ファイバー"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top 7 Database GUIs for SQL databases]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases"/>
        <updated>2024-01-09T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Database GUI tools make working with SQL databases much simpler and more efficient for developers. Many great database GUIs are available.]]></summary>
        <content type="html"><![CDATA[<p>Database GUI tools make working with SQL databases much simpler and more efficient for developers. Many great database GUIs are available, each with different features and capabilities. In this blog post, we'll look at seven of the best database GUIs to help you choose the right one.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="database-guis-and-why-they-are-important">Database GUIs and why they are important<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#database-guis-and-why-they-are-important" class="hash-link" aria-label="Database GUIs and why they are important への直接リンク" title="Database GUIs and why they are important への直接リンク">​</a></h2>
<p>Database GUIs are essential tools for database developers, database administrators, and database management systems users. Database management tools enable database developers to edit and manage MySQL and PostgreSQL databases and browse the database schema on Windows, Linux, and macOS operating systems.</p>
<p>Popular databases such as Microsoft SQL Server, Oracle MySQL Database, and Oracle MySQL server also benefit from this technology through comprehensive cross-platform GUI database management tools. GUI database management tools allow users to construct complex query builders for their databases with just a mouse click instead of manually entering complex SQL statements.</p>
<p>Web-based GUIs are becoming increasingly popular as they allow those with access to a web browser to easily manage their databases from any system, including Windows, Linux, and Mac. Using a database GUI is a much quicker way of managing your databases. It is also far more comprehensive when compared to entering SQL statements by hand. Allowing developers easy access to any database system's functionality makes database management significantly more accessible.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud">ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#illa-cloud" class="hash-link" aria-label="ILLA Cloud への直接リンク" title="ILLA Cloud への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/illa.png" alt="illa" class="img_CfaS"></p>
<p>ILLA is a top-notch low-code solution that allows developers to create a feature-rich internal tool within no time. Moreover, developers using the ILLA cloud will have to spend less effort and time on web designs and other integrations.</p>
<p>The creators of ILLA have developed numerous inserts for the tool. So, the tool can quickly meet the requirements and needs of developers in any scenario. Moreover, developers can use drag and drag-and-drop builder of ILLA to improve their productivity in the best possible way. You can also connect this tool to any data source through APIs.</p>
<p>ILLA Cloud is also one of the most popular Graphical User Interfaces (GUI) for managing SQL databases. It offers a user-friendly and intuitive interface, allowing developers to quickly change their database without manually entering complex SQL statements. ILLA Cloud also provides comprehensive cross-platform support, making it accessible from any system, including Windows, Linux, and Mac.</p>
<p>With ILLA Cloud, users can quickly construct complex query builders with a mouse click. In addition to its great features, ILLA Cloud offers enterprise level security protocols protecting the user's data. Furthermore, users can easily extend their database by creating custom web services with ILLA's REST API platform. ILLA Cloud is the perfect choice for those looking for an easy way to manage their databases.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="dbeaver">DBeaver<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#dbeaver" class="hash-link" aria-label="DBeaver への直接リンク" title="DBeaver への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/dbeaver.avif" alt="dbeaver" class="img_CfaS"></p>
<p>DBeaver is an excellent choice for SQL Database GUI, particularly for those looking to avoid subscription-based models. It is a free and open-source database management tool that provides cross-platform support, allowing users to access their databases from any system, including Windows, Linux, and Mac.</p>
<p>With DBeaver, users can quickly create complex queries and edit the database schema with a mouse click. It also features an extensive set of tools that make it easy to manage large SQL databases. These tools include an ER Diagram generator, data export/import features, and a powerful query builder that helps users construct complex queries.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="retool">Retool<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#retool" class="hash-link" aria-label="Retool への直接リンク" title="Retool への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/retool.avif" alt="retool" class="img_CfaS"></p>
<p>Retool is an intuitive Graphical User Interface (GUI) for managing SQL databases that offers a wide range of features and benefits. It provides an clean interface with drag-and-drop features to construct complex queries without needing to manually enter SQL statements. Retool makes it easier for developers to interact with their databases, enabling them to make changes quickly and efficiently.</p>
<p>Furthermore, Retool's advanced security protocols help protect users' data from unauthorized access. It also offers cross-platform support, making it accessible from any system, including Windows, Linux, and Mac.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="tooljet">Tooljet<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#tooljet" class="hash-link" aria-label="Tooljet への直接リンク" title="Tooljet への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/tooljet.avif" alt="tooljet" class="img_CfaS"></p>
<p>Tooljet is an advanced Graphical User Interface (GUI) for managing SQL databases that offer users a comprehensive suite of features and tools to manage their databases efficiently. It has an intuitive drag-and-drop interface, allowing developers to quickly change their database without manually entering complex SQL statements.</p>
<p>Tooljet also provides powerful query builders that enable users to construct complex queries in a few clicks and built-in reporting capabilities for generating reports quickly and easily. Furthermore, users can take advantage of the extensive cross-platform support provided by Tooljet and access their database from any system.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="dbvisualizer">DbVisualizer<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#dbvisualizer" class="hash-link" aria-label="DbVisualizer への直接リンク" title="DbVisualizer への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/dbvisualizer.avif" alt="DbVisualizer" class="img_CfaS"></p>
<p>DbVisualizer is a powerful and comprehensive GUI tool for managing SQL databases. It offers users an easy-to-use drag-and-drop interface for making changes to their database and robust query builders for constructing complex queries without manually entering SQL statements. DbVisualizer provides extensive cross-platform support, allowing users to access their database from any system, including Windows, Linux, and Mac.</p>
<p>It also features advanced security protocols to help protect users' data from unauthorized access. Overall, DbVisualizer is an excellent choice.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="appsmith">Appsmith<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#appsmith" class="hash-link" aria-label="Appsmith への直接リンク" title="Appsmith への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/appsmith.avif" alt="appsmith" class="img_CfaS"></p>
<p>Appsmith is an incredibly powerful graphical user interface (GUI) that makes it easy to manage large SQL databases. It features a comprehensive set of tools that make managing such databases simpler and more intuitive than ever. The drag-and-drop interface allows developers to quickly construct complex queries without manually entering long strings of SQL statements.</p>
<p>Appsmith also offers numerous advanced security protocols, such as user authentication and secure connection encryption. Moreover, Appsmith's cross-platform support enables users to access their data from any system, including Windows, Linux, and Mac.</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="dronahq">Dronahq<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#dronahq" class="hash-link" aria-label="Dronahq への直接リンク" title="Dronahq への直接リンク">​</a></h3>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/dronahq.avif" alt="dronahq" class="img_CfaS"></p>
<p>Dronahq is a powerful and feature-rich graphical user interface (GUI) for managing SQL databases. It offers users an intuitive drag-and-drop interface that makes creating complex queries simple without manually entering SQL statements.</p>
<p>Dronahq provides extensive cross-platform support, enabling users to access their database from any system, including Windows, Linux, and Mac. It also features advanced security protocols such as role-based authentication and secure connection encryption. Furthermore, Dronahq has a powerful query builder that allows users to quickly create custom reports with the built-in reporting capabilities.</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="find-the-one-that-best-suits-you">Find the one that best suits you<a href="https://illacloud.github.io/illa-website/ja/blog/top-7-database-guis-for-sql-databases#find-the-one-that-best-suits-you" class="hash-link" aria-label="Find the one that best suits you への直接リンク" title="Find the one that best suits you への直接リンク">​</a></h2>
<p>With the wide range of Graphical User Interfaces (GUIs) available, it is important to try out different options to find the one that best suits you. Each GUI has unique features, so users should take the time to research and weigh the pros and cons.</p>
<p>Ultimately, choosing the right GUI is a long-term investment that can significantly improve a person’s computing experience. Why not check out ILLA Cloud today? Its excellent features, user-friendly interface, and optimized performance could be just the right solution you need!</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="database" term="database"/>
        <category label="gui" term="gui"/>
        <category label="tools" term="tools"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024 年に CRUD アプリケーションを構築するための最高のツール]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications"/>
        <updated>2024-01-08T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[CRUD アプリケーションは、ウェブページやモバイルアプリなどのさまざまなインターフェースを使用して、ユーザーがデータを作成、読み取り、更新、削除できるソフトウェアの一種です。]]></summary>
        <content type="html"><![CDATA[<p>CRUD アプリケーションは、ユーザーがデータを作成、読み取り、更新、削除できるソフトウェアの一種で、ウェブ開発において非常に一般的です。これらは、複雑なコードを書かずにデータに基本的な操作を実行できるようにするもので、CRUD は、データモデルが行うべき四つの基本操作である「作成」、「読み取り」、「更新」、「削除」を表しています。</p>
<p>CRUD アプリケーションは、データベース、ユーザーインターフェース、API の三つの主要なコンポーネントから構成されています。データはデータベースに格納され、取得されます。ユーザーインターフェースはユーザーが対話するフロントエンドです。API にはデータベースと通信するコードとメソッドが含まれます。各コンポーネントは、開発者のニーズと好みに応じて異なる技術とフレームワークを使用できます。</p>
<p>このブログ記事では、CRUD アプリケーションを構築するための最高のツールをいくつか紹介し、各コンポーネントを個別にカバーします。また、それらを効果的に使用する方法についてもいくつかの例とヒントを提供します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="データベース">データベース<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9" class="hash-link" aria-label="データベース への直接リンク" title="データベース への直接リンク">​</a></h2>
<p>データベースは、ユーザーがデータを作成、読み取り、更新、削除できるようにするためのCRUD アプリケーションの中核であり、さまざまなデータベースの種類がありますが、大まかにはリレーショナル（SQL）と非リレーショナル（NoSQL）に分類できます。</p>
<p>リレーショナルデータベースは、データを格納するためにテーブルを使用し、各テーブルには事前に定義されたスキーマがあり、各行がレコードを表します。リレーショナルデータベースは、複雑なクエリとトランザクションが必要な構造化されたデータに適しています。最も人気のあるリレーショナルデータベースのいくつかは、MySQL、PostgreSQL、Oracle、SQL Server です。</p>
<p>非リレーショナルデータベースは、データを格納するためにコレクションを使用し、各コレクションには柔軟なスキーマがあり、各ドキュメントがレコードを表します。非リレーショナルデータベースは、高いスケーラビリティとパフォーマンスが必要な非構造化およびダイナミックなデータに適しています。最も人気のある非リレーショナルデータベースのいくつかは、MongoDB、CouchDB、Firebase、DynamoDB です。</p>
<p>CRUD アプリケーションに適したデータベースを選択するには、データの種類とボリューム、確実性と信頼性のレベル、実行するクエリの複雑さと頻度など、いくつかの要因を考慮する必要があります。また、データベースとユーザーインターフェース、API ツールの互換性と統合も考慮するべきです。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="ユーザーインターフェース">ユーザーインターフェース<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E3%83%A6%E3%83%BC%EF%BF%BD%E3%82%B6%E3%83%BC%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9" class="hash-link" aria-label="ユーザーインターフェース への直接リンク" title="ユーザーインターフェース への直接リンク">​</a></h2>
<p>ユーザーインターフェースは、CRUD アプリケーションのフロントエンドであり、ユーザーがデータベースに格納されているデータを表示し、操作できる場所です。ユーザーインターフェースは、アプリケーションのタイプと複雑さに応じてさまざまな技術とフレームワークを使用して構築できます。</p>
<p>CRUD アプリケーションのユーザーインターフェースを構築する最も一般的な方法の一つは、HTML、CSS、JavaScript を使用することです。HTML はウェブページの構造とコンテンツを定義し、CSS はウェブページの外観とレイアウトをスタイル付け、JavaScript はウェブページに対話性と機能を追加します。プレーンな HTML、CSS、JavaScript を使用する</p>
<p>か、開発プロセスを簡素化し強化するライブラリやフレームワークを使用できます。</p>
<p>ユーザーインターフェースを構築するための最も人気のあるライブラリとフレームワークのいくつかは、React、Angular、Vue.js、Bootstrap、Tailwind CSS、jQuery などです。これらのツールは、動的でレスポンシブなウェブページを作成し、API とデータベースと通信できるさまざまな機能と利点を提供します。</p>
<p>CRUD アプリケーションのユーザーインターフェースを構築する別の方法は、ローコードまたはノーコードプラットフォームを使用することです。これらのプラットフォームでは、ドラッグアンドドロップコンポーネントとビジュアルエディタを使用してコードをほとんどまたはまったく書かずにウェブページを作成できます。最も人気のあるローコードまたはノーコードプラットフォームのいくつかは、Budibase、Appsmith、Bubble.io、Webflow などです。これらのツールは、複雑な技術を学ぶことなくシンプルで迅速なCRUD アプリケーションを作成したい初心者や非開発者向けに最適です。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="api">API<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#api" class="hash-link" aria-label="API への直接リンク" title="API への直接リンク">​</a></h2>
<p>API はユーザーインターフェースとデータベースの間の橋渡しです。API は、HTTP メソッド（GET（読み取り）、POST（作成）、PUT（更新）、DELETE（削除）など）を使用して、ユーザーインターフェースがデータベースからデータをリクエストする方法やデータをデータベースに送信する方法を定義します。API はまた、認証、承認、検証、エラーハンドリングなどを処理します。</p>
<p>CRUD アプリケーションのAPIを構築する方法はさまざまですが、最も一般的な方法の一つは REST（Representational State Transfer）を使用することです。REST は、リソース（データ）が標準的なHTTPメソッドとJSONまたはXMLなどのフォーマットを使用してアクセスおよび操作できる方法を定義するアーキテクチャスタイルです。REST API は、人間と機械の両方にとって理解しやすく使用しやすいです。</p>
<p>REST API を構築するための最も人気のあるツールのいくつかは、Node.js、Express.js、Flask、Django、Ruby on Rails、Laravel などです。これらのツールは、ウェブサーバーとAPIを作成および管理するためのさまざまな機能とライブラリを提供します。</p>
<p>CRUD アプリケーションのAPIを構築する別の方法は、GraphQL を使用することです。GraphQL はクエリ言語およびランタイムであり、単一のエンドポイントを使用してデータに対するクエリとミューテーション（操作）を定義および実行できるようにします。GraphQL API は、必要なデータのみをリクエストまたは送信できるため、過剰な取得や不足の取得を回避できるため、REST API よりも柔軟で効率的です。</p>
<p>GraphQL API を構築するための最も人気のあるツールのいくつかは、Apollo Server、Prisma、Hasura、Graphene などです。これらのツールは、GraphQL サーバーとスキーマを作成および管理するのに役立つライブラリまたはプラットフォームです。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="crud-アプリケーションの構築ツール">CRUD アプリケーションの構築ツール<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#crud-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%A7%8B%E7%AF%89%E3%83%84%E3%83%BC%E3%83%AB" class="hash-link" aria-label="CRUD アプリケーションの構築ツール への直接リンク" title="CRUD アプリケーションの構築ツール への直接リンク">​</a></h2>
<p>有用な CRUD アプリケーションを構築するのに便益を提供するソフトウェアは多数ありますが、最も適した CRUD アプリケーションを構築するのに役立つものを見つける必要があります。以下では、クライアントの好みと実行可能性に基づいて、おすすめの7つのソフトウェアについて説明し、それらの特徴と欠点を紹介し、賢明な選択ができるようにします。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud">ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#illa-cloud" class="hash-link" aria-label="ILLA Cloud への直接リンク" title="ILLA Cloud への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/illa.png" alt="illa" class="img_CfaS"></p>
<p>ILLA Cloudは、内部ツールを構築するためのオープンソースの低コードプラットフォームです。その主な目的は、プログラマーがデータを監視するためのモジュールを開発するのを支援することであり、開発者にとって最も退屈な仕事の1つです。このオープンソースの低コードアプリの新機能のもう一つは、カスタマイズされたコードブロックを作成し、後でマーケットプレイスで販売できることです。</p>
<p>それは主流のデータベースに接続されるか、または代替としてAPIを介して任意のデータベースに接続できます。ユーザーイベントの連鎖にアクションを追加することさえできます。バックエンドとフロントエンドのデータコンポーネントは密接に統合されており、開発者は大量の情報の相互作用のためのデータ呼び出しを書くことができます。</p>
<p>開発者にとっては、より豊かな機能を実装する自由を提供するため、2倍に役立ちます。彼らは{{テンプレート構文}}を使用してより豊かなコンテンツを作成できます。</p>
<p>リアルタイムのコラボレーションを可能にし、異なる場所で作業する開発者が同時に作業するのを容易にします。開発効率を向上させるために、リンクを共有し、共同編集し、コミュニケーションすることができます。</p>
<p>ILLA Builderには包括的なUIライブラリがあります。開発者は時間を無駄にせずに魅力的なインターフェースを構築するために使用できる多くの便利なコンポーネントがあります。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴">特徴:<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="特徴: への直接リンク" title="特徴: への直接リンク">​</a></h3>
<ul>
<li>任意のデータベースと簡単に統合できます。</li>
<li>ILLA CLIをWindows、Linux、MACのいずれかのオペレーティングシステムにダウンロードできます。</li>
<li>開発者がコミュニケーションを取るためのリアルタイムの協力を提供します。</li>
<li>柔軟な展開を提供します。ILLA Cloud、ILLA CLI、Kubernetes、およびDockerを使用できます。</li>
<li>サードパーティのAPIを簡単に統合できます。</li>
<li>共有、使用、コピー、および更新が無料です。</li>
<li>新しいアップデートと機能で常に磨かれています。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点">欠点:<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9" class="hash-link" aria-label="欠点: への直接リンク" title="欠点: への直接リンク">​</a></h3>
<ul>
<li>ILLA Cloudは基本的にプログラマーの利便性のために開発されました。</li>
<li>これを十分に活用するには、JavaScript、RUST、およびForlangのいずれかを習得する必要があります。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="appsmith">AppSmith<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#appsmith" class="hash-link" aria-label="AppSmith への直接リンク" title="AppSmith への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/appsmith.png" alt="appsmith" class="img_CfaS"></p>
<p>AppSmithは最初のオープンソースの低コードツールでした。開発者にクリックアンドドラッグプログラミングの全く新しい世界を紹介しました。標準プランには無制限のアプリとウィジェットが含まれており、ライブダッシュボードを構築するのに非常に役立ちます。この標準プランは無料です。これらの特徴の要約は以下です。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴-1">特徴:<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4-1" class="hash-link" aria-label="特徴: への直接リンク" title="特徴: への直接リンク">​</a></h3>
<ul>
<li>サポートされているデータベースに簡単に接続できます。</li>
<li>直感的なドラッグアンドドロップウィジェットは非常に役立ち、コーディングをさらに簡単にします。</li>
<li>ガイド完備で、ドキュメンテーションやビデオも利用可能です。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-1">欠点:<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9-1" class="hash-link" aria-label="欠点: への直接リンク" title="欠点: への直接リンク">​</a></h3>
<ul>
<li>このアプリを十分に活用するには、JavaScriptを知っている必要があります。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="knack">Knack<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#knack" class="hash-link" aria-label="Knack への直接リンク" title="Knack への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/knack.png" alt="knack" class="img_CfaS"></p>
<p>Knackは、一般的には手動プロセスを自動化するために使用されるノーコードアプリです。既存のデータベースと統合しようとすると問題が発生する可能性があります。特定の制限があるため、内部プロセスに最適です。データを表示、管理、更新、分析、共有することができます。さまざまなケースのアプリケーションテンプレートが迅速に開始されます。以下はこのアプリケーションのいくつかの機能です。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴-2">特徴：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4-2" class="hash-link" aria-label="特徴： への直接リンク" title="特徴： への直接リンク">​</a></h3>
<ul>
<li>組み込みのデータベースとユーザー管理、認証、電子メール、および通知の自動ワークフローをサポートします。</li>
<li>開発者はJavaScriptとCSSで簡単にカスタマイズできます。</li>
<li>ガイド全般、ドキュメンテーションとビデオを含む、ガイダンス用の完全なガイドが利用可能です。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-2">欠点：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9-2" class="hash-link" aria-label="欠点： への直接リンク" title="欠点： への直接リンク">​</a></h3>
<p>最も深刻な欠点は、他のデータベースと対話できないことです。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="budibase">Budibase<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#budibase" class="hash-link" aria-label="Budibase への直接リンク" title="Budibase への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/budibase.png" alt="budibase" class="img_CfaS"></p>
<p>Budibaseは、CRUDアプリケーションのために広く使用されている人気のあるローコードツールです。主要なデータベースと簡単に統合できます。以下はツールのいくつかの主要な特徴です。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴-3">特徴：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4-3" class="hash-link" aria-label="特徴： への直接リンク" title="特徴： への直接リンク">​</a></h3>
<ul>
<li>ページを美化するための多くのウィジェットとその他の機能があります。</li>
<li>内部データベースをサポートしますが、外部データベースに接続することもサポートします。</li>
<li>包括的なドキュメンテーションが利用可能で、ガイダンスも提供されています。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-3">欠点：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9-3" class="hash-link" aria-label="欠点： への直接リンク" title="欠点： への直接リンク">​</a></h3>
<ul>
<li>JavaScriptおよび技術スキルが必要です。</li>
<li>テンプレートは利用できません。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="bubble">Bubble<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#bubble" class="hash-link" aria-label="Bubble への直接リン��ク" title="Bubble への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/bubble.png" alt="bubble" class="img_CfaS"></p>
<p>このはるかに複雑なツールは、小規模な内部アプリにはお勧めできません。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴-4">特徴：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4-4" class="hash-link" aria-label="特徴： への直接リンク" title="特徴： への直接リンク">​</a></h3>
<ul>
<li>ウィジェットとデザインが利用可能です。</li>
<li>完璧に展開できます。</li>
<li>トラフィック、ユーザー、データのボリュームは無制限です。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-4">欠点：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9-4" class="hash-link" aria-label="欠点： への直接リンク" title="欠点： への直接リンク">​</a></h3>
<ul>
<li>学習が複雑です。</li>
<li>自分のインフラストラクチャにホストすることはできません。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="ui-bakery">UI Bakery<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#ui-bakery" class="hash-link" aria-label="UI Bakery への直接リンク" title="UI Bakery への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/uibakery.png" alt="bakery" class="img_CfaS"></p>
<p>このアプリは比較的新しい製品ですが、事前定義のウィジェットと作成済みのテンプレートがあるため、内部ツールとCRUDアプリケーションを構築するための完璧なノーコードツールです。MySQL、Googleデータシート、およびPostgresなどのSQLデータベースに簡単に接続できます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴-5">特徴：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4-5" class="hash-link" aria-label="特徴： への直接リンク" title="特徴： への直接リンク">​</a></h3>
<ul>
<li>Google、Twitter、およびFacebookを介したユーザー管理をサポートします。</li>
<li>開発者はユニークなURLでアプリのホスティングを行うことができます。</li>
<li>ウィジェットとテンプレートをカスタマイズできます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-5">欠点：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9-5" class="hash-link" aria-label="欠点： への直接リンク" title="欠点： への直接リンク">​</a></h3>
<ul>
<li>一般向けアプリ、顧客向けウェブサイト、およびモバイルアプリには適していません。</li>
<li>これに対処するために技術スタッフが必要で、JavaScriptの取り扱いには適度な知識が必要です。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="retool">Retool<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#retool" class="hash-link" aria-label="Retool への直接リンク" title="Retool への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/retool.png" alt="retool" class="img_CfaS"></p>
<p>リストの最後になりますが、retoolもCRUDアプリケーションとして優れた選択肢です。これはドラッグアンドドロップのビルディングブロックプラットフォームです。外部データベースからデータを取得するにはJavaScriptをカスタマイズする必要があります。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴-6">特徴：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%89%B9%E5%BE%B4-6" class="hash-link" aria-label="特徴： への直接リンク" title="特徴： への直接リンク">​</a></h3>
<ul>
<li>組み込みの認証と認可をサポートします。</li>
<li>JavaScriptでカスタマイズできます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-6">欠点：<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E6%AC%A0%E7%82%B9-6" class="hash-link" aria-label="欠点： への直接リンク" title="欠点： への直接リンク">​</a></h3>
<ul>
<li>無料プランは最小限であり、エンドユーザーベースで料金がかかります。</li>
<li>一般向けアプリには使用できません。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/the-best-tools-for-build-crud-applications#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>CRUDアプリケーションは、さまざまなインターフェースを使用してデータの作成、読み取り、更新、削除をユーザーに許可するソフトウェアの一種です。CRUDアプリケーションは、データベース、ユーザーインターフェース、APIの3つの主要</p>
<p>なコンポーネントで構成されています。各コンポーネントは、開発者のニーズと好みに応じて異なるテクノロジとフレームワークを使用できます。</p>
<p>このブログ投稿では、CRUDアプリケーションを構築するための最高のツールのいくつかを個別にカバーしました。また、それらを効果的に使用するための例とヒントも提供しました。この投稿が、CRUDアプリケーションについての知識を深め、その構築方法を学ぶのに役立つことを願っています。</p>
<p>CRUDアプリケーションを迅速かつ簡単に構築できるツールをお探しの場合、ILLA Cloudをご利用いただくことをお勧めします。ILLA Cloudは、コーディング不要でCRUDアプリケーションを作成できるクラウドベースのプラットフォームです。任意のデータベースやAPIに接続し、ドラッグアンドドロップコンポーネントでユーザーインターフェースを設計し、ワンクリックでアプリケーションを展開できます。ILLA Cloudは、認証、認可、バリデーション、エラーハンドリングなどの機能も提供しています。ILLA Cloudは、数分でCRUDアプリケーションを構築するための最高のツールです。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="crud" term="crud"/>
        <category label="tools" term="tools"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[内部ツールを構築するための最高のオープンソース低コードプラットフォーム]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/internal-tool</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/internal-tool"/>
        <updated>2024-01-05T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[オープンソースのツールは一般的ですが、1万のスターを持つものは珍しいです。]]></summary>
        <content type="html"><![CDATA[<p>オープンソースのツールは一般的ですが、1万のスターを持つものは珍しいです。私は海外で1万のスターを持つ製品を共有します。ローコードツールはたくさんありますが、実際に役立つものは少ないです。このツールは主に北米の開発者によって使用され、そのDiscordコミュニティは非常に活発です。</p>
<p>コミュニティには実際に良いレビューがあります。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/popular-tool/good.png" alt="good" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudのできること">ILLA Cloudのできること<a href="https://illacloud.github.io/illa-website/ja/blog/internal-tool#illa-cloud%E3%81%AE%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8" class="hash-link" aria-label="ILLA Cloudのできること への直接リンク" title="ILLA Cloudのできること への直接リンク">​</a></h2>
<p>Github: <a href="https://illacloud.com/illacloud/illa-builder" target="_blank" rel="noopener noreferrer">https://illacloud.com/illacloud/illa-builder</a></p>
<p>公式ウェブサイト: <a href="https://illa.cloud/" target="_blank" rel="noopener noreferrer">https://illa.cloud</a></p>
<p>ILLA Cloudの主要なユーザーはバックエンドエンジニアで、これは一般的な考えとは異なるかもしれません。多くのバックエンドエンジニアがILLA Cloudを使用して、多くのデータパネルや管理バックエンドを構築しています。結局のところ、ウェブ開発は常にバックエンドエンジニアにとって頭痛の種でした。ILLA Cloudで作成されたツールは、見た目も美しく、高速です。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/popular-tool/dashboard.png" alt="dashboard" class="img_CfaS"></p>
<p>ILLAはまた協力をサポートしており、複数の人がプロジェクトを共同で編集できるようにしています。バックエンドエンジニアはもはやさまざまな内部バックエンドを構築する必要はありません。フロントエンドエンジニアに頼る苦労と涙を私たちはみんな知っています。</p>
<p>公式ウェブサイトにはいくつかのソリューションもあり、現在は主に管理バックエンド、データパネルなどに焦点を当てているようです。</p>
<ul>
<li>AIテキストから画像へのパネル</li>
<li>AI音声処理パネル</li>
<li>データ分析パネル</li>
<li>コンテンツ管理CMS</li>
<li>カスタムCRM</li>
<li>管理バックエンド</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/popular-tool/solution.png" alt="solution" class="img_CfaS"></p>
<p>彼らはワークフローの構築もサポートしており、ローコード分野で多くの仕事を行っているようで、非常に包括的な製品のようです。基本的にさまざまな一般的なケースを満たしています。</p>
<p>たとえば：</p>
<ul>
<li>新しいユーザーが登録したときにSlackにメッセージを送信する</li>
<li>GitHubのスター数を毎日報告する</li>
<li>会議室の毎日の予約</li>
</ul>
<p>エンジニアはILLA Flowを使用して、多くのタスクを自動的に実行します。たとえば、データベースからビジネスデータを毎日読み取り、Slackに送信したり、CI/CDレポートシステムを構築したり、特定の警告が発生したときにメールを送信したりします。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/popular-tool/flow.jpeg" alt="flow" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="ユーザーエクスペリエンス">ユーザーエクスペリエンス<a href="https://illacloud.github.io/illa-website/ja/blog/internal-tool#%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%AA%E3%82%A8%E3%83%B3%E3%82%B9" class="hash-link" aria-label="ユーザーエクスペリエンス への直接リンク" title="ユーザーエクスペリエンス への直接リンク">​</a></h2>
<p>私はそれを簡単に体験しましたが、エディターのスムーズさと全体的なエクスペリエンスに本当に多くの努力が払われています。全体的な編集体験はかなり良いです。スムーズなドラッグアンドドロップの機能も含まれており、協力もサポートされています。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/popular-tool/team.gif" alt="collabration" class="img_CfaS"></p>
<p>さまざまなデータベース統合機能もサポートされており、さまざまなデータソースとデータベースからの迅速なデータの読み取りと書き込みが可能です。バックエンドエンジニアにとって、さまざまなサービスを統合することは本当に悪夢です。この場合、ILLAはすでにその作業を行っています。また、Huggingfaceとの統合もサポートしており、公式のコラボレーションのようです。Huggingfaceのモデル機能を素早く使用できるようになり、本当に興味深いです。いくつかのAI駆動のツールを迅速に作成できます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/popular-tool/resource.png" alt="resource" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/internal-tool#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>ローコードツールはたくさんありますが、実際に使用および実装できるものは少ないです。ILLA</p>
<p>は現在2年間維持されており、その会社は現在これに完全に専念しています。特定の目的のために製造された一部のローコードツールとは異なり、彼らは開発者のニーズに直接対応しています。誰でも試すことができます！"</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="nvm" term="nvm"/>
        <category label="nodejs" term="nodejs"/>
        <category label="mac" term="mac"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ILLA Flow: JavaScript駆動、開発者向けの自動ワークフロー作成製品]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/launch-flow</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/launch-flow"/>
        <updated>2024-01-05T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[ILLA Flowは、マインドマッピングに似た方法で完全なワークフローを構築できるワークフロー製品です。]]></summary>
        <content type="html"><![CDATA[<p>みなさん、こんにちは。私はオーウェンで、私たちはローコードソリューションに特化したスタートアップ企業です。私たちのチームは非常に小さく、わずか7人です。</p>
<p>今日、私たちは新しい製品、ILLA Flowを発売しました。</p>
<p>ウェブサイト: <a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">https://illacloud.com</a> (ログイン後、ダッシュボードの左側にあります -&gt; Flow)</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-flow">ILLA Flow<a href="https://illacloud.github.io/illa-website/ja/blog/launch-flow#illa-flow" class="hash-link" aria-label="ILLA Flow への直接リンク" title="ILLA Flow への直接リンク">​</a></h2>
<p>ILLA Flowは、マインドマッピングに似た方法で完全なワークフローを構築できるワークフロー製品で、さまざまなデータベースやAPIとの接続とスケジューリングが可能です。</p>
<p>ドラッグアンドドロップインターフェースを使用して独自のワークフローを構築し、トリガーのスケジューリングやWebhookトリガーを使用してワークフローを実行できます。</p>
<p>スムーズなドラッグアンドドロップのエクスペリエンスにより、統合の問題を気にせずに素早くワークフローを構築できます。システム全体はJavaScriptによって駆動されており、柔軟性を確保しながら開発者向けにも適しています。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/launch-flow/flow.jpeg" alt="flow" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="すべてを統合">すべてを統合<a href="https://illacloud.github.io/illa-website/ja/blog/launch-flow#%E3%81%99%E3%81%B9%E3%81%A6%E3%82%92%E7%B5%B1%E5%90%88" class="hash-link" aria-label="すべてを統合 への直接リンク" title="すべてを統合 への直接リンク">​</a></h2>
<p>ILLA Flowは、以下に接続できます</p>
<ul>
<li>RestAPI</li>
<li>MySQL</li>
<li>MariaDB,</li>
<li>PostgreSQL</li>
<li>...</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/launch-flow/resource.jpeg" alt="resource" class="img_CfaS"></p>
<p>より多くの接続機能のサポートを拡充する努力をしていきます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="いくつかの例">いくつかの例<a href="https://illacloud.github.io/illa-website/ja/blog/launch-flow#%E3%81%84%E3%81%8F%E3%81%A4%E3%81%8B%E3%81%AE%E4%BE%8B" class="hash-link" aria-label="いくつかの例 への直接リンク" title="いくつかの例 への直接リンク">​</a></h2>
<p>ILLA Flowは、スケジュールトリガーやWebhookトリガーを含む複数のトリガータイプをサポートしています。</p>
<p>ILLA Flowを使用して、以下のようなことができます：</p>
<ul>
<li>新しいユーザーが登録するとSlackにメッセージを送信</li>
<li>GitHubでの星の数を毎日報告</li>
<li>毎日会議室を予約</li>
<li>...</li>
</ul>
<p>エンジニアたちは、以下のようなタスクを自動化するためにILLA Flowを使用しています：</p>
<ul>
<li>データベースからビジネスデータを読み取り、毎日Slackに送信</li>
<li>CI/CDレポートシステムを構築</li>
<li>警告が発生した場合にメールを送信</li>
<li>...</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/launch-flow#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>ILLA Flowは、スケジュールトリガーとWebhooksの使用をサポートしています。ローコードツールとして、ILLAは複数のワークフローを駆動するためのパネルの構築も可能で、完全なビジネスプロセスを形成します。現在、製品は完全に無料で、費用はかかりません。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/launch-flow/dashboard.jpeg" alt="dashboard" class="img_CfaS"></p>
<p>この製品を作成した初期の意図は、市場に開発者向けのワークフロー製品が不足していることに対処することでした。私たちはより良い体験を提供するために、完全なローコードマトリックス製品を構築することを目指しています。さらに、Figmaで編集するようなチームでのリアルタイム共同編集を実現し、製品が初期段階であるため、まだ完璧ではない多くの機能があり、皆さんからの貴重なフィードバックを提供していただければ幸いです。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ワークフロー" term="ワークフロー"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024年のベストローコードプラットフォーム5選]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform"/>
        <updated>2024-01-04T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[ソフトウェア業界が進化するにつれ、ローコードツールはますます人気を集めています。適切なローコードツールを導入することで、さまざまなビジネスシナリオで効率と生産性の向上が実現できます。この記事では、2024年における最も人気のあるローコードツール製品について詳しく説明し、情報を元にした適切な選択を提供します。]]></summary>
        <content type="html"><![CDATA[<p>ソフトウェア業界が進化するにつれ、ローコードツールはますます人気を集めています。さまざまなビジネスシナリオで適切なローコードツールを導入することで、驚異的な効率と生産性の向上が実現します。この記事では、2024年における最も人気のあるローコードツール製品について詳しく説明し、情報を元にした適切な選択を提供します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜローコードツールを選ぶのか">なぜローコードツールを選ぶのか<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E3%81%AA%E3%81%9C%E3%83%AD%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E3%83%84%E3%83%BC%E3%83%AB%E3%82%92%E9%81%B8%E3%81%B6%E3%81%AE%E3%81%8B" class="hash-link" aria-label="なぜローコードツールを選ぶのか への直接リンク" title="なぜローコードツールを選ぶのか への直接リンク">​</a></h2>
<p>ローコードツールにはいくつかの魅力的な利点があります。それには以下が含まれます：</p>
<ul>
<li>ゼロの運用保守コスト</li>
<li>超高速の開発スピード</li>
<li>広範な開発者チームへの依存の削減</li>
<li>新しいアプリケーションの市場投入の加速</li>
</ul>
<p>通常、ローコードツールは内部ツールとポータルのシナリオの開発に特に適しています。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="選択の幅">選択の幅<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E9%81%B8%E6%8A%9E%E3%81%AE%E5%B9%85" class="hash-link" aria-label="選択の幅 への直接リンク" title="選択の幅 への直接リンク">​</a></h2>
<p>私たちは、検討のために現在人気のあるローコードプラットフォームのリストをまとめました。詳細な紹介は後に続きます。</p>
<ul>
<li>ILLA Cloud：オープンソース</li>
<li>Budibase：オープンソース</li>
<li>Tooljet：オープンソース</li>
<li>SuperBlocks：プロプライエタリ</li>
<li>Retool：プロプライエタリ</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloud">ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#illa-cloud" class="hash-link" aria-label="ILLA Cloud への直接リンク" title="ILLA Cloud への直接リンク">​</a></h2>
<p>GitHubリンク：<a href="https://github.com/illacloud/illa-builder" target="_blank" rel="noopener noreferrer">https://github.com/illacloud/illa-builder</a></p>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、シンプルなJavaScriptを使用して内部ツールを迅速に作成する革新的なローコードツールです。新しいプロジェクトをゼロから始める必要がなくなります。</p>
<p>主要な提供物には以下が含まれます：</p>
<ul>
<li>ウェブ＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズ可能なB2Bツール</li>
</ul>
<p>ILLA Cloudは、従来のコンポーネントライブラリの構築よりも最大10倍高速な開発スピードを誇り、チームの効率を向上させる共同編集もサポートしています。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/crm.webp" alt="crm" class="img_CfaS"></p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ベストチョイス">ベストチョイス<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E3%83%99%E3%82%B9%E3%83%88%E3%83%81%E3%83%A7%E3%82%A4%E3%82%B9" class="hash-link" aria-label="ベストチョイス への直接リンク" title="ベストチョイス への直接リンク">​</a></h3>
<p>ILLA Cloudの他のローコードツールに対するユニークな利点：</p>
<ul>
<li>マルチユーザーのコラボレーションサポート</li>
<li>包括的なワークフローの機能</li>
<li>オープンソース製品でプライベートデプロイメントのオプションがある</li>
<li>さまざまな主要な統合に対応し、多様なデータソースに迅速に接続できる</li>
</ul>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/team.gif" alt="team" class="img_CfaS"></p>
<p>さらに、ILLA CloudにはAIエージェント機能が組み込まれています。このユニークな機能により、ローコードツールを使用して開発された製品にシームレスに統合できる迅速なAI駆動のライティングが可能です。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="budibase">Budibase<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#budibase" class="hash-link" aria-label="Budibase への直接リンク" title="Budibase への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/budibase.png" alt="budibase" class="img_CfaS"></p>
<p>高速アプリケーション開発の領域で、Budibaseは強力なローコードプラットフォームとして登場し、開発者に迅速にカスタムアプリケーションを作成するためのツールを提供します。Budibaseの中核には、開発プロセスを簡素化するユーザーフレンドリーなビジュアル開発環境があります。この環境は、データ入力フォームからインタラクティブなダッシュボードまで、さまざまなアプリケーションのニーズに対応するプレビルトコンポーネントの多様な選択肢で充実しています。プレビルトの提供に加えて、BudibaseはカスタムCSSスタイルを設計する自由な柔軟性を提供し、アプリケーションに独自のビジュアルアイデンティティを注入する力を開発者に授けます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="オープンソース">オープンソース<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9" class="hash-link" aria-label="オープンソース への直接リンク" title="オープンソース への直接リンク">​</a></h3>
<p>Budibaseは明示的にオープンソースとして宣伝していませんが、その基盤には重要なヒントがあります。プラットフォームはオープンソースのテクノロジを利用しており、コミュニティ主導のイノベーションを促進しています。明確なオープンソース宣言の不在は、共同開発へのコミットメントに影響を与えませんが、確立されたオープンソースエコシステムを求める見込みのあるユーザーは、Budibaseのアーキテクチャを評価するためにさらに調査が必要かもしれません。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="利点">利点<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E5%88%A9%E7%82%B9" class="hash-link" aria-label="利点 への直接リンク" title="利点 への直接リンク">​</a></h3>
<p>Budibaseの目立つ特徴の1つは、統合の能力です。プラットフォームは、アプリケーションがさまざまな外部サービスとシームレスに通信する現代の必要性を認識しています。プラグインが登場します。これにより、Budibaseはさまざまなサードパーティーサービスと統合できるようになり、外部ツールとサービスの機能を活用しながらBudibase環境内にとどまることができます。この統合フレンドリーなアプローチは、効率を高め、洗練された多機能アプリケーションの可能性を引き出します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点">欠点<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E6%AC%A0%E7%82%B9" class="hash-link" aria-label="欠点 への直接リンク" title="欠点 への直接リンク">​</a></h3>
<p>強力なツールであるため、克服する必要のある学習曲線があり、Budibaseも例外ではありません。ローコード開発に新しいユーザー、特に低コード開発に新しいユーザーの中には、初めての段階で学習曲線が少し急であるかもしれません。プラットフォームの機能と能力の幅広さは、完全にマスターするために時間と労力の一定の投資を要求します。ただし、この初期段階を乗り越えることを耐え忍ぶユーザーにとって、Budibaseは創造的な可能性を実現し、驚異的な効率で革新的なアプリケーションのアイデアを具現化できる世界への扉を開きます。</p>
<p>低コードプラットフォームの競争の激しい環境で、Budibaseはユーザーフレンドリーなビジュアル開発、柔軟性、統合能力、価格プランのバランスを提供し、ワークフローの効率性を備えた有望な競技者として輝いており、あなたの創造的なアイデアのためのキャンバスとして、アプリケーションを敏捷性と繊細さを持って実現できるようにしています。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="tooljetツールジェット">Tooljet（ツールジェット）<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#tooljet%E3%83%84%E3%83%BC%E3%83%AB%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88" class="hash-link" aria-label="Tooljet（ツールジェット） への直接リンク" title="Tooljet（ツールジェット） への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/tooljet.png" alt="Tooljet" class="img_CfaS"></p>
<p>低コード開発の常に進化する風景の中で、Tooljetはコーディングの複雑さに立ち入らずに洗練されたウェブアプリケーションを作成できるプラットフォームとして登場し、ダイナミックな競争相手となっています。Tooljetの中核には、アプリケーション開発プロセスを効率化するためのさまざまな機能を備えた多目的ツールキットがあります。その提供の中心には、直感的にコンポーネントを組み立て、複雑なレイアウトを設計できるシームレスなドラッグアンドドロップインターフェースがあります。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="特徴">特徴<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="特徴 への直接リンク" title="特徴 への直接リンク">​</a></h3>
<p>モダンなアプリケーション開発の要石であるデータベースモデリングは、Tooljetの武器庫で見つけることができます。ユーザーは簡単にデータ構造を形作り、アプリケーションを特定のユースケースとビジネスニーズに合わせることができます。プラットフォームのAPI統合への重点は、実現可能な範囲を広げ、アプリケーションが外部サービスとデータソースとシームレスに接続できるようにします。この統合の能力は、リアルワールドのシナリオにシームレスに対応した、ダイナミックでデータ豊かなアプリケーションへの扉を開きます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="オープンソース-1">オープンソース<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9-1" class="hash-link" aria-label="オープンソース への直接リンク" title="オープンソース への直接リンク">​</a></h3>
<p>Tooljetは明示的にオープンソースであるとはブランド化していませんが、注目すべき特徴があります。それはユーザーが生成したコードをエクスポートできる能力です。この特異な属性は、開発者に彼らの創造物を完全に所有する力を与え、アプリケーションを彼ら自身のサーバーでホストできるようにします。このアプローチは、低コード開発の効率性と、従来のコーディングプラクティスに通常関連付けられている自由と制御のバランスを取ることを結合しています。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="利点-1">利点<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E5%88%A9%E7%82%B9-1" class="hash-link" aria-label="利点 への直接リンク" title="利点 への直接リンク">​</a></h3>
<p>ユーザーからのフィードバックでは、Tooljetのユーザーフレンドリーなインターフェースが重要な利点として挙げられています。プラットフォームの直感的な性質は学習曲線を加速させ、技術的な知識が限られている人でもアプリケーションのビジョンを実現できるようにします。さらに、Tooljetは複雑なワークフローの作成を促進する能力を持つことから、ユーザーはアプリケーション内で複雑なアクションのシーケンスを編成でき、そのユーティリティを増幅させます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="欠点-1">欠点<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E6%AC%A0%E7%82%B9-1" class="hash-link" aria-label="欠点 への直接リンク" title="欠点 への直接リンク">​</a></h3>
<p>しかし、どのツールにも制約がないわけではありません。Tooljetはさまざまな機能を備えてユーザーを支援しますが、一部のユーザーは高度なカスタマイズオプションを求めることがあるかもしれません。プラットフォームがユーザーフレンドリーで効率を重視しているため、高度な特殊な機能や複雑なデザインの微妙なニュアンスを求めるユーザーにとっては制約が生じることがあります。どんな技術でも、ユーザーは利用の容易さと特定のプロジェクト要件に基づいてカスタマイズの程度とのバランスを取る必要があります。</p>
<p>低コード開発の世界において、Tooljetは直感的なデザイン、データモデリングの能力、API統合の機能、そして柔軟な価格モデルの組み合わせを提供する強力な競争相手として登場します。コードのエクスポートと個人のサーバーでアプリケーションをホストするプラットフォームのユニークなアプローチは、低コードの利便性とコーディングの制御との間のギャップを埋め、アプリケーション開発の世界における創造性と革新の旅に参加することを歓迎します。個人がアプリケーション開発の風景を探求しているか、効率的なソリューションを探しているビジネスであっても、Tooljetはその機能豊かなツールキットを探索し、創造性と革新の</p>
<p>旅に乗り出すことを招待します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="superblocksスーパーブロックス">SuperBlocks（スーパーブロックス）<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#superblocks%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%82%B9" class="hash-link" aria-label="SuperBlocks（スーパーブロックス） への直接リンク" title="SuperBlocks（スーパーブロックス） への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/superblocks.png" alt="SuperBlocks" class="img_CfaS"></p>
<p>SuperBlocksは、ビジネスが効率的で柔軟なソリューションを求める組織向けに堅牢でカスタマイズ可能な内部ツールを作成できる主要な低コード開発プラットフォームです。直感的なインターフェースと強力な機能を備えたSuperBlocksは、開発ニーズに対する効率的かつ柔軟なソリューションを提供します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="superblocksの主要な特徴">SuperBlocksの主要な特徴<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#superblocks%E3%81%AE%E4%B8%BB%E8%A6%81%E3%81%AA%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="SuperBlocksの主要な特徴 への直接リンク" title="SuperBlocksの主要な特徴 への直接リンク">​</a></h3>
<ul>
<li>ドラッグアンドドロップインターフェース：SuperBlocksはユーザーフレンドリーなドラッグアンドドロップインターフェースを提供し、ユーザーがコーディングの知識を必要とせずにビジュアルにアプリケーションを設計および構築できるようにします。この機能は開発プロセスを単純化し、非技術的なユーザーでも複雑な内部ツールを作成できるようにします。</li>
<li>広範なコンポーネントライブラリ：SuperBlocksは、プレビルトのコンポーネントとテンプレートを提供する広範なライブラリを提供し、これらを簡単にカスタマイズしてアプリケーションに統合できます。これにより、データの可視化、フォーム入力、ワークフロー自動化などの一般的な機能に対する既製のソリューションが提供され、ゼロからこれらの機能を構築する手間と労力が節約されます。</li>
<li>シームレスな統合：SuperBlocksはさまざまなサードパーティのサービスやAPIとシームレスに統合できるため、ユーザーは外部ツールやデータソースをアプリケーションに組み込むことができます。これにより、既存のシステムとの互換性が確保され、開発されたツールの機能性と柔軟性が向上します。</li>
<li>協力とバージョン管理：SuperBlocksには協力機能が含まれており、チームワークを促進し、開発プロセスを効率化します。複数のチームメンバーがプロジェクトに同時に取り組むことができ、協力、フィードバックの共有、変更の追跡が容易に行えます。さらに、バージョン管理の機能により、開発者は必要に応じてアプリケーションの以前のバージョンに戻すことができます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="superblocksの利点">SuperBlocksの利点<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#superblocks%E3%81%AE%E5%88%A9%E7%82%B9" class="hash-link" aria-label="SuperBlocksの利点 への直接リンク" title="SuperBlocksの利点 への直接リンク">​</a></h3>
<ul>
<li>高速開発：直感的なインターフェースと広範なコンポーネントライブラリにより、SuperBlocksは開発プロセスを加速します。ビジュアルアプローチと既製のコンポーネントにより、手動のコーディングの必要性が減少し、内部ツールのプロトタイピングとデプロイメントが迅速に行えます。</li>
<li>カスタマイズ可能性：SuperBlocksはアプリケーションを特定の要件に合わせてカスタマイズできるようにします。プラットフォームはユーザーインターフェース、ワークフロー、データ統合のデザインに対する柔軟性を提供し、開発されたツールが組織の固有のニーズとブランディングガイドラインと一致することを保証します。</li>
<li>コスト効率：低コードのソリューションを提供することで、SuperBlocksは従来の開発リソースや高額なコーディングの依存を減少させます。これにより、組織は開発チームや専門知識が必要ない内部ツールを作成および維持できるため、大幅なコスト削減が実現します。</li>
<li>スケーラビリティ：SuperBlocksは成長するビジネスに並行してスケール設計されています。組織がシンプルな内部ツールまたは複雑なエンタープライズグレードのアプリケーションを作成する必要がある場合、SuperBlocksはスケーラビリティの要件に対応し、開発されたツールが増加するデータ量とユーザーデマンドに対応できることを確保します。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="retool">Retool<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#retool" class="hash-link" aria-label="Retool への直接リンク" title="Retool への直接リンク">​</a></h2>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/retool.png" alt="retool" class="img_CfaS"></p>
<p>Retoolは、組織がスピードと効率を持って内部ツールを構築するのを支援する人気のある低コード開発プラットフォームです。直感的なインターフェースと強力な機能を備えたRetoolは、広範なコーディング知識を必要とせずに、ビジネスがカスタマイズされたアプリケーションを作成できるようにします。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="retoolの主な特徴">Retoolの主な特徴<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#retool%E3%81%AE%E4%B8%BB%E3%81%AA%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="Retoolの主な特徴 への直接リンク" title="Retoolの主な特徴 への直接リンク">​</a></h3>
<ul>
<li>ドラッグアンドドロップインターフェース：Retoolは、ユーザーがビジュアルにアプリケーションをデザインし組み立てることができるユーザーフレンドリーなドラッグアンドドロップインターフェースを提供しています。これにより、技術的でないユーザーも含め、ユーザーは迅速に機能的な内部ツールを構築できます。</li>
<li>幅広い統合機能：Retoolは、データベース、REST API、サードパーティのサービスなど、さまざまなデータソースとAPIとシームレスに統合できます。これにより、ユーザーはアプリケーション内で既存のデータとシステムを活用でき、ワークフローを合理化し機能を向上させることができます。</li>
<li>事前構築のコンポーネントとテンプレート：Retoolは、ユーザーが開発を加速するのに活用できる大規模なコンポーネントとテンプレートのライブラリを提供しています。これらのコンポーネントは、データテーブル、フォーム、グラフ、認証などの一般的な機能をカバーしており、これらの機能をゼロから構築する手間と時間を節約します。</li>
<li>リアルタイムの協力：Retoolは、チームメンバーがプロジェクトで同時に協力できるリアルタイムの協力機能を提供しています。これにより、協力が促進され、知識共有が容易になり、バージョン管理の問題とボトルネックが排除されることで、開発プロセスが合理化されます。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="retoolの利点">Retoolの利点：<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#retool%E3%81%AE%E5%88%A9%E7%82%B9" class="hash-link" aria-label="Retoolの利点： への直接リンク" title="Retoolの利点： への直接リンク">​</a></h3>
<ul>
<li>速さと効率：Retoolの直感的なインターフェースと事前構築のコンポーネントにより、内部ツールの市場投入までの時間が短縮されます。このプラットフォームはゼロから始める必要がなく、開発者は基本的な機能の構築ではなく、アプリケーションのカスタマイズと微調整に焦点を当てることができます。</li>
<li>カスタマイズ可能性：低コードのアプローチにもかかわらず、Retoolは広範なカスタマイズオプションを提供しています。ユーザーは、特定のビジネス要件とブランディングガイドラインに合わせて、アプリケーションの外観、動作、ワークフローを調整できます。</li>
<li>統合の柔軟性：Retoolの堅牢な統合機能により、さまざまなテックスタックを持つ組織に適しています。このプラットフォームはさまざまなデータソースとAPIとシームレスに接続でき、既存のシステムとの互換性を確保し、アプリケーション間のデータフローを円滑にすることができます。</li>
</ul>
<p>リストの最後になりますが、RetoolはCRUDアプリケーションとしても優れた選択肢です。これはドラッグアンドドロップのビルディングブロックプラットフォームです。外部データベースからデータを取得するためにJavaScriptをカスタマイズする必要があります。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/best-low-code-platform#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>これらは2024年の最も有望な低コードツールです。それぞれが独自の特性を持っており、異なるシナリオには異なる問題解決アプローチが必要です。読者が適切な状況で開発に最も効率的なソリューションを選択できることを期待しています。低コードツールを使用して作業を高速化し、早く帰宅しましょう。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ローコード" term="ローコード"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[高速でコアアプリダッシュボードを構築]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2"/>
        <updated>2024-01-04T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[コアアプリダッシュボードは、洗練されたアプリケーションの中枢です。]]></summary>
        <content type="html"><![CDATA[<p>コアアプリダッシュボードは、洗練されたアプリケーションの中枢です。その本質的には、アプリケーションの特定の要件に合わせて提供される包括的な洞察力とコントロールを提供する中央のインターフェースで、より良い意思決定と管理をサポートします。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="コアアプリダッシュボードとは">コアアプリダッシュボードとは？<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B3%E3%82%A2%E3%82%A2%E3%83%97%E3%83%AA%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%83%BC%E3%83%89%E3%81%A8%E3%81%AF" class="hash-link" aria-label="コアアプリダッシュボードとは？ への直接リンク" title="コアアプリダッシュボードとは？ への直接リンク">​</a></h2>
<p>コアアプリダッシュボードは、洗練されたアプリケーションの中枢です。その本質的には、アプリケーションの特定の要件に合わせて提供される包括的な洞察力とコントロールを提供する中央のインターフェースで、より良い意思決定と管理をサポートします。</p>
<p>それを車のダッシュボードのように考えてみてください - それは運転手に一目で必要なすべてのデータを表示し、効率的なナビゲーションと車両のパフォーマンスを確保します。同様に、コアアプリダッシュボードも同じことを行いますが、アプリケーションの領域に対してです。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜコアダッシュアプ��リを使用すべきか">なぜコアダッシュアプリを使用すべきか？<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%81%AA%E3%81%9C%E3%82%B3%E3%82%A2%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%81%B9%E3%81%8D%E3%81%8B" class="hash-link" aria-label="なぜコアダッシュアプリを使用すべきか？ への直接リンク" title="なぜコアダッシュアプリを使用すべきか？ への直接リンク">​</a></h2>
<p>コアダッシュアプリ、または一般的にはコアダッシュボードアプリケーションとしてよく知られているものの使用は、今日のテクノロジー駆動の世界でますます一般的になっています。これらのダッシュボードは、複雑なプロセスを単純化し、洞察力を提供し、ユーザーエクスペリエンスを向上させる重要な役割を果たします。以下は、コアダッシュアプリを使用する理由です：</p>
<p>中央集中制御：コアダッシュボードアプリケーションは、ユーザーがアプリケーションのさまざまな機能と機能にアクセスし、監視し、制御できる統一プラットフォームを提供します。この中央集中化により、複数のインターフェース間を移動する必要が最小限に抑えられ、効率が向上します。</p>
<p>リアルタイムデータの可視化：ダッシュボードはリアルタイムのデータ可視化を提供し、ユーザーが現在の状態、トレンド、パフォーマンスメトリクスを迅速に把握できるようにします。これは迅速な情報提供に役立ちます。</p>
<p>ユーザーエクスペリエンスの向上：設計が良いダッシュボードは直感的なユーザーインターフェースを提供し、ユーザーが必要な情報に簡単にアクセスできるようにします。これはシームレスで向上したユーザーエクスペリエンスに寄与します。</p>
<p>カスタマイズ：コアダッシュアプリはしばしば特定のニーズに合わせてカスタマイズできます。ユーザーはビュー、メトリクス、レイアウトさえ好みやジョブ機能に合わせてカスタマイズできます。</p>
<p>生産性の向上：重要なデータと機能を1つの場所に統合することにより、ダッシュボードは情報を検索するのに費やす時間を減らし、生産性を向上させます。</p>
<p>統合分析：多くのコアダッシュアプリには、ユーザーの行動、アプリケーションのパフォーマンスなどの洞察を提供する統合分析ツールが付属しています。このデータは成長と最適化を推進するために非常に貴重です。</p>
<p>セキュリティ：ダッシュボードは、ユーザーアクセス制御、暗号化、監査トレイルなどの堅牢なセキュリティ機能を提供できます。これにより、機密データが保護され、認証済みユーザーだけがアクセスできるようになります。</p>
<p>協力：一部のダッシュボードには、チームが効果的に連携し、洞察を共有し、プラットフォーム内でシームレスにコミュニケーションできる協力ツールが付属しています。</p>
<p>スケーラビリティ：組織が成長するにつれて、データとプロセスはより複雑になることがあります。コアダッシュアプリはスケーラブルに設計されており、要求が増加しても効果的かつ効率的であることを確保します。</p>
<p>コスト効果的：複数の機能とデータソースを1つのプラットフォームに統合することにより、ダッシュボードは複数のスタンドアロンツールの必要性を減少させることができます。この統合はソフトウェア調達とトレーニングの両方でコスト削減につながる可能性があります。</p>
<p>アラートと通知：ダッシュボードは特定の基準や閾値に基づいてアラートや通知を送信するように設定できます。これにより、ユーザーは重要なイベントや変更についてすぐに通知を受けることができます。</p>
<p>意思決定のサポート：関連するデータと分析が手元にあるため、意思決定者は実行可能な洞察を得ることができ、より情報豊かで戦略的な意思決定をサポートします。</p>
<p>要約すると、コアダッシュアプリはビジネスと個人の両方にとって強力で包括的なツールを提供します。監視、分析、協力、または意思決定のためであれ、これらのダッシュボードは効率、生産性、総合的なユーザーエクスペリエンスを大幅に向上させる一連の利点を提供します。データの統合、洞察の獲得、業務効率の向上を検討している場合、コアダッシュアプリは必要な解決策かもしれません。</p>
<p>以下是保留md格式的日语翻译：</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="コアアプリダッシュボードの機能">コアアプリダッシュボードの機能<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B3%E3%82%A2%E3%82%A2%E3%83%97%E3%83%AA%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%83%BC%E3%83%89%E3%81%AE%E6%A9%9F%E8%83%BD" class="hash-link" aria-label="コアアプリダッシュボードの機能 への直接リンク" title="コアアプリダッシュボードの機能 への直接リンク">​</a></h2>
<p>特定のアプリケーションの性質に基づいて具体的な機能が異なるかもしれませんが、コアアプリダッシュボードは普遍的に以下の機能を提供することが期待されています：</p>
<p>包括的な分析：アプリケーションのパフォーマンスメトリクス、ユーザーアクティビティ、その他の重要なデータの俯瞰ビューを提供し、ユーザーがアプリの使用を理解し、最適化するのに役立ちます。</p>
<p>ユーザー管理：マルチユーザープラットフォームにとって重要な機能で、ユーザーのシームレスな管理を可能にし、追加、編集、削除、および役割の定義ができます。</p>
<p>設定コントロール：インターフェースの外観を変更したり、アプリケーションのバックエンドメカニクスを調整したりする場合、ダッシュボードはさまざまな設定に対する直感的で集中的な制御を可能にします。</p>
<p>通知ハブ：これはすべてのアラートを統合し、ユーザーが重要な更新、メッセージ、またはタスクを見逃さないようにします。</p>
<p>タスク管理：一部のダッシュボードは、ユーザーがプロジェクトと責任を割り当て、追跡、管理できるタスク管理ツールを統合しています。</p>
<p>統合と拡張：ダッシュボードは、サードパーティのツールを統合したり、アプリケーションの機能を拡張したりするためのインターフェースを提供する場合があります。</p>
<p>コアアプリダッシュボードの活用：考慮すべきポイント</p>
<p>コアアプリダッシュボードの潜在能力を活用するには、いくつかの重要な考慮事項を理解し、対処する必要があります：</p>
<p>直感的なデザイン：混雑したダッシュボードや複雑なダッシュボードはユーザーを妨げることがあります。クリーンで直感的でユーザーフレンドリーなデザインを確保することが重要です。</p>
<p>堅牢なセキュリティ：ダッシュボードが提供する制御と洞察を考えると、セキュリティは妥協できません。定期的なアップデート、強力な暗号化、多要素認証はセキュリティを向上させることができます。</p>
<p>拡張性：アプリケーションが進化するにつれて、ダッシュボードも適切にスケーリングする必要があります。これには追加のデータ、ユーザー、機能を収容することが含まれます。</p>
<p>カスタマイズ：すべての組織またはユーザーには固有のニーズがあります。カスタマイズオプションを提供することで、ダッシュボードが関連性を保ち、効果的であることができます。</p>
<p>定期的なアップデート：デジタル領域はダイナミックです。ダッシュボードは定期的に新機能を組み込み、バグを修正し、パフォーマンスを向上させる必要があります。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudを使用してコアダッシュボードを構築する方法">ILLA Cloudを使用してコアダッシュボードを構築する方法<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#illa-cloud%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%82%B3%E3%82%A2%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%83%BC%E3%83%89%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95" class="hash-link" aria-label="ILLA Cloudを使用してコアダッシュボードを構築する方法 への直接リンク" title="ILLA Cloudを使用してコアダッシュボードを構築する方法 への直接リンク">​</a></h2>
<p>絶えず進化するデジタル領域では、データをすばやく視覚化し、行動に移す能力が重要です。よく構築されたコアアプリダッシュボードは、すべての重要な情報の中心的なハブとなることができます。これをILLA Cloudの革新的な力と組み合わせることで、ダッシュボードは機能的だけでなく、変革的になる可能性があります。以下は、この変革の旅に乗り出す方法です：</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/core-app-dashboard/dashboard.png" alt="ダッシュボード" class="img_CfaS"></p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ1illa-cloudでの始め方">ステップ1：ILLA Cloudでの始め方<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%971illa-cloud%E3%81%A7%E3%81%AE%E5%A7%8B%E3%82%81%E6%96%B9" class="hash-link" aria-label="ステップ1：ILLA Cloudでの始め方 への直接リンク" title="ステップ1：ILLA Cloudでの始め方 への直接リンク">​</a></h3>
<p>最初のステップは公式のILLA Cloudウェブサイトです。登録し、アカウントを作成します。このステップで、直感的なアプリケーション開発向けにカスタマイズされたツールが豊富なダッシュボードへのゲートウェイを開きます。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ2新しいプロジェクトの作成">ステップ2：新しいプロジェクトの作成<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%972%E6%96%B0%E3%81%97%E3%81%84%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="ステップ2：新しいプロジェクトの作成 への直接リンク" title="ステップ2：新しいプロジェクトの作成 への直接リンク">​</a></h3>
<p>「新しいプロジェクトの作成」ボタンを見つけましたか？クリックしてください。次に、プロジェクトに名前をつけ、説明を追加します。焦点を当てているので、プロジェクトタイプとしてコ</p>
<p>アアプリダッシュボードを選択したいでしょう。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ3ユーザーインターフェースの設計">ステップ3：ユーザーインターフェースの設計<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%973%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9%E3%81%AE%E8%A8%AD%E8%A8%88" class="hash-link" aria-label="ステップ3：ユーザーインターフェースの設計 への直接リンク" title="ステップ3：ユーザーインターフェースの設計 への直接リンク">​</a></h3>
<p>ILLA Cloudのローコード環境の強力さを活用します。ユーザーインターフェースの設計は、ドラッグアンドドロップのゲームとなります。ボタン、チャート、ウィジェットなど、それらを自分のブランドのアイデンティティに合わせて配置し、スタイリングします。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ4データソースの統合">ステップ4：データソースの統合<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%974%E3%83%87%E3%83%BC%E3%82%BF%E3%82%BD%EF%BF%BD%E3%83%BC%E3%82%B9%E3%81%AE%E7%B5%B1%E5%90%88" class="hash-link" aria-label="ステップ4：データソースの統合 への直接リンク" title="ステップ4：データソースの統合 への直接リンク">​</a></h3>
<p>ILLA Cloudはデータ統合を簡単にします。ノーコードのAPIコネクタを使用して、複数のリポジトリからデータをシームレスに取得できます。それが複雑なデータベース、多機能な外部API、または謙虚なスプレッドシートであっても、問題ありません。あなたのダッシュボードは今、リアルタイムのデータで溢れています。ILLA Cloudは幅広いビジネスニーズに対応するため、さまざまなデータソースをサポートしています。例えば、</p>
<p>Airtable：スプレッドシートとデータベースのハイブリッド機能で知られるAirtableの構造化データをILLA Cloudで活用できます。</p>
<p>Google Sheets：多くの組織がGoogle Sheetsを協力機能のために使用しています。これらのシートを直接ダッシュボードに統合して効率的なワークフローを実現できます。</p>
<p>MySQL &amp; PostgreSQL：これらの人気のあるリレーショナルデータベース管理システムは、大量の構造化データを保持しています。ILLA Cloudのコネクタは、このデータをシームレスに可視化できるようにします。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ5データ自動化ワークフローの作成">ステップ5：データ自動化ワークフローの作成<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%975%E3%83%87%E3%83%BC%E3%82%BF%E8%87%AA%E5%8B%95%E5%8C%96%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="ステップ5：データ自動化ワークフローの作成 への直接リンク" title="ステップ5：データ自動化ワークフローの作成 への直接リンク">​</a></h3>
<p>正確さが重要です。ILLA Cloudのデータ自動化ワークフローと堅牢なイベントハンドラー機能を使って、不一致をさようならしましょう。緻密なデータ検証、適切な変換、同期された更新のステージを設定します。イベントハンドラーはイベント処理機能として機能し、ワークフロー内で動的なトリガーメカニズムを作成できます。要するに、そのロジックは「何かが起こったら、それから何かが起こる」という原則に基づいて動作します。これにより、あなたのダッシュボードは常にリアルタイムで応答し、絶対の真実を反映します。</p>
<p>この改訂版では、データの正確性とリアルタイムの応答力を確保する文脈でイベントハンドラーの重要性を強調しています。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ6オペレーション自動化">ステップ6：オペレーション自動化<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%976%E3%82%AA%E3%83%9A%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E8%87%AA%E5%8B%95%E5%8C%96" class="hash-link" aria-label="ステップ6：オペレーション自動化 への直接リンク" title="ステップ6：オペレーション自動化 への直接リンク">​</a></h3>
<p>日常のタスクは自動化できます。ILLA Cloudのオペレーション自動化機能にお任せください。設定基準に基づいてアクションを起動するワークフローを設計します。その結果、手作業のタスクが減少し、全体的な効率が向上します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ステップ7テストと展開">ステップ7：テストと展開<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E3%82%B9%E3%83%86%E3%83%83%E3%83%977%E3%83%86%E3%82%B9%E3%83%88%E3%81%A8%E5%B1%95%E9%96%8B" class="hash-link" aria-label="ステップ7：テストと展開 への直接リンク" title="ステップ7：テストと展開 への直接リンク">​</a></h3>
<p>傑作を発表する前に、テストしてください。ILLA Cloud環境を使用して、ダッシュボードマシンのすべての歯車がスムーズに動作することを確認します。パフォーマンスに満足したら、ダッシュボードを目的の環境に展開し、関係者にその能力を楽しんでもらいましょう。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/core-app-dashboard-2#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>コアアプリのダッシュボードを構築することは難しいように思えるかもしれませんが、ILLA Cloudを使用すれば、データを言語として織り交ぜることに似ています。このガイドは、導入から展開までの構造化されたパスを提供し、あなたの旅がシームレスであることを確認します。ILLA Cloudで作成するコアアプリのダッシュボードは、単なるデータの保管庫だけでなく、洞察の中心で、情報に基づく意思決定を促進し、成長を促進します。ILLA Cloudの世界に飛び込んで、アプリ開発をタスクだけでなく、体験に変えましょう。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ローコード" term="ローコード"/>
        <category label="コアアプリダッシュボード" term="コアアプリダッシュボード"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024年にカスタムの低コードCRMを構築する方法]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/low-code-crm</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/low-code-crm"/>
        <updated>2024-01-04T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[低コードプラットフォームの進化と共に、ますます多くの企業がこれらのプラットフォームを使用して業務システムを構築しようとしています。]]></summary>
        <content type="html"><![CDATA[<p>低コードプラットフォームの進化と共に、ますます多くの企業がこれらのプラットフォームを使用して業務システムを構築しようとしています。低コードプラットフォームの主要な利点は、迅速な反復が可能であることです。この迅速な反復は、市場の変化に迅速に対応する鍵であり、それが迅速な市場シェアの獲得につながります。迅速な市場シェアの獲得は、迅速な資本調達に不可欠であり、この迅速な資本流入がさらなる迅速な反復を促進します。このサイクルにより、低コードプラットフォームは今後数年間にわたり、企業が業務システムを開発するための優先選択肢として位置付けられています。</p>
<p>顧客関係管理（CRM）は、すべてのビジネスにとって不可欠なシステムであり、低コードプラットフォームにおける重要なアプリケーションシナリオとして存在しています。この記事では、低コードプラットフォームを使用してCRMシステムを構築する方法を探ります。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜ独自のcrmを構築するのか">なぜ独自のCRMを構築するのか？<a href="https://illacloud.github.io/illa-website/ja/blog/low-code-crm#%E3%81%AA%E3%81%9C%E7%8B%AC%E8%87%AA%E3%81%AEcrm%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8B" class="hash-link" aria-label="なぜ独自のCRMを構築するのか？ への直接リンク" title="なぜ独自のCRMを構築するのか？ への直接リンク">​</a></h2>
<p>すべてのビジネスにはCRMシステムが必要ですが、市場で現在利用可能なものは複雑すぎるか、過度に単純化されており、特定のビジネスニーズを満たすのが難しいため、多くの企業が独自のCRMシステムを構築することを選択しています。</p>
<p>低コードツールを使用してCRMシステムを構築することにより、迅速な反復と市場の変化に迅速に対応できます。このサイクルは、低コードプラットフォームの将来を確立し、業務システムを開発するための解決策として確立します。</p>
<p>低コードの柔軟な機能により、企業の固有の要件に合わせた完全にカスタマイズされたCRMツールを迅速に作成できます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="低コードプラットフォームの利点">低コードプラットフォームの利点<a href="https://illacloud.github.io/illa-website/ja/blog/low-code-crm#%E4%BD%8E%E3%82%B3%E3%83%BC%E3%83%89%E3%83%97%E3%83%A9%E3%83%83%E3%83%88%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%81%AE%E5%88%A9%E7%82%B9" class="hash-link" aria-label="低コードプラットフォームの利点 への直接リンク" title="低コードプラットフォームの利点 への直接リンク">​</a></h2>
<p>低コードプラットフォームの主要な利点は、迅速な反復をサポートできる能力です。この迅速な反復は、市場の変化に迅速に対応するために重要であり、迅速な市場シェアと資本の獲得につながり、さらなる迅速な反復にフィードバックします。このサイクルにより、低コードプラットフォームは近い将来、業務システムを構築するための企業の優先選択肢として確立されます。</p>
<p>低コードを使用してCRMを構築することは、操作コストやデザインスタイルを気にせず、ビジネスロジックに焦点を当てることを意味します。これにより、誰でも自社やチーム向けにカスタマイズされたシステムを開発できます。</p>
<p>さらに、これらのシステムは美しく、簡単に変更できます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudでcrmを構築する">ILLA CloudでCRMを構築する<a href="https://illacloud.github.io/illa-website/ja/blog/low-code-crm#illa-cloud%E3%81%A7crm%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B" class="hash-link" aria-label="ILLA CloudでCRMを構築する への直接リンク" title="ILLA CloudでCRMを構築する への直接リンク">​</a></h2>
<p>ILLA Cloudは、企業が迅速に業務システムを構築するのを支援する低コードプラットフォームです。様々なコンポーネントを提供し、ビジネスシステムを迅速に構築できるようにします。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/low-code-crm/crm.webp" alt="crm" class="img_CfaS"></p>
<p>ILLA Cloudで構築されたシステムには、以下の機能があります：</p>
<ul>
<li>顧客管理</li>
<li>進捗トラッキング</li>
<li>データレポート管理</li>
</ul>
<p>低コードツールとして、ILLA Cloudは無制限のカスタマイズを可能にし、企業に固有の特徴を持つベスポーク機能の作成をサポートします。</p>
<p>ドラッグアンドドロップのシンプリシティを備えたILLA Cloudにより、ユーザーはわずか数分で完全な低コードCRMを作成できます。このプラットフォームは一般的なコンポーネントの幅広い配列を誇り、任意のデータベースまたはデ</p>
<p>ータソースからデータを抽出する能力も備えています。したがって、低コードCRMを構築するためにILLA Cloudを選択することは非常に優れた決定です。</p>
<p>このプラットフォームのユーザーフレンドリーなインターフェースは、技術的な知識が少ない人にもアクセス可能にし、多くの必要な機能が特定のビジネス要件に合わせて簡単にCRMシステムに統合できることを保証します。</p>
<p>さらに、さまざまなデータベースやデータソースとのシームレスな統合は、データを効率的に統合し活用する能力を企業に提供し、CRMシステムの効果を高めます。これは、包括的で最新の顧客データベースを維持することが成功するCRMシステムの中核です。</p>
<p>要約すると、ILLA Cloudの使いやすさ、包括的なコンポーネントの選択肢、堅牢なデータ統合機能の組み合わせは、低コードCRMソリューションを実装しようとしている企業にとってトップクラスの選択肢となります。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudの利点">ILLA Cloudの利点<a href="https://illacloud.github.io/illa-website/ja/blog/low-code-crm#illa-cloud%E3%81%AE%E5%88%A9%E7%82%B9" class="hash-link" aria-label="ILLA Cloudの利点 への直接リンク" title="ILLA Cloudの利点 への直接リンク">​</a></h2>
<p>ILLA Cloudは、ドラッグアンドドロップを使用して迅速なWeb UIの構築を可能にし、複雑なWeb技術スキルを必要としません。このアクセシビリティにより、誰でも独自のビジネスシステムを作成できます。</p>
<p>ILLA Cloudは、すべての製品が完全にホストされており、操作コストを排除するため、操作スキルは必要ありません。</p>
<p>ILLA Cloudは追加のツールなしで共同チームの更新をサポートします。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/low-code-crm/team.gif" alt="team" class="img_CfaS"></p>
<p>ILLAは完全なAI機能も統合しています。顧客にテキストメッセージを送信する必要がある場合、ユーザーは製品内の最新のAIエージェントを直接使用できます。</p>
<p>私たちは、AI駆動のビジネスツールの構築が将来の優先方法であると考えています。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/low-code-crm/send.gif" alt="send" class="img_CfaS"></p>
<p>柔軟性は低コードツールの強みの一つであり、我々はユーザーが迅速に対応する製品を迅速に作成できる業界をリードするソリューションを提供しています。低コードを使用して独自の低コードCRMを構築するすべての開発者をサポートできることを願っています。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/low-code-crm#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>すべての企業は独自の低コードCRMを持つべきであり、カスタマイズされたニーズと機能が柔軟な運用の鍵です。低コードツールを使用してビジネスツールを迅速に構築できることを願っています。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="低コードCRM" term="低コードCRM"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[バックエンドエンジニアがビジネスツールを作成するために設計された最高の製品]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/backend-create-web-ui</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/backend-create-web-ui"/>
        <updated>2024-01-03T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[バックエンドエンジニアとして、私は同僚の多様なニーズに応えるために多くのデータダッシュボードや管理パネルを作成することがよくありました。多様なビジネスデータを表示したり、CI/CDタスクを可視化したり、クリスマスイベント用の特別な管理パネルを作成したりすることから、これらすべてをわずか14日で達成しました。]]></summary>
        <content type="html"><![CDATA[<p>こんにちは、私はオーウェンです。私はバックエンドエンジニアとして、Web UIを作成するのが得意ではありませんが、同僚のさまざまなニーズに応えるためにさまざまなデータパネルと管理バックエンドを開発する必要があります。</p>
<p>これには複雑なビジネスデータの表示からCI/CDタスクの可視化、クリスマスイベント用の特別な管理バックエンドの作成までが含まれます。これらのタスクを単独で完了することはできず、継続的なイテレーションのためにフロントエンドエンジニアと協力する必要があります。これは私の作業効率に大きな影響を与えています。</p>
<p>私は内部チーム用のさまざまなツール、個人用のシンプルなツール、および時間に迫ったツールを独自に製作することを望んでいます。これらのツールが見た目が良く、使いやすく、迅速に構築できることが私の最大の要望です。したがって、私は今、バックエンドエンジニアがカスタマイズされたツールを迅速に構築できるプロジェクトに完全に取り組んでいます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="illa-cloudとは">ILLA Cloudとは<a href="https://illacloud.github.io/illa-website/ja/blog/backend-create-web-ui#illa-cloud%E3%81%A8%E3%81%AF" class="hash-link" aria-label="ILLA Cloudとは への直接リンク" title="ILLA Cloudとは への直接リンク">​</a></h2>
<p>ILLAは、開発者向けに設計されたローコードツールで、ドラッグアンドドロップインターフェースを介してAdminパネルとダッシュボードを迅速に開発できるようにします。ILLA Cloudは、一般的なデータベースやデータソース、REST API、GraphQLを含む幅広いデータソースと統合されています。</p>
<p>公式ウェブサイト：<a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">https://illacloud.com</a></p>
<p>ILLAを使用すると、次のようなさまざまなツールを迅速に構築できます：</p>
<ul>
<li>Webおよびアプリの管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
</ul>
<p>これらはドラッグ＆ドロップで簡単に作成でき、論理的な接続にはわずかなJavaScriptが必要です。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/backend-create-web-ui/dashboard.png" alt="ダッシュボード" class="img_CfaS"></p>
<p>ILLAには、AI、データベース、さまざまなSaaSプラットフォームを統合できる包括的なコネクタツールのセットも備わっており、お客様は作成した製品をすばやく使用している製品とリンクできます。スケジュールされたタスク、Webフックをサポートし、パラメータの受け渡しも可能です。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/backend-create-web-ui/connector.png" alt="コネクタ" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜilla-cloudをお勧めするのか">なぜILLA Cloudをお勧めするのか<a href="https://illacloud.github.io/illa-website/ja/blog/backend-create-web-ui#%E3%81%AA%E3%81%9Cilla-cloud%E3%82%92%E3%81%8A%E5%8B%A7%E3%82%81%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8B" class="hash-link" aria-label="なぜILLA Cloudをお勧めするのか への直接リンク" title="なぜILLA Cloudをお勧めするのか への直接リンク">​</a></h2>
<p>私たちのチームによる継続的なイテレーションの結果、ILLAは現在、多くの主要なデータソースとAPIをサポートしています。バックエンド開発者は、ILLAを使用してドラッグアンドドロップの方法でカスタマイズされたツールを迅速に構築でき、日常業務での多くの内部ツールの構築速度が根本的に向上しました。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/backend-create-web-ui/resource.png" alt="リソース" class="img_CfaS"></p>
<p>もはや特定のタイプのデータベース用にマイクロサービスを構築する必要はありません。ILLAは直接のSQLデータベースクエリをサポートしており、バックエンド開発者にとって非常にユーザーフレンドリーです。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/backend-create-web-ui/sql.png" alt="SQL" class="img_CfaS"></p>
<p>ILLAには、Slackにメッセージを簡単に送信したり、電子メールを送信したり、他のシステムとコミュニケーションを取ったりするための組み込みのコネクタ機能も備わっており、これらはWebフックとスケジュールされたタスクを使用して呼び出すことができます。</p>
<p>これは職場での多くの自動化タスクの開発効率を根本的に向上させます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/backend-create-web-ui/connector.png" alt="コネクタ" class="img_CfaS"></p>
<p>さらに、ILLAは現在、Huggingface AIモデルを簡単に使用できるようにし、AI駆動のツールを構築する際に特に興味深いです。ILLAにはAIエージェント機能も含まれており、テキスト分析、音声分析、画像分析などに便利に使用できます。</p>
<p>ILLAで構築されたツールは、よりスマートになるようにすばやくLLM（Large Language Models）に接続できます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/backend-create-web-ui/agent.png" alt="エージェント" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="最後に">最後に<a href="https://illacloud.github.io/illa-website/ja/blog/backend-create-web-ui#%E6%9C%80%E5%BE%8C%E3%81%AB" class="hash-link" aria-label="最後に への直接リンク" title="最後に への直接リンク">​</a></h2>
<p>私はILLA Cloudがさまざまなツールを迅速に構築するのに役立つことを願っています。ILLA Cloudは現在ベータ版であり、ユーザーからのフィードバックを積極的に収集しています。ご質問や提案がある場合は、お気軽にお問い合わせください。</p>
<p>私はすべてのエンジニアが特定のフロントエンドタスクに苦労する必要なく、効率的に作業できることを願っています。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="インターナルツール" term="インターナルツール"/>
        <category label="データダッシュボード" term="データダッシュボード"/>
        <category label="管理パネル" term="管理パネル"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ローコード vs トラディショナル開発：選択における最適な効率性]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional"/>
        <updated>2024-01-03T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[開発実践の連続的な進化に伴い、ローコードツールの登場は様々な開発シナリオに革新的な解決策を導入しました。これにより、プロジェクトを一から始める必要が軽減され、より重要なビジネス活動のためにかなりの時間が節約されました。しかし、ローコードが開発を加速する一方で、ある程度の柔軟性を犠牲にしていることを認識することが重要です。その結果、すべてのソリューションがローコード開発に適しているわけではありません。ローコードツールを好むシナリオと伝統的なコード開発がより適切なシナリオの分析を深めてみましょう。この探求を通じて、ローコードと伝統的開発の重要な比較が最優先され、最も効率的なアプローチを選択することの重要性が強調されます。]]></summary>
        <content type="html"><![CDATA[<p>開発実践の連続的な進化に伴い、ローコードツールの登場は様々な開発シナリオに革新的な解決策を導入しました。これにより、プロジェクトを一から始める必要が軽減され、より重要なビジネス活動のためにかなりの時間が節約されました。しかし、ローコードが開発を加速する一方で、ある程度の柔軟性を犠牲にしていることを認識することが重要です。その結果、すべてのソリューションがローコード開発に適しているわけではありません。ローコードツールを好むシナリオと伝統的なコード開発がより適切なシナリオの分析を深めてみましょう。この探求を通じて、ローコードと伝統的開発の重要な比較が最優先され、最も効率的なアプローチを選択することの重要性が強調されます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="一時的なビジネスイニシアティブを開始する場合">一時的なビジネスイニシアティブを開始する場合<a href="https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional#%E4%B8%80%E6%99%82%E7%9A%84%E3%81%AA%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E3%82%A4%E3%83%8B%E3%82%B7%E3%82%A2%E3%83%86%E3%82%A3%E3%83%96%E3%82%92%E9%96%8B%E5%A7%8B%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88" class="hash-link" aria-label="一時的なビジネスイニシアティブを開始する場合 への直接リンク" title="一時的なビジネスイニシアティブを開始する場合 への直接リンク">​</a></h2>
<p>頻繁な祝日や特別な機会の動的な風景では、独特のオンライン体験を作り出すことが不可欠です。各企業にはユニークなマーケティングの日があり、魅力的な活動が必要です。これらのオンラインマーケティングキャンペーンを作成することは、開発上の課題を必然的に提示し、かなりのリソース配分を必要とします。視覚的に魅力的なデザインの必要性は明らかですが、全体的な</p>
<p>複雑さが1-2週間の限られたライフサイクルに大きな開発コストを正当化することはありません。このような場合、ローコードツールの選択は財政的に賢明な決定として浮上します。ここでは、特定のローコードソリューションを支持します。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ユーザー向けコンポーネントの対応webflow">ユーザー向けコンポーネントの対応：Webflow<a href="https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional#%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E5%90%91%E3%81%91%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E5%AF%BE%E5%BF%9Cwebflow" class="hash-link" aria-label="ユーザー向けコンポーネントの対応：Webflow への直接リンク" title="ユーザー向けコンポーネントの対応：Webflow への直接リンク">​</a></h3>
<p>直感的なドラッグアンドドロップインターフェースとデザイナーフレンドリーな調整を備えたWebflowは、視覚的に魅力的なランディングページの作成を容易にします。このアプローチにより、ユーザーは美的に魅力的なウェブサイトと対話することができ、顕著なことに、単一のデザイナーの専門知識のみが必要です。さらに、Webflowは簡単にカスタマイズできるテンプレートの配列を提供し、優れたウェブサイトを迅速に構築することができます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/lowcode-vs-traditional/webflow.png" alt="webflow" class="img_CfaS"></p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="ビジネス運営の管理illa-cloud">ビジネス運営の管理：ILLA Cloud<a href="https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional#%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E9%81%8B%E5%96%B6%E3%81%AE%E7%AE%A1%E7%90%86illa-cloud" class="hash-link" aria-label="ビジネス運営の管理：ILLA Cloud への直接リンク" title="ビジネス運営の管理：ILLA Cloud への直接リンク">​</a></h3>
<p>使用されるフロントエンド技術にかかわらず、ビジネス運営を監視するための効果的な管理ツールは不可欠です。</p>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、箱から出してすぐに使えるローコードツールとして、開発者が直感的なJavaScriptを使用して内部ツールを迅速に構築することを可能にし、新しいプロジェクトを作成する必要を排除します。</p>
<ul>
<li>Web＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
</ul>
<p>コンポーネントライブラリに依存するシナリオと比較して、ILLA Cloudは前述のツールの構築速度が10倍速いと自負しています。さらに、ILLA Cloudは複数のチームメンバー間の共同編集をサポートし、効率的なチームワークを促進します。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/lowcode-vs-traditional/dashboard.png" alt="dashboard" class="img_CfaS"></p>
<p>これら二つのツールの相乗効果は、マーケティングシナリオにおけるビジネス要件の作成を加速します。この相乗的なアプローチは、広範な開発リソースの必要性を最小限に抑えながら、迅速な応答と展開の需要に対応します。結果として、ビジネスイテレーションの速度を新たな高みに押し上げます。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="新規事業を開始する際">新規事業を開始する際<a href="https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional#%E6%96%B0%E8%A6%8F%E4%BA%8B%E6%A5%AD%E3%82%92%E9%96%8B%E5%A7%8B%E3%81%99%E3%82%8B%E9%9A%9B" class="hash-link" aria-label="新規事業を開始する際 への直接リンク" title="新規事業を開始する際 への直接リンク">​</a></h2>
<p>プロジェクトの開始には、その特性を徹底的に評価することが必要です。ソーシャルプラットフォーム、ゲームアプリケーション、IMサービスなどの包括的なtoC製品については、従来の開発方法論を推奨します。これにより、進化する要件に適応する高度な柔軟性を確保できます。</p>
<p>小売りやサービスを中心とした事業については、フロントエンドのプレゼンテーションにShopifyを利用することが有利です。この選択は、製品の広範な配布を保証し、開発コストを抑制します。さらに、Shopifyはカスタマイズをサポートし、多様なビジネスニーズに効果的に対応します。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/lowcode-vs-traditional/shopify.png" alt="shopify" class="img_CfaS"></p>
<p>アプリやウェブサイトの迅速な開発が最優先事項である場合、直接コーディングがより速い解決策を提供することがあります。したがって、適切なソリューションの選択は、シナリオのユニークな特性に大きく依存します。</p>
<p>Shopifyのバックエンド機能が要件を満たさない場合、ILLA Cloudの統合によってそのギャップを埋めることができ、カスタマイズされた管理のためのプラットフォームを提供します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/lowcode-vs-traditional#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>開発ツールを選択する際の意思決定プロセスでは、多面的なアプローチが推奨されます。直接コーディングは比類のない柔軟性を提供しますが、それは開発速度のコストとしてやってきます。ローコードツールとSaaSソリューションの戦略的な統合により、生産性の大幅な向上が期待できます。</p>
<p>柔軟性が求められ、コアビジネスに不可欠なオペレーションについては、従来の開発方法が好まれる選択です。従来の開発方法が提供する敏捷性とコントロールにより、特定のニーズに高度に特化した製品が生み出されます。</p>
<p>最終的に、万能の解決策は存在しません。最良の選択は、手元のシナリオのユニークな要件に最も密接に合致するものです。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="ローコード" term="ローコード"/>
        <category label="伝統的開発" term="伝統的開発"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024年到来，私はMUIを選ぶべきでしょうか？]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/mui-2024</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/mui-2024"/>
        <updated>2024-01-03T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[各企業は独自のオンラインビジネスを持っており、ビジネスは更新とイテレーションを続けています。]]></summary>
        <content type="html"><![CDATA[<p>2024年が訪れ、Reactコンポーネントライブラリのエコシステムは依然として非常に繁栄しています。この記事では、さまざまな観点から2つの現在人気のあるコンポーネントライブラリを解説し、ユーザーがより情報を得て選択をするのに役立つ客観的な分析を提供します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="なぜコンポーネントライブラリを選ぶのか">なぜコンポーネントライブラリを選ぶのか？<a href="https://illacloud.github.io/illa-website/ja/blog/mui-2024#%E3%81%AA%E3%81%9C%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%82%92%E9%81%B8%E3%81%B6%E3%81%AE%E3%81%8B" class="hash-link" aria-label="なぜコンポーネントライブラリを選ぶのか？ への直接リンク" title="なぜコンポーネントライブラリを選ぶのか？ への直接リンク">​</a></h2>
<p>一般的に、ウェブアプリケーションを構築するすべての企業は、コンポーネントライブラリを選択する傾向があります。これらのライブラリは、選択肢、入力、チェックボックスなどの使用可能なコンポーネントを提供し、スタイルや既存の魅力的なスタイルを使用してカスタマイズでき、広範な基本的な機能をゼロから構築する必要なく、美しいウェブサイトを迅速に作成することを可能にします。</p>
<p>要するに、コンポーネントライブラリは通常、次の2つのシナリオで使用されます：</p>
<ul>
<li>外部ツール：通常、企業のスタイルに従い、より美的でレスポンシブなユーザーに直接ターゲットを絞り込んだものです。</li>
<li>内部ツール：企業の従業員が内部で使用することを目的とし、美的デザインに焦点を当てつつ、迅速な機能実装を優先します。</li>
</ul>
<p>次に、以下のポイントに基づいて2つのコンポーネントライブラリを分析します：</p>
<ol>
<li>デザイン</li>
<li>機能の豊富さ</li>
<li>異なるシナリオでの選択方法</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="内部ツールシナリオのための他の選択肢">内部ツールシナリオのための他の選択肢<a href="https://illacloud.github.io/illa-website/ja/blog/mui-2024#%E5%86%85%E9%83%A8%E3%83%84%E3%83%BC%E3%83%AB%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E4%BB%96%E3%81%AE%E9%81%B8%E6%8A%9E%E8%82%A2" class="hash-link" aria-label="内部ツールシナリオのための他の選択肢 への直接リンク" title="内部ツールシナリオのための他の選択肢 への直接リンク">​</a></h2>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、新しいプロジェクトを作成する必要なしに、シンプルなJSで内部ツールを迅速に構築できる即戦力のローコードツールです。</p>
<ul>
<li>ウェブ＆アプリ管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズ可能なB2Bツール</li>
</ul>
<p>コンポーネントライブラリを使用して構築するよりも、ILLA Cloudを使用すると10倍速くツールを構築でき、チーム内での共同編集をサポートします。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/mui-2024/dashboard.png" alt="ダッシュボード" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="muiの特徴">MUIの特徴<a href="https://illacloud.github.io/illa-website/ja/blog/mui-2024#mui%E3%81%AE%E7%89%B9%E5%BE%B4" class="hash-link" aria-label="MUIの特徴 への直接リンク" title="MUIの特徴 への直接リンク">​</a></h2>
<p>MUIに関する詳細なデータ：</p>
<ul>
<li>⭐ Githubスター：90k</li>
<li>⏬ NPMダウンロード：週に326,852回のダウンロード</li>
<li>💪🏼 初版リリース日：2014年11月6日</li>
</ul>
<p>MUIは2014年から継続的にメンテナンスされている長寿プロジェクトで、ほぼ10年間の安定性を誇っています。その高いスター数と週間ダウンロード数は、コミュニティが一貫して活発であることを保証しています。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/mui-2024/mui.png" alt="mui" class="img_CfaS"></p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="デザイン">デザイン<a href="https://illacloud.github.io/illa-website/ja/blog/mui-2024#%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3" class="hash-link" aria-label="デザイン への直接リンク" title="デザイン への直接リンク">​</a></h3>
<p>デザインの点では、MUIは厳密にGoogleの有名なマテリアルデザインに従っています。MUIのカスタマイズ機能は広範で、内部および外部のさまざまなシナリオに対応しています。多くの有名なオープンソースプロジェクトがフロントエンド開発にMUIを使用しています。ほとんどの機能について、MUIは包括的なサポートを提供しています。</p>
<p>一般的な機能に加えて：</p>
<ul>
<li>色</li>
<li>ボーダー半径</li>
<li>ダークモード/ライトモード</li>
</ul>
<p>MUIはフォント、フォントサイズ、色、マージンの完全な設定をサポートし、10年間の開発プロジェクトとして強力なツールとなっています。</p>
<p>CSSサポートに関して、MUIは独自のシステムを持ち、全体のレイアウトでemotionjsを利用してスタイルの調整を行います。これは学習曲線を伴い、特定のスタイル変更にはドキュメンテーションの参照が必要かもしれません。</p>
<h3 class="anchor anchorWithStickyNavbar_dXVO" id="機能の豊富さ">機能の豊富さ<a href="https://illacloud.github.io/illa-website/ja/blog/mui-2024#%E6%A9%9F%E8%83%BD%E3%81%AE%E8%B1%8A%E5%AF%8C%E3%81%95" class="hash-link" aria-label="機能の豊富さ への直接リ�ンク" title="機能の豊富さ への直接リンク">​</a></h3>
<p>MUIの</p>
<p>コンポーネントタイプは非常に複雑で、いくつかの次元に分かれています：</p>
<p>これには以下が含まれます：</p>
<ul>
<li>MUIコア：MUIの基本的な機能コンポーネントで、多くの基本コンポーネントとスタイルシステムが含まれています。</li>
<li>MUI X：MUIの高性能で複雑なコンポーネントで、高性能なテーブル、チャートなどが含まれています。</li>
</ul>
<p>非常に複雑なシステムを開発している場合、MUIの完全なソリューションを使用できます。ただし、MUI Xは有料のコンポーネントライブラリであり、サブスクリプション料金が必要かもしれません。</p>
<p>MUIは非常に大規模なプロジェクトであり、長いメンテナンス履歴があります。MUIリポジトリでは、多くの機能が提供されています。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/mui-2024#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>✅ 利点</p>
<p>大規模なプロジェクトを開発したい、高いカスタマイズ要件があり、高性能のデータコンポーネントやチャートコンポーネントを使用したい、特に高いビジネスの複雑さがあるシナリオで、MUI Xにサブスクライブすることを検討している場合、MUIを使用することをお勧めします。その柔軟な設定と豊富なコンポーネントは、完全に要件を満たすことができます。</p>
<p>❌ 欠点</p>
<p>軽量なフレームワークが必要で、レイアウト調整のためにCSSのみのソリューションを使用したい場合、ここではお勧めしません。MUIは包括的な独自のデザインシステムを持っており、学習曲線があるため、マテリアルデザインの美学がすべてに合うわけではありません。そのような場合は、他のオープンソースのリポジトリを探索することが適しているかもしれません。</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="UIライブラリ" term="UIライブラリ"/>
        <category label="Shadcn UI" term="Shadcn UI"/>
        <category label="React" term="React"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024年のMacでのNode.js管理におけるnvmの優れた使い方]]></title>
        <id>https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024</id>
        <link href="https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024"/>
        <updated>2024-01-03T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[フロントエンドの基盤としてのNode.jsは、もはや単なる「JSサーバーランタイム」ではありません。]]></summary>
        <content type="html"><![CDATA[<p>フロントエンドの能力の基盤であるNode.jsは、もはや単なる「JSサーバーランタイム」ではありません。多くのツールライブラリ、ローカルパッケージ管理、モック環境などがNode.js上に構築され、それは本当にフロントエンドの世界のインフラストラクチャとなっています。</p>
<p>繁栄するエコシステムは、フロントエンドプロジェクトを構築する際に、誰もがNode.jsをインストールする必要があるようにしました。しかし、製品の長い歴史から、バージョニングは一般的な問題となっており、一部のプロジェクトは新しいバージョンが必要であり、他のプロジェクトは古いバージョンが必要です。Node.jsの複数のバージョンを管理することは、開発者にとって持続的な課題でした。</p>
<p>現在、この問題に対処するためのオープンソースツールであるnvmがあります。シンプルなコマンドラインの使用により、開発者は迅速に異なるNode.jsのバージョンを切り替えることができ、環境の設定に時間を費やすのではなく、開発に集中することができます。</p>
<p>フロントエンド開発の主要なマシンはまだMacbooksです。したがって、この記事ではMacでnvmをエレガントにインストールして使用し、Node.jsのバージョンを効率的に管理する方法を説明します。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="バックエンド開発のためのオープンソースプロジェクトをお勧めします">バックエンド開発のためのオープンソースプロジェクトをお勧めします<a href="https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024#%E3%83%90%E3%83%83%E3%82%AF%E3%82%A8%E3%83%B3%E3%83%89%E9%96%8B%E7%99%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E3%81%8A%E5%8B%A7%E3%82%81%E3%81%97%E3%81%BE%E3%81%99" class="hash-link" aria-label="バックエンド開発のためのオープンソースプロジェクトをお勧めします への直接リンク" title="バックエンド開発のためのオープンソースプロジェクトをお勧めします への直接リンク">​</a></h2>
<p><a href="https://illacloud.com/" target="_blank" rel="noopener noreferrer">ILLA Cloud</a>は、新しいプロジェクトを作成する必要なしに、シンプルなJSを使用して内部ツールを迅速に構築できる即座に使用可能な低コードツールです。</p>
<ul>
<li>Web＆アプリの管理パネル</li>
<li>データダッシュボード</li>
<li>カスタマイズされたB2Bツール</li>
</ul>
<p>コンポーネントライブラリを使用したシナリオと比較して、ILLA Cloudを使用すると、上記のツールの10倍速い構築が可能です。また、ILLA Cloudは複数のユーザー間での協力をサポートし、バックエンド機能の迅速なカスタマイズを容易にします。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/nvm-use/dashboard.png" alt="dashboard" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="nvmの紹介">nvmの紹介<a href="https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024#nvm%E3%81%AE%E7%B4%B9%E4%BB%8B" class="hash-link" aria-label="nvmの紹介 への直接リンク" title="nvmの紹介 への直接リンク">​</a></h2>
<p>⏬ GitHubリポジトリ: <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener noreferrer">https://github.com/nvm-sh/nvm</a></p>
<p>⭐ GitHubスター数: 72.4k</p>
<p>💪🏼 初版リリース日: 2014年12月22日</p>
<p>nvmは約10年間メンテナンスされているオープンソースプロジェクトです。肯定的な評価がこのプロジェクトを強化し、継続的なメンテナンスを通じて「Node.jsバージョン管理」の完璧な解決策となりました。</p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="nvmのインストール">nvmのインストール<a href="https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024#nvm%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB" class="hash-link" aria-label="nvmのインストール への直接リンク" title="nvmのインストール への直接リンク">​</a></h2>
<p>開発にMacを使用しているため、パッケージ管理に<a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">Homebrew</a>を使用し、それから<a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">Homebrew</a>を使用してnvmをインストールすることを強くお勧めします。</p>
<p>Homebrewをインストールするには、インストールスクリプトを使用することをお勧めします。最小の設定が必要で、すぐに使用できます。さらに、Homebrewは必要に応じてリポジトリをきれいにアンインストールすることを容易にします。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>このコマンドを実行すると、最新バージョンのHomebrewがインストールされ、MacOS環境でXcodeコマンドツールのインストールを自動的に処理します。</p>
<p>もちろん、これはすべて自動化されています。以下はインストールプロセスの例です。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/nvm-use/homebrew-install.png" alt="homebrew_install" class="img_CfaS"></p>
<p>しばらく待った後、インストールされたHomebrewを使用してnvmをインストールできます。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; brew install nvm</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>同意を確認した後、nvmが完全にインストールされます。不要になった場合は、以下のコマンドを使用してアンインストールできます。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># nvmを必要ない場合は削除します。</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; brew uninstall nvm</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="nvmの使用">nvmの使用<a href="https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024#nvm%E3%81%AE%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="nvmの使用 への直接リンク" title="nvmの使用 への直接リンク">​</a></h2>
<p>nvmがインストールされたら、以下は開始時に役立つ一般的に使用され</p>
<p>るコマンドです。これらのコマンドは日常のニーズを満たすはずです。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; nvm list</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>「list」コマンドはさまざまな主要なNode.jsバージョンを表示します。必要に応じてバージョンをインストールでき、また、現在使用中のNode.jsバージョンも表示されます。いくつかのコードネームが表示されます。</p>
<p>たとえば、「lts/gallim」はNode.js v16のバージョン名です。このコードネームを使用してインストールすると、nvmはv16の最新バージョンを自動的にインストールします。かなり便利です。このコマンドを使用して現在のバージョンを確認することもできます。</p>
<p>もう1つのコマンドを使用して現在のNode.jsバージョンを確認できます。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; node --version</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>このコマンドを入力した後、Node.jsバージョンが正常に切り替えられたかどうかを確認できます。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; nvm install stable</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>2番目のコマンドは特定のNode.jsバージョンをインストールします。ここで「stable」は特定のバージョン番号を指します。特定のバージョンのコードネームを使用することもできます。たとえば、「Node.js 18」をインストールするには「nvm install 18」を使用します。ここでは「stable」バージョンをインストールしています。nvmは最新の安定版を自動的に判断し、インストールしてくれます。インストールが成功したら、自動的にインストールしたバージョンに切り替わります。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/nvm-use/stable-install.png" alt="stable-install" class="img_CfaS"></p>
<p>インストールコマンドがある場所に、アンインストールコマンドもあります。次のように使用できます：</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; nvm uninstall stable</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>該当するバージョンを削除します。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/nvm-use/nvm-uninstall.png" alt="nvm-uninstall" class="img_CfaS"></p>
<p>インストールとアンインストールの方法を学んだら、次の重要なステップはバージョンの切り替えです。</p>
<div class="language-shell codeBlockContainer_USIv theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_PMfr"><pre tabindex="0" class="prism-code language-shell codeBlock_IHkF thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_THA1"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt; nvm use stable</span><br></span></code></pre><div class="buttonGroup_uxJT"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_LZ6a" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_H1v1"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_J5e4"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>「use」コマンドを使用すると、現在使用中のNode.jsバージョンを迅速に切り替えることができます。また、コードネーム「stable」を使用することもできます。これにより、異なるプロジェクトのために異なるバージョンに迅速に切り替えることができます。</p>
<p><img loading="lazy" src="https://cdn.illacloud.com/illa-website/blog/nvm-use/nvm-use.png" alt="nvm-use" class="img_CfaS"></p>
<h2 class="anchor anchorWithStickyNavbar_dXVO" id="結論">結論<a href="https://illacloud.github.io/illa-website/ja/blog/nvm-use-2024#%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論 への直接リンク" title="結論 への直接リンク">​</a></h2>
<p>この記事では、初心者向けにnvmのインストールから使用までの完全なプロセスを説明しました。すぐに試して、Node.jsのバージョンをより効果的に管理できるようになるでしょう。</p>
<p>Node.jsバージョン管理は長らく議論されてきた問題であり、nvmはこの問題を効果的に解決する優れたオープンソースプロジェクトです。もちろん、どのプロジェクトも完璧ではありません。他のお勧めがあれば、コメントを残して優れたプロジェクトについてもっと多くの人に知らせてください。それがオープンソース愛好家の使命です！</p>]]></content>
        <author>
            <name>Owen Chen</name>
            <uri>https://github.com/smallSohoSolo</uri>
        </author>
        <category label="nvm" term="nvm"/>
        <category label="nodejs" term="nodejs"/>
        <category label="mac" term="mac"/>
        <category label="javascript" term="javascript"/>
    </entry>
</feed>