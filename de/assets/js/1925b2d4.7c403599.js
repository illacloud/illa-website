"use strict";(self.webpackChunkilla_website=self.webpackChunkilla_website||[]).push([[5214],{6095:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var r=i(1527),t=i(7214);const s={slug:"react-markdown",title:"Verwendung von Remark zur Erstellung eines interaktiven Inhaltsverzeichnisses in einem Next.js-Blog",description:"Ein Inhaltsverzeichnis hat zahlreiche Vorteile und ist eine wertvolle Erg\xe4nzung f\xfcr Websites, insbesondere Blogs. Ein organisiertes und leicht navigierbares Inhaltsverzeichnis verbessert die Benutzererfahrung erheblich und vereinfacht den Prozess f\xfcr Leser, die ben\xf6tigten Informationen zu finden. Durch Hinzuf\xfcgen eines Inhaltsverzeichnisses bieten Sie den Lesern nicht nur eine \xfcbersichtliche Navigation, sondern erh\xf6hen auch die Gesamtzug\xe4nglichkeit und Benutzerfreundlichkeit des Inhalts.",authors:["owen"],image:"https://cdn.illacloud.com/illa-website/blog/react-markdown/cover.webp",tags:["postgresql","select"],date:"2024-02-26T10:00"},d=void 0,a={permalink:"/de/blog/react-markdown",source:"@site/i18n/de/docusaurus-plugin-content-blog/raect-markdown/react-markdown.md",title:"Verwendung von Remark zur Erstellung eines interaktiven Inhaltsverzeichnisses in einem Next.js-Blog",description:"Ein Inhaltsverzeichnis hat zahlreiche Vorteile und ist eine wertvolle Erg\xe4nzung f\xfcr Websites, insbesondere Blogs. Ein organisiertes und leicht navigierbares Inhaltsverzeichnis verbessert die Benutzererfahrung erheblich und vereinfacht den Prozess f\xfcr Leser, die ben\xf6tigten Informationen zu finden. Durch Hinzuf\xfcgen eines Inhaltsverzeichnisses bieten Sie den Lesern nicht nur eine \xfcbersichtliche Navigation, sondern erh\xf6hen auch die Gesamtzug\xe4nglichkeit und Benutzerfreundlichkeit des Inhalts.",date:"2024-02-26T10:00:00.000Z",formattedDate:"26. Februar 2024",tags:[{label:"postgresql",permalink:"/de/blog/tags/postgresql"},{label:"select",permalink:"/de/blog/tags/select"}],readingTime:9.62,hasTruncateMarker:!1,authors:[{name:"Owen Chen",title:"CEO",url:"https://github.com/smallSohoSolo",imageURL:"https://avatars.githubusercontent.com/u/7929686?v=4",key:"owen"}],frontMatter:{slug:"react-markdown",title:"Verwendung von Remark zur Erstellung eines interaktiven Inhaltsverzeichnisses in einem Next.js-Blog",description:"Ein Inhaltsverzeichnis hat zahlreiche Vorteile und ist eine wertvolle Erg\xe4nzung f\xfcr Websites, insbesondere Blogs. Ein organisiertes und leicht navigierbares Inhaltsverzeichnis verbessert die Benutzererfahrung erheblich und vereinfacht den Prozess f\xfcr Leser, die ben\xf6tigten Informationen zu finden. Durch Hinzuf\xfcgen eines Inhaltsverzeichnisses bieten Sie den Lesern nicht nur eine \xfcbersichtliche Navigation, sondern erh\xf6hen auch die Gesamtzug\xe4nglichkeit und Benutzerfreundlichkeit des Inhalts.",authors:["owen"],image:"https://cdn.illacloud.com/illa-website/blog/react-markdown/cover.webp",tags:["postgresql","select"],date:"2024-02-26T10:00"},unlisted:!1,prevItem:{title:"react-error-boundary/react-error-boundary",permalink:"/de/blog/react-error-boundary/react-error-boundary"},nextItem:{title:"PostgreSQL SELECT-Anweisung",permalink:"/de/blog/postgresql-select"},relatedPosts:[{title:"Best Practices for PostgreSQL ISNULL and ISNOTNULL",description:"Dieser Artikel erl\xe4utert die Verwendung des `IS NULL`-Operators in PostgreSQL, um zu \xfcberpr\xfcfen, ob ein Wert `NULL` ist. PostgreSQL `IS NULL` ist ein boolescher Operator, der pr\xfcft, ob ein Wert `NULL` ist. Ein `NULL`-Wert ist ein spezieller Wert, der nichts anzeigt. Es ist weder ein leerer String noch falsch.",permalink:"/de/blog/postgresql-isnull",formattedDate:"4. Februar 2024",authors:[{name:"Owen Chen",title:"CEO",url:"https://github.com/smallSohoSolo",imageURL:"https://avatars.githubusercontent.com/u/7929686?v=4",key:"owen"}],readingTime:2.215,date:"2024-02-04T11:00:00.000Z"},{title:"PostgreSQL SELECT-Anweisung",description:"Dieser Artikel stellt die grundlegende Form der `SELECT`-Anweisung in `PostgreSQL` sowie die Verwendung von `SELECT`-Anweisungen zum Abfragen von Daten aus Tabellen vor. In `PostgreSQL` wird die `SELECT`-Anweisung verwendet, um Daten aus einer oder mehreren Tabellen abzurufen, und sie ist wahrscheinlich die am h\xe4ufigsten verwendete Anweisung.",permalink:"/de/blog/postgresql-select",formattedDate:"21. Februar 2024",authors:[{name:"Owen Chen",title:"CEO",url:"https://github.com/smallSohoSolo",imageURL:"https://avatars.githubusercontent.com/u/7929686?v=4",key:"owen"}],readingTime:5.585,date:"2024-02-21T10:00:00.000Z"},{title:"Wie man Tabellen in PostgreSQL auflistet",description:"Dieser Artikel stellt zwei Methoden vor, um Tabellen in einer PostgreSQL-Datenbank aufzulisten. PostgreSQL bietet zwei M\xf6glichkeiten, alle Tabellen in einer Datenbank aufzulisten.",permalink:"/de/blog/list-tables-in-postgresql",formattedDate:"4. Januar 2024",authors:[{name:"Owen Chen",title:"CEO",url:"https://github.com/smallSohoSolo",imageURL:"https://avatars.githubusercontent.com/u/7929686?v=4",key:"owen"}],readingTime:2.915,date:"2024-01-04T10:00:00.000Z"}],authorPosts:[]},l={authorsImageUrls:[void 0]},h=[{value:"Remark und seine Plugins",id:"remark-und-seine-plugins",level:2},{value:"Erste Schritte",id:"erste-schritte",level:2},{value:"Benutzerdefiniertes Remark-Plugin zum Extrahieren von \xdcberschriften aus dem Inhalt",id:"benutzerdefiniertes-remark-plugin-zum-extrahieren-von-\xfcberschriften-aus-dem-inhalt",level:2},{value:"Rendering des Inhaltsverzeichnisses",id:"rendering-des-inhaltsverzeichnisses",level:2},{value:"Hinzuf\xfcgen des Smooth-Scroll-Effekts beim Klicken auf den Inhaltsverzeichnis-Link",id:"hinzuf\xfcgen-des-smooth-scroll-effekts-beim-klicken-auf-den-inhaltsverzeichnis-link",level:2},{value:"Hervorheben aktiver Links",id:"hervorheben-aktiver-links",level:2},{value:"Fazit",id:"fazit",level:2}];function o(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Ein Inhaltsverzeichnis hat zahlreiche Vorteile und ist eine wertvolle Erg\xe4nzung f\xfcr Websites, insbesondere Blogs. Ein organisiertes und leicht navigierbares Inhaltsverzeichnis verbessert die Benutzererfahrung erheblich und vereinfacht den Prozess f\xfcr Leser, die ben\xf6tigten Informationen zu finden. Durch Hinzuf\xfcgen eines Inhaltsverzeichnisses bieten Sie den Lesern nicht nur eine \xfcbersichtliche Navigation, sondern erh\xf6hen auch die Gesamtzug\xe4nglichkeit und Benutzerfreundlichkeit des Inhalts."}),"\n",(0,r.jsxs)(n.p,{children:["In diesem Artikel werden wir die notwendigen Schritte zur Erstellung eines interaktiven Inhaltsverzeichnisses f\xfcr einen ",(0,r.jsx)(n.code,{children:"Next.js"}),"-Blog unter Verwendung von Remark (einem leistungsstarken Markdown-Prozessor) behandeln. Obwohl einige Remark-Plugins (wie ",(0,r.jsx)(n.code,{children:"Remark-toc"}),") diese Funktionalit\xe4t bieten, befindet sich das generierte Inhaltsverzeichnis innerhalb des Inhalts selbst, was seine potenziellen Anwendungsf\xe4lle einschr\xe4nkt. Zum Beispiel wird im vorliegenden Blog das Inhaltsverzeichnis au\xdferhalb des Bloginhalts gerendert und bleibt beim Navigieren sichtbar. Dies ist die Art von Inhaltsverzeichnis, das wir in diesem Tutorial erstellen werden. Wir werden zun\xe4chst kurz die Grundlagen von Remark, seine Plugins und die Integration mit Next.js diskutieren. Anschlie\xdfend werden wir uns mit den tats\xe4chlichen Schritten zur Implementierung des benutzerdefinierten Inhaltsverzeichnisses befassen und es schlie\xdflich interaktiv gestalten, sodass das Klicken auf die Eintr\xe4ge im Inhaltsverzeichnis die Seite zum entsprechenden Abschnitt scrollt."]}),"\n",(0,r.jsx)(n.h2,{id:"remark-und-seine-plugins",children:"Remark und seine Plugins"}),"\n",(0,r.jsxs)(n.p,{children:["Remark ist ein erweiterbarer Markdown-Prozessor, der den Prozess der Umwandlung von Markdown-Dateien in HTML oder andere Formate vereinfacht. Ein wichtiger Aspekt von Remark ist seine Plugin-basierte Architektur, die es Entwicklern erm\xf6glicht, seine Funktionalit\xe4t zu erweitern und anzupassen. Diese Plugins k\xf6nnen Aufgaben wie Syntaxhervorhebung, Hinzuf\xfcgen eines Inhaltsverzeichnisses oder Parsen benutzerdefinierter Markdown-Syntax \xfcbernehmen. Die Integration von Remark in Next.js ist sehr einfach - in der Regel wird es zusammen mit der ",(0,r.jsx)(n.code,{children:"getStaticProps"}),"-Funktion verwendet, um Markdown-Dateien w\xe4hrend des Builds zu verarbeiten. Es kann auch MDX-Dateien verarbeiten, was es zu einer geeigneten Wahl f\xfcr Next.js-Websites mit dem neuen ",(0,r.jsx)(n.code,{children:"app"}),"-Verzeichnis macht. Die leistungsstarken Verarbeitungsf\xe4higkeiten von Remark und die nahtlose Integration mit Next.js machen es zu einer idealen Wahl zur Verbesserung von Inhalten sowie Benutzererfahrungen von Next.js-Blogs und Websites."]}),"\n",(0,r.jsx)(n.h2,{id:"erste-schritte",children:"Erste Schritte"}),"\n",(0,r.jsxs)(n.p,{children:["Obwohl wir ein benutzerdefiniertes Inhaltsverzeichnis erstellen, m\xfcssen wir nicht alles von Grund auf schreiben. Um den Frontmatter-Inhalt von Markdown/MDX-Inhalt selbst zu trennen, werden wir das Paket ",(0,r.jsx)(n.code,{children:"Gray-matter"})," verwenden. Dies ist optional, wenn in den Markdown-Dateien kein Frontmatter vorhanden ist. Zur Verarbeitung des Markdown selbst verwenden wir das Paket Remark. Au\xdferdem ben\xf6tigen wir das Paket ",(0,r.jsx)(n.code,{children:"unist-util-visit"}),", um den Knotenbaum zu durchlaufen, und das Paket ",(0,r.jsx)(n.code,{children:"mdast-util-to-string"}),", um den Textinhalt des Knotens zu erhalten."]}),"\n",(0,r.jsx)(n.p,{children:"Lassen Sie uns alle diese Pakete installieren:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm i remark mdast-util-to-string gray-matter unist-util-visit\n"})}),"\n",(0,r.jsx)(n.h2,{id:"benutzerdefiniertes-remark-plugin-zum-extrahieren-von-\xfcberschriften-aus-dem-inhalt",children:"Benutzerdefiniertes Remark-Plugin zum Extrahieren von \xdcberschriften aus dem Inhalt"}),"\n",(0,r.jsx)(n.p,{children:"Bevor das Inhaltsverzeichnis gerendert wird, m\xfcssen wir alle \xdcberschriften aus der Markdown-Datei extrahieren und sie in ein Array von Knoten organisieren. Dieser Prozess kann in einige Schritte unterteilt werden:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Parsen des Dateiinhalts, um Frontmatter vom Inhalt zu trennen"}),"\n",(0,r.jsx)(n.li,{children:"Generieren von IDs f\xfcr jedes \xdcberschriften-Element. Dies ist sp\xe4ter f\xfcr die Implementierung der Scrollfunktionalit\xe4t zu Abschnitten erforderlich."}),"\n",(0,r.jsx)(n.li,{children:"Parsen des Inhalts und Extrahieren von \xdcberschriften mit ihren Eigenschaften"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["F\xfcr Schritt 2 k\xf6nnten wir manuell IDs als benutzerdefinierte Markdown-Attribute hinzuf\xfcgen, z.B. ",(0,r.jsx)(n.code,{children:"## \xdcberschrift 1 {#heading-id}"}),", und dann eine Bibliothek wie ",(0,r.jsx)(n.code,{children:"Remark-heading-id"})," verwenden, um sie in HTML zu rendern. Dieser Ansatz erfordert jedoch das manuelle Hinzuf\xfcgen und Pflegen dieser \xdcberschriften \xfcber Titeln hinweg und ist weniger effizient. Ein effizienterer Weg ist das automatische Generieren von IDs basierend auf dem \xdcberschriftentext, z.B. die \xdcberschrift ",(0,r.jsx)(n.code,{children:"\xdcberschrift 1"})," erh\xe4lt automatisch die ID ",(0,r.jsx)(n.code,{children:"heading-1"}),", wenn sie in HTML konvertiert wird."]}),"\n",(0,r.jsx)(n.p,{children:"Zus\xe4tzlich k\xf6nnen wir Schritte 2 und 3 kombinieren, indem wir ein benutzerdefiniertes Remark-Plugin erstellen."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"export function headingTree() {\n  return (node, file) => {\n    file.data.headings = getHeadings(node);\n  };\n}\n\nfunction getHeadings(root) {\n  // Implementierungsdetails  \n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Hier haben wir unser benutzerdefiniertes Remark-Plugin ",(0,r.jsx)(n.code,{children:"headingTree"}),", das \xdcberschriften aus dem Dokument extrahiert und sie als ",(0,r.jsx)(n.code,{children:"headings"}),"-Eigenschaft zum verarbeiteten Inhalt hinzuf\xfcgt."]}),"\n",(0,r.jsxs)(n.p,{children:["Die Hauptkomponente ist die ",(0,r.jsx)(n.code,{children:"getHeadings"}),"-Funktion, die eine Zugriffsfunktion ist, die den Knotenbaum durchl\xe4uft und Knoten manipuliert. Zur verbesserten Lesbarkeit ist die Funktion in zwei Teile aufgeteilt."]}),"\n",(0,r.jsxs)(n.p,{children:["Die ",(0,r.jsx)(n.code,{children:"addID"}),"-Funktion durchl\xe4uft \xdcberschriftenknoten im Dokument, ersetzt alle Sonderzeichen darin und gibt sie als Kleinbuchstabenzeichenfolgen aus, bei denen Leerzeichen durch Bindestriche ersetzt werden. Diese IDs werden im ",(0,r.jsx)(n.code,{children:"hProperties"}),"-Attribut der \xdcberschriften gespeichert."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function addID(node, nodes) {\n  // Implementierungsdetails\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Beachten Sie, dass wir eine Variable ",(0,r.jsx)(n.code,{children:"nodes"})," verwenden, um Vorkommen jeder \xdcberschrift zu verfolgen. Dies geschieht, um sie mit einer Nummer zu versehen, falls es doppelte \xdcberschriften im Dokument gibt (z.B. einige Abschnitte k\xf6nnen Untertitel mit dem gleichen Text haben). Die ",(0,r.jsx)(n.code,{children:"transformNode"}),"-Funktion nimmt Knoten, die aus dem geparsten Markdown-Abstraktsyntaxbaum (AST) erhalten wurden, und wandelt sie in ein Format um, das besser f\xfcr den Aufbau des Inhaltsverzeichnisses geeignet ist."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { toString } from "mdast-util-to-string"; \n\nfunction transformNode(node, output, indexMap) {\n  // Implementierungsdetails\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Diese Funktion \xfcberpr\xfcft, ob ein Knoten die Tiefe 2 hat (##-Elemente in Markdown). Wenn ja, wird der transformierte Knoten dem Ausgabearray hinzugef\xfcgt und an der entsprechenden Tiefenposition in ",(0,r.jsx)(n.code,{children:"indexMap"})," gespeichert. Dies zeigt an, dass der transformierte Knoten auf oberster Ebene des Inhaltsverzeichnisses liegt. Hier bezeichnen wir Tiefe 2 als die oberste Tiefe, da dies ",(0,r.jsx)(n.code,{children:"<h2>"}),"-Tags in der HTML-Ausgabe erzeugt. Wir verwenden nicht Tiefe 1, da mehrere ",(0,r.jsx)(n.code,{children:"<h1>"}),"-Elemente auf einer Seite nicht gut f\xfcr die Zug\xe4nglichkeit und SEO sind."]}),"\n",(0,r.jsxs)(n.p,{children:["Wenn ein Knoten eine Tiefe gr\xf6\xdfer als 2 hat (z.B. ### oder ####-Elemente), identifiziert die Funktion den Elternknoten, indem sie die Position der vorherigen Tiefenebene des Knotens (d.h. ",(0,r.jsx)(n.code,{children:"node.depth - 1"}),") in ",(0,r.jsx)(n.code,{children:"indexMap"})," nachschl\xe4gt. Wenn ein Elternteil gefunden wird, wird der transformierte Knoten an das ",(0,r.jsx)(n.code,{children:"children"}),"-Array des Elternteils angeh\xe4ngt und ",(0,r.jsx)(n.code,{children:"indexMap"})," entsprechend aktualisiert. Dies hilft beim Aufbau der verschachtelten Struktur des Inhaltsverzeichnisses, bei der Knoten mit tieferer Ebene zu Kindern von Knoten mit h\xf6herer Ebene werden."]}),"\n",(0,r.jsx)(n.p,{children:"Es ist erw\xe4hnenswert, dass f\xfcr das ordnungsgem\xe4\xdfe Funktionieren dieser Funktion das Inhaltsverzeichnis eine g\xfcltige Struktur haben sollte, z.B. sollten keine Spr\xfcnge von Knotentiefe 2 direkt auf Tiefe 4 vorhanden sein."}),"\n",(0,r.jsxs)(n.p,{children:["Nun haben wir alles, was ben\xf6tigt wird, um die ",(0,r.jsx)(n.code,{children:"getHeadings"}),"-Funktion zu implementieren."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import matter from "gray-matter";\nimport { remark } from "remark";\n\nimport { headingTree } from "./headings";\n\nconst postsDirectory = path.join(process.cwd(), "posts");  \n\nexport async function getHeadings(id) {\n  // Holt Markdown-Datei\n  // Parsen des Frontmatters mit gray-matter\n  \n  // Verwenden von remark zur Verarbeitung von Markdown\n  const processedContent = await remark() \n    .use(headingTree)\n    .process(matterResult.content);\n\n  return processedContent.data.headings;  \n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Damit haben wir das Array der \xdcberschriften aus dem Dokument zusammen mit ihren Datenattributen. Die Struktur des Arrays ist:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'[\n  {\n    value: "\xdcberschrift 1",\n    depth: 2,\n    data: { hProperties: { id: "heading-1"} },\n    children: [\n      // verschachtelte \xdcberschriften\n    ]\n  }\n] \n'})}),"\n",(0,r.jsx)(n.h2,{id:"rendering-des-inhaltsverzeichnisses",children:"Rendering des Inhaltsverzeichnisses"}),"\n",(0,r.jsxs)(n.p,{children:["Nun, da wir die \xdcberschriftendaten haben, k\xf6nnen wir sie verwenden, um das Inhaltsverzeichnis zu rendern. Zuerst werden wir eine ",(0,r.jsx)(n.code,{children:"TableOfContents"}),"-Komponente erstellen, die den Wrapper f\xfcr die Rendering-Logik des Inhaltsverzeichnisses darstellt."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'"use client";  \n\nexport const TableOfContents = ({ nodes }) => {\n  if (!nodes?.length) {\n    return null;\n  }\n\n  return ( \n    <div className={"toc"}>\n      <h3 className={"secondary-text"}>Inhaltsverzeichnis</h3>\n      {renderNodes(nodes)} \n    </div>\n  );\n};\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Beachten Sie, dass Sie die ",(0,r.jsx)(n.code,{children:'"use client"'}),"-Direktive ben\xf6tigen, um diese Komponente als Client-Komponente zu kennzeichnen, wenn Sie das ",(0,r.jsx)(n.code,{children:"app"}),"-Verzeichnis von Next.js verwenden."]}),"\n",(0,r.jsxs)(n.p,{children:["Das eigentliche Rendering wird von der ",(0,r.jsx)(n.code,{children:"renderNodes"}),"-Funktion behandelt. Da die Rendering-Logik rekursiv ist, definieren wir sie in einer separaten Funktion anstatt innerhalb der Komponente."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function renderNodes(nodes) {\n  return (\n    <ul>\n     {nodes.map((node) => (\n       <li key={node.data.hProperties.id}>\n         <a href={`#${node.data.hProperties.id}`}>{node.value}</a>\n         {node.children?.length > 0 && \n           renderNodes(node.children)}\n       </li>\n     ))}\n    </ul>\n  );\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Jedes Element im Inhaltsverzeichnis ist ein Link, der \xfcber sein ",(0,r.jsx)(n.code,{children:"href"}),"-Attribut auf die entsprechende \xdcberschriften-ID verweist."]}),"\n",(0,r.jsx)(n.h2,{id:"hinzuf\xfcgen-des-smooth-scroll-effekts-beim-klicken-auf-den-inhaltsverzeichnis-link",children:"Hinzuf\xfcgen des Smooth-Scroll-Effekts beim Klicken auf den Inhaltsverzeichnis-Link"}),"\n",(0,r.jsxs)(n.p,{children:["Das grundlegende Inhaltsverzeichnis ist nun fertig. Auf der Seite, auf der wir den Artikel rendern, k\xf6nnen wir die \xdcberschriften erhalten, indem wir ",(0,r.jsx)(n.code,{children:"await getHeadings(postId)"})," aufrufen (oder dies in ",(0,r.jsx)(n.code,{children:"getStaticProps"}),' ausf\xfchren, wenn das "pages"-Verzeichnis verwendet wird) und die Daten an das TableOfContents-Komponente \xfcbergeben. Wenn wir auf Inhaltsverzeichnis-Links auf der Artikelseite klicken, sollte die Navigation zum entsprechenden Teil der Seite erfolgen. Anstatt jedoch abrupt zu springen, k\xf6nnen wir sanftes Scrollen aktivieren. Als zus\xe4tzliche Verbesserung k\xf6nnen wir die Schriftgr\xf6\xdfe der Unterlinks basierend auf ihrer Tiefe allm\xe4hlich verringern.']}),"\n",(0,r.jsxs)(n.p,{children:["Um dies zu erreichen, werden wir eine ",(0,r.jsx)(n.code,{children:"TOCLink"}),"-Komponente einf\xfchren, die f\xfcr sanftes Scrollen und das Stylen einzelner Links verantwortlich ist, und sie dann in ",(0,r.jsx)(n.code,{children:"renderNodes"})," verwenden."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function renderNodes(nodes) {\n  return ( \n    <ul>\n     {nodes.map((node) => (\n       <li key={node.data.hProperties.id}>\n         <TOCLink node={node} />\n         {node.children?.length > 0 && \n           renderNodes(node.children)}\n       </li>\n     ))}\n    </ul>\n  ); \n}\n \nconst TOCLink = ({ node }) => {\n\n  // Implementierung des sanften Scrollens\n\n  // Klassen f\xfcr die Schriftgr\xf6\xdfe basierend auf der Tiefe\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Um sanft zu einem bestimmten Element auf der Seite zu scrollen, lokalisieren wir zuerst das Element anhand seiner ID und verwenden dann die Methode ",(0,r.jsx)(n.code,{children:"scrollIntoView"})," mit der Option ",(0,r.jsx)(n.code,{children:'behavior: "smooth"'}),". Siehe MDN f\xfcr weitere Informationen zu dieser Methode. Es hat eine breite Browserunterst\xfctzung, aber die ",(0,r.jsx)(n.code,{children:"smooth"}),"-Option ist m\xf6glicherweise nicht mit einigen \xe4lteren Browsern kompatibel. Mit diesem Ansatz erzeugt das Klicken auf Inhaltsverzeichnis-Links nun eine sch\xf6ne Bildlaufanimation anstelle des fr\xfcheren abrupten \xdcbergangs."]}),"\n",(0,r.jsxs)(n.p,{children:["Wenn Sie einen Offset beim Scrollen zu \xdcberschriftenelementen hinzuf\xfcgen m\xfcssen (z. B. wenn die Seite eine feste Navbar hat), k\xf6nnen Sie die CSS-Eigenschaft ",(0,r.jsx)(n.code,{children:"scroll-margin-top"})," auf \xdcberschriftenelemente anwenden."]}),"\n",(0,r.jsxs)(n.p,{children:["Zus\xe4tzlich k\xf6nnen wir ",(0,r.jsx)(n.code,{children:"TailwindCSS"})," und seine ",(0,r.jsx)(n.code,{children:"text"}),"-Hilfsklassen nutzen, um die Schriftgr\xf6\xdfe der Inhaltsverzeichnis-Links basierend auf der Tiefe allm\xe4hlich zu verringern."]}),"\n",(0,r.jsx)(n.h2,{id:"hervorheben-aktiver-links",children:"Hervorheben aktiver Links"}),"\n",(0,r.jsx)(n.p,{children:"F\xfcr eine verbesserte Navigation mit dem Inhaltsverzeichnis ist eine abschlie\xdfende Note, Inhaltsverzeichnis-Links hervorzuheben, wenn der entsprechende Titel auf der Seite angezeigt wird."}),"\n",(0,r.jsxs)(n.p,{children:["Um die Sichtbarkeit von Elementen auf der Seite zu erkennen, nutzen wir die ",(0,r.jsx)(n.code,{children:"Intersection Observer API"}),", die eine gute Browserunterst\xfctzung bietet, aber einige Einschr\xe4nkungen hat. Zus\xe4tzlich werden wir diese Funktionalit\xe4t in einen benutzerdefinierten Hook verschieben, der einen Booleschen Wert zur\xfcckgibt, der angibt, ob der Link hervorgehoben ist, und einen R\xfcckruf bereitstellt, um den Hervorhebungszustand manuell festzulegen. Dieser Hook wird in der ",(0,r.jsx)(n.code,{children:"TOCLink"}),"-Komponente verwendet."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useEffect, useRef, useState } from "react";\n \nfunction useHighlighted(id) {\n\n  // Implementierungsdetails\n\n  return [highlighted, setHighlighted];  \n}\n \nconst TOCLink = ({ node }) => {\n\n  const [highlighted, setHighlighted] = useHighlighted(id);\n\n  // Andere Implementierungsdetails\n};\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In diesem Hook dient die Funktion ",(0,r.jsx)(n.code,{children:"handleObserver"})," als R\xfcckruf f\xfcr den ",(0,r.jsx)(n.code,{children:"Intersection Observer"}),", der Sichtbarkeits\xe4nderungen der beobachteten Elemente behandelt und ein Array von Eintr\xe4gen als Parameter verwendet."]}),"\n",(0,r.jsxs)(n.p,{children:["Die ",(0,r.jsx)(n.code,{children:"handleObserver"}),"-Funktion durchl\xe4uft Eintr\xe4ge, einschlie\xdflich h2-, h3- und h4-Elemente, \xfcberpr\xfcft, ob ",(0,r.jsx)(n.code,{children:"isIntersecting"})," ",(0,r.jsx)(n.code,{children:"true"})," ist - was anzeigt, dass das Element im Viewport sichtbar ist - und aktualisiert dann den aktiven Abschnitt im Inhaltsverzeichnis \xfcber ",(0,r.jsx)(n.code,{children:"setActiveId"}),". Wenn ein Link geklickt wird, wird er \xfcber den ",(0,r.jsx)(n.code,{children:"setHighlighted"}),"-R\xfcckruf hervorgehoben."]}),"\n",(0,r.jsxs)(n.p,{children:["Zus\xe4tzlich speichern wir eine neue Instanz des ",(0,r.jsx)(n.code,{children:"Intersection Observer"})," in einem ",(0,r.jsx)(n.code,{children:"ref"}),", um ihre Identit\xe4t \xfcber die Rendern von Komponenten hinweg zu erhalten."]}),"\n",(0,r.jsx)(n.p,{children:"Durch Scrollen der Seite k\xf6nnen Sie den Effekt dieses Vorgangs auf dieser Seite sehen und beobachten, wie sich der aktive Abschnitt im Inhaltsverzeichnis aktualisiert, wenn die Seite die entsprechenden Abschnitte erreicht."}),"\n",(0,r.jsx)(n.h2,{id:"fazit",children:"Fazit"}),"\n",(0,r.jsx)(n.p,{children:"Insgesamt kann die Verwendung von Remark und benutzerdefinierten Plugins zur Erstellung eines Inhaltsverzeichnisses f\xfcr einen Next.js-Blog viele Vorteile f\xfcr die Benutzererfahrung und die Barrierefreiheit Ihrer Website bringen. Durch Remark, diesen leistungsf\xe4higen Markdown-Prozessor, und seine reiche Auswahl an Plugins ist es einfach, \xdcberschriften aus Markdown-Dateien zu extrahieren und sie in ein interaktives, leicht zu navigierendes Inhaltsverzeichnis umzuwandeln."}),"\n",(0,r.jsxs)(n.p,{children:["Durch die Einf\xfchrung eines Inhaltsverzeichnisses k\xf6nnen Sie die Benutzererfahrung auf Ihren Next.js-Blogs verbessern und es den Lesern erleichtern, die ben\xf6tigten Informationen zu finden. Durch die Verwendung von Remark zur Erstellung benutzerdefinierter Inhaltsverzeichnis-Plugins k\xf6nnen Sie das Inhaltsverzeichnis au\xdferhalb des Inhalts selbst integrieren und so die Verf\xfcgbarkeit und Zug\xe4nglichkeit des Inhalts weiter erh\xf6hen. Durch die Nutzung von Plugins wie ",(0,r.jsx)(n.code,{children:"mdast-util-to-string"})," und ",(0,r.jsx)(n.code,{children:"unist-util-visit"})," k\xf6nnen \xdcberschriften aus Inhalten extrahiert, eindeutige IDs generiert und sie in ein f\xfcr den Aufbau des Inhaltsverzeichnisses geeignetes Format analysiert werden."]}),"\n",(0,r.jsx)(n.p,{children:"Dieses Tutorial hat diesen Prozess durch die Erstellung eines benutzerdefinierten Inhaltsverzeichnisses mit einer verschachtelten Struktur, sanftem Scrollen und Hervorheben aktiver Links durchlaufen. Die Leser k\xf6nnen jetzt schnell zu den Inhalten navigieren, die sie interessieren, was die Gesamtbenutzerfreundlichkeit und den Wert des Blogs erh\xf6ht."})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},7214:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>d});var r=i(959);const t={},s=r.createContext(t);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);