{
    "version": "https://jsonfeed.org/version/1",
    "title": "ILLA Cloud Blog",
    "home_page_url": "https://illacloud.github.io/illa-website/blog",
    "description": "ILLA Cloud Blog",
    "items": [
        {
            "id": "https://illacloud.github.io/illa-website/blog/react-markdown",
            "content_html": "<p>A table of contents has numerous benefits, and is a valuable addition for websites, especially blogs. An organized and easily navigable table of contents significantly improves the user experience, simplifying the process for readers to find information they require. By adding a table of contents, not only do you provide readers with streamlined navigation, but you also increase the overall accessibility and usability of content.</p>\n<p>In this article, we'll cover the necessary steps for creating an interactive table of contents for a <code>Next.js</code> blog using Remark (a powerful Markdown processor). While some Remark plugins (like <code>Remark-toc</code>) offer this functionality, the generated table of contents resides within the content itself, limiting its potential use cases. For example, in this blog the table of contents is rendered outside the blog content, keeping it visible whilst navigating. This is the type of table of contents we will build in this tutorial. We'll start by briefly discussing the basics of Remark, its plugins, and integration with Next.js. We'll then dive into the actual steps to implement the custom table of contents, and finally, we'll make it interactive so clicking the table of contents items will scroll the page to the corresponding section.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"remark-and-its-plugins\">Remark and its Plugins<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#remark-and-its-plugins\" class=\"hash-link\" aria-label=\"Direct link to Remark and its Plugins\" title=\"Direct link to Remark and its Plugins\">​</a></h2>\n<p>Remark is an extensible Markdown processor that simplifies the process of converting Markdown files into HTML or other formats. A key aspect of Remark is its plugin-based architecture which enables developers to extend and customize its functionality. These plugins can handle tasks like syntax highlighting, adding a table of contents, or parsing custom Markdown syntax. Integrating Remark with Next.js is very straightforward – usually used along with the <code>getStaticProps</code> function to process Markdown files during build. It can also handle MDX files making it a viable choice for Next.js sites using the new <code>app</code> directory. Remark’s powerful processing capabilities and seamless integration with Next.js make it an ideal choice for enhancing Next.js blogs and websites content as well as user experience.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"getting-started\">Getting Started<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#getting-started\" class=\"hash-link\" aria-label=\"Direct link to Getting Started\" title=\"Direct link to Getting Started\">​</a></h2>\n<p>Although we're building a custom table of contents, we don't need to write everything from scratch. To separate frontmatter content from Markdown/MDX content itself, we'll utilize the <code>Gray-matter</code> package. This is optional if there is no frontmatter in the Markdown files. To process the Markdown itself, we'll use the Remark package. We'll also need the <code>unist-util-visit</code> package to traverse the node tree and the <code>mdast-util-to-string</code> package to get node text content.</p>\n<p>Let's install all these packages:</p>\n<div class=\"language-shell codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">npm i remark mdast-util-to-string gray-matter unist-util-visit</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"custom-remark-plugin-to-extract-headings-from-content\">Custom Remark Plugin to Extract Headings from Content<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#custom-remark-plugin-to-extract-headings-from-content\" class=\"hash-link\" aria-label=\"Direct link to Custom Remark Plugin to Extract Headings from Content\" title=\"Direct link to Custom Remark Plugin to Extract Headings from Content\">​</a></h2>\n<p>Before rendering the table of contents, we need to extract all headings from the Markdown file and organize them into an array of nodes. This process can be broken down into a few steps:</p>\n<ol>\n<li>Parse file contents to separate frontmatter from content</li>\n<li>Generate IDs for each heading element. This is necessary later for implementing scroll to section functionality.</li>\n<li>Parse content and extract headings with their properties</li>\n</ol>\n<p>For step 2, we could manually add IDs as custom markdown attributes e.g. <code>## Heading 1 {#heading-id}</code> and then use a library like <code>Remark-heading-id</code> to render them into the HTML. However, this approach requires manually adding and maintaining these headings across titles, less efficient. A more efficient way is to automatically generate IDs based on heading text e.g. the heading <code>Heading 1</code> will automatically get ID <code>heading-1</code> when converted to HTML.</p>\n<p>Additionally, we can combine steps 2 and 3 by creating a custom Remark plugin.</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">headingTree</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">node</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token parameter\"> file</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    file</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">headings</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">getHeadings</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">getHeadings</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">root</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// implementation details  </span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Here we have our custom Remark plugin <code>headingTree</code> which extracts headings from the document and adds them as a <code>headings</code> property to the processed content.</p>\n<p>The main component is the <code>getHeadings</code> function which is an accessor function that traverses the node tree and manipulates nodes. For improved readability, the function is split into two parts.</p>\n<p>The <code>addID</code> function traverses heading nodes in the document, replaces all special characters in them, and outputs them as lowercase strings with spaces replaced by hyphens. These IDs will be stored in the <code>hProperties</code> attribute of the headings.</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">addID</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">node</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token parameter\"> nodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// implementation details</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Note that we use a <code>nodes</code> variable to keep track of occurrences of each heading. This is to prefix them with a number in case there are duplicate headings in the document (e.g. some sections may have subheadings with the same text). The <code>transformNode</code> function takes nodes obtained from the parsed Markdown abstract syntax tree (AST) and transforms them into a format more suitable for building the table of contents.</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token imports\"> toString </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"mdast-util-to-string\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">transformNode</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">node</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token parameter\"> output</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token parameter\"> indexMap</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// implementation details</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>This function checks if a node has depth 2 (## elements in Markdown). If yes, the transformed node is added to the output array and stored at the corresponding depth position in <code>indexMap</code>. This indicates the transformed node resides at the top level of the table of contents. Here, we designate depth 2 as the top level depth since this will produce <code>&lt;h2&gt;</code> tags in the HTML output. We don't use depth 1 since having multiple <code>&lt;h1&gt;</code> elements on a page isn't good for accessibility and SEO.</p>\n<p>If a node has depth greater than 2 (e.g. ### or #### elements), the function identifies the parent node by looking up the position of the node's previous level depth (i.e. <code>node.depth - 1</code>) in <code>indexMap</code>. If a parent is found, the transformed node is appended to the parent's <code>children</code> array and <code>indexMap</code> is updated accordingly. This helps build the nested structure of the table of contents where deeper level nodes become children of higher level nodes.</p>\n<p>It's worth noting that for this function to work properly, the table of contents should have a valid structure e.g. there shouldn't be jumps from node depth 2 directly to depth 4.</p>\n<p>Now we have everything needed to implement the <code>getHeadings</code> function.</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports\">matter</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"gray-matter\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token imports\"> remark </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"remark\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token imports\"> headingTree </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"./headings\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> postsDirectory </span><span class=\"token operator\">=</span><span class=\"token plain\"> path</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">join</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">process</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">cwd</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"posts\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\">  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">getHeadings</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Gets Markdown file</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Parses frontmatter with gray-matter</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Use remark to process Markdown</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> processedContent </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">await</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">remark</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">use</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">headingTree</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">process</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">matterResult</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">content</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> processedContent</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">headings</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\">  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>With this, we have the array of headings from the document along with their data properties. The structure of the array is:</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"Heading 1\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token literal-property property\">depth</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">2</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">hProperties</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"heading-1\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">      </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// nested headings</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"rendering-the-table-of-contents\">Rendering the Table of Contents<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#rendering-the-table-of-contents\" class=\"hash-link\" aria-label=\"Direct link to Rendering the Table of Contents\" title=\"Direct link to Rendering the Table of Contents\">​</a></h2>\n<p>Now that we have the heading data, we can use it to render the table of contents. First, we'll create a <code>TableOfContents</code> component which will be the wrapper for the rendering logic of the table of contents.</p>\n<div class=\"language-jsx codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"use client\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\">  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function maybe-class-name\" style=\"color:rgb(80, 250, 123)\">TableOfContents</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token parameter\"> nodes </span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">!</span><span class=\"token plain\">nodes</span><span class=\"token operator\">?.</span><span class=\"token plain\">length</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:rgb(189, 147, 249);font-style:italic\">null</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">div</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">className</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript string\" style=\"color:rgb(255, 121, 198)\">\"toc\"</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">h3</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">className</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript string\" style=\"color:rgb(255, 121, 198)\">\"secondary-text\"</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\">Table of contents</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">h3</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">renderNodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain-text\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">div</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Note you need the <code>\"use client\"</code> directive to mark this component as a client component if using Next.js <code>app</code> directory.</p>\n<p>The actual rendering will be handled by the <code>renderNodes</code> function since the rendering logic is recursive, we define it in a separate function instead of inside the component.</p>\n<div class=\"language-jsx codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">renderNodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">nodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">ul</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">     </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">map</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">       </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">li</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">key</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(255, 121, 198)\">node</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 121, 198)\">data</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 121, 198)\">hProperties</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 121, 198)\">id</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">         </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">a</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">href</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token tag script language-javascript template-string string\" style=\"color:rgb(255, 121, 198)\">#</span><span class=\"token tag script language-javascript template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">${</span><span class=\"token tag script language-javascript template-string interpolation\" style=\"color:rgb(255, 121, 198)\">node</span><span class=\"token tag script language-javascript template-string interpolation punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript template-string interpolation property-access\" style=\"color:rgb(255, 121, 198)\">data</span><span class=\"token tag script language-javascript template-string interpolation punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript template-string interpolation property-access\" style=\"color:rgb(255, 121, 198)\">hProperties</span><span class=\"token tag script language-javascript template-string interpolation punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript template-string interpolation property-access\" style=\"color:rgb(255, 121, 198)\">id</span><span class=\"token tag script language-javascript template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag script language-javascript template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">a</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">         </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">children</span><span class=\"token operator\">?.</span><span class=\"token plain\">length </span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token number\">0</span><span class=\"token plain\"> </span><span class=\"token operator\">&amp;&amp;</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">renderNodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">       </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">li</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">     </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">ul</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Each element in the table of contents is a link which points to the corresponding heading's ID via its <code>href</code> attribute.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"adding-smooth-scroll-effect-on-table-of-contents-link-click\">Adding Smooth Scroll Effect on Table of Contents Link Click<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#adding-smooth-scroll-effect-on-table-of-contents-link-click\" class=\"hash-link\" aria-label=\"Direct link to Adding Smooth Scroll Effect on Table of Contents Link Click\" title=\"Direct link to Adding Smooth Scroll Effect on Table of Contents Link Click\">​</a></h2>\n<p>The basic table of contents is now complete. On the page where we render the article, we can get the headings by calling <code>await getHeadings(postId)</code> (or executing this in <code>getStaticProps</code> when using the \"pages\" directory) and pass the data to the TableOfContents component. When we click on table of contents links on the article page, navigation should happen to the corresponding part of the page. Instead of abruptly jumping however, we can enable smooth scrolling. As an additional enhancement, we can gradually decrease font size of child links based on their depth.</p>\n<p>To achieve this, we'll introduce a <code>TOCLink</code> component that is responsible for smooth scrolling and styling individual links, then we'll use it in <code>renderNodes</code>.</p>\n<div class=\"language-jsx codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">renderNodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">nodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">ul</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">     </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">map</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">       </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">li</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">key</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(255, 121, 198)\">node</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 121, 198)\">data</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 121, 198)\">hProperties</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 121, 198)\">id</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">         </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 121, 198)\">TOCLink</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">node</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(255, 121, 198)\">node</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">/&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">         </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">children</span><span class=\"token operator\">?.</span><span class=\"token plain\">length </span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token number\">0</span><span class=\"token plain\"> </span><span class=\"token operator\">&amp;&amp;</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">renderNodes</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">node</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">       </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">li</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">     </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">ul</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function maybe-class-name\" style=\"color:rgb(80, 250, 123)\">TOCLink</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token parameter\"> node </span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Smooth scroll implementation</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Depth based font size classes </span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>For smooth scrolling to a specific element on the page, we first locate the element using its ID, then use the <code>scrollIntoView</code> method with <code>behavior: \"smooth\"</code> option. See MDN for more on this method. It has wide browser support but <code>smooth</code> option may not be compatible with some older browsers. With this approach, clicking on table of contents links now produces a nice scrolling animation rather than the abrupt transition previously.</p>\n<p>If you need to add an offset when scrolling to heading elements (e.g. when page has a fixed navbar), you can apply the <code>scroll-margin-top</code> CSS property to heading elements.</p>\n<p>Additionally, we can leverage <code>TailwindCSS</code> and its <code>text</code> utility classes to gradually decrease font size of table of contents links based on depth.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"highlighting-active-links\">Highlighting Active Links<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#highlighting-active-links\" class=\"hash-link\" aria-label=\"Direct link to Highlighting Active Links\" title=\"Direct link to Highlighting Active Links\">​</a></h2>\n<p>For enhanced navigation with the table of contents, a final touch is to highlight table of contents links as their corresponding title comes into view on the page.</p>\n<p>To detect visibility of elements on page, we'll utilize the <code>Intersection Observer API</code> which has good browser support but some caveats. Additionally, we'll move this functionality into a custom hook that returns a boolean indicating if link is highlighted and provides callback to manually set highlight state. This hook will be consumed in the <code>TOCLink</code> component.</p>\n<div class=\"language-jsx codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token imports\"> useEffect</span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token imports\"> useRef</span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token imports\"> useState </span><span class=\"token imports punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"react\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">useHighlighted</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Implementation details</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">highlighted</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> setHighlighted</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\">  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function maybe-class-name\" style=\"color:rgb(80, 250, 123)\">TOCLink</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token parameter\"> node </span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">highlighted</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> setHighlighted</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">useHighlighted</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Other implementation details</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>In this hook, the <code>handleObserver</code> function serves as callback for <code>Intersection Observer</code>, handling visibility changes of observed elements, taking an entries array as its parameter.</p>\n<p>The <code>handleObserver</code> loops through entries, including h2, h3, h4 elements, checks if <code>isIntersecting</code> is <code>true</code> – indicating element is visible in viewport – and if so, updates active section in table of contents via <code>setActiveId</code>. When link is clicked we set it to be highlighted via the <code>setHighlighted</code> callback.</p>\n<p>Additionally, we store a new <code>Intersection Observer</code> instance in a <code>ref</code> to persist its identity across component renders.</p>\n<p>By scrolling the page, you can see the effect of this in action on this page, observing how the active section in table of contents updates as page reaches corresponding sections.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/react-markdown#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>Overall, using Remark and custom plugins to create a table of contents for a Next.js blog can bring many benefits for your site's user experience and accessibility. Through Remark, this powerful Markdown processor, and its rich range of plugins, it's easy to extract headings from Markdown files and transform them into an interactive, easy to navigate table of contents.</p>\n<p>By introducing a table of contents, you can enhance user experience on your Next.js blogs, making it easier for readers to find information they need. Additionally, using Remark to create custom table of contents plugins enables you to integrate the table outside of content itself, further increasing content availability and accessibility. By leveraging plugins like <code>mdast-util-to-string</code> and <code>unist-util-visit</code>, headings can be extracted from content, unique IDs can be generated, and they can be parsed into a format suitable for building the table of contents.</p>\n<p>This tutorial has walked through that process by creating a custom table of contents with nested structure, smooth scrolling, and active link highlighting. Readers can now quickly find and navigate to content they are interested in, enhancing overall usability and value of the blog.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/react-markdown",
            "title": "Using Remark to Create an Interactive Table of Contents in a Next.js Blog",
            "summary": "A table of contents has numerous benefits, and is a valuable addition for websites, especially blogs. An organized and easily navigable table of contents significantly improves the user experience, simplifying the process for readers to find information they require. By adding a table of contents, not only do you provide readers with streamlined navigation, but you also increase the overall accessibility and usability of content.",
            "date_modified": "2024-02-26T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "postgresql",
                "select"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/postgresql-select",
            "content_html": "<p>This article introduces the basic form of the <code>SELECT</code> statement in <code>PostgreSQL</code>, as well as how to use <code>SELECT</code> statements to query data from tables.</p>\n<p>In <code>PostgreSQL</code>, the <code>SELECT</code> statement is used to retrieve data from one or more tables and it is perhaps the most widely used statement.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"postgresql-select-syntax\">PostgreSQL SELECT Syntax<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#postgresql-select-syntax\" class=\"hash-link\" aria-label=\"Direct link to PostgreSQL SELECT Syntax\" title=\"Direct link to PostgreSQL SELECT Syntax\">​</a></h2>\n<p>Let's start with the basic form of a <code>SELECT</code> statement for retrieving data from a single table.</p>\n<p>The syntax of a <code>SELECT</code> statement is shown below:</p>\n<div class=\"language-sql codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">SELECT</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    expr_list</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">FROM</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    table_name</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">other_clauses</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>In this syntax:</p>\n<ul>\n<li><code>SELECT</code> and <code>FROM</code> are keywords.</li>\n<li><code>expr_list</code> is a list of columns or expressions to select. Multiple columns or expressions need to be separated by commas.</li>\n<li><code>table_name</code> is the data table to query from.</li>\n<li><code>FROM table_name</code> is optional. You can omit the <code>FROM</code> clause if you are not querying rows from any table.</li>\n<li><code>other_clauses</code> are clauses supported by the <code>SELECT</code> statement. The <code>SELECT</code> statement supports many clauses including:<!-- -->\n<ul>\n<li>Use the <code>DISTINCT</code> operator to select distinct rows.</li>\n<li>Use the <code>ORDER BY</code> clause to sort rows.</li>\n<li>Use the <code>WHERE</code> clause to filter rows.</li>\n<li>Use the <code>LIMIT</code> or <code>FETCH</code> clause to select a subset of rows from the table.</li>\n<li>Use the <code>GROUP BY</code> clause to group rows.</li>\n<li>Use the <code>HAVING</code> clause to filter groups.</li>\n<li>Use joins such as <code>INNER JOIN</code>, <code>LEFT JOIN</code>, <code>FULL OUTER JOIN</code>, <code>CROSS JOIN</code> to join with other tables.</li>\n<li>Use <code>UNION</code>, <code>INTERSECT</code> and <code>EXCEPT</code> to perform set operations.</li>\n</ul>\n</li>\n</ul>\n<p>Note that SQL keywords are case insensitive. However, it is a good coding practice to write SQL keywords in uppercase for better readability of SQL code.</p>\n<p>In this tutorial, we'll focus on the basic usage of the <code>SELECT</code> statement. The usage of other related clauses will be covered in subsequent tutorials.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"postgresql-select-examples\">PostgreSQL SELECT Examples<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#postgresql-select-examples\" class=\"hash-link\" aria-label=\"Direct link to PostgreSQL SELECT Examples\" title=\"Direct link to PostgreSQL SELECT Examples\">​</a></h2>\n<p>Let's look at some examples of using PostgreSQL <code>SELECT</code> statements.</p>\n<p>We'll use the <code>customer</code> table from the <code>PostgreSQL Sakila</code> sample database for the demonstration.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"query-one-column-with-postgresql-select\">Query One Column with PostgreSQL SELECT<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#query-one-column-with-postgresql-select\" class=\"hash-link\" aria-label=\"Direct link to Query One Column with PostgreSQL SELECT\" title=\"Direct link to Query One Column with PostgreSQL SELECT\">​</a></h3>\n<p>The following <code>SELECT</code> statement finds all customer first names from the <code>customer</code> table:</p>\n<div class=\"language-sql codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">SELECT</span><span class=\"token plain\"> first_name </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">FROM</span><span class=\"token plain\"> customer</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Here is partial output:</p>\n<div class=\"codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">first_name</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">------------  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">MARY</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">PATRICIA</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">LINDA</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">BARBARA</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">ELIZABETH</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">JENNIFER</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">MARIA  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">SUSAN</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">MARGARET</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">DOROTHY</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Note that we added a semicolon (;) at the end of the <code>SELECT</code> statement. The semicolon is not part of the SQL statement. It is used to signal the end of the SQL statement to PostgreSQL. Semicolon is also used to separate two SQL statements.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"query-multiple-columns-with-postgresql-select\">Query Multiple Columns with PostgreSQL SELECT<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#query-multiple-columns-with-postgresql-select\" class=\"hash-link\" aria-label=\"Direct link to Query Multiple Columns with PostgreSQL SELECT\" title=\"Direct link to Query Multiple Columns with PostgreSQL SELECT\">​</a></h3>\n<p>If you want to know the customer's first name, last name, and email, you can specify these column names in the <code>SELECT</code> clause as shown in the following query:</p>\n<div class=\"language-sql codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">SELECT</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    first_name</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    last_name</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    email</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">FROM</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    customer</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Here is partial output:</p>\n<div class=\"codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">first_name | last_name |                email                </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">------------+-----------+-------------------------------------</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">MARY       | SMITH     | MARY.SMITH@sakilacustomer.org       </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">PATRICIA   | JOHNSON   | PATRICIA.JOHNSON@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">LINDA      | WILLIAMS  | LINDA.WILLIAMS@sakilacustomer.org   </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">BARBARA    | JONES     | BARBARA.JONES@sakilacustomer.org    </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">ELIZABETH  | BROWN     | ELIZABETH.BROWN@sakilacustomer.org  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">JENNIFER   | DAVIS     | JENNIFER.DAVIS@sakilacustomer.org   </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">MARIA      | MILLER    | MARIA.MILLER@sakilacustomer.org     </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">SUSAN      | WILSON    | SUSAN.WILSON@sakilacustomer.org     </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">MARGARET   | MOORE     | MARGARET.MOORE@sakilacustomer.org   </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">DOROTHY    | TAYLOR    | DOROTHY.TAYLOR@sakilacustomer.org</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"query-all-columns-from-a-table-with-postgresql-select\">Query All Columns from a Table with PostgreSQL SELECT<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#query-all-columns-from-a-table-with-postgresql-select\" class=\"hash-link\" aria-label=\"Direct link to Query All Columns from a Table with PostgreSQL SELECT\" title=\"Direct link to Query All Columns from a Table with PostgreSQL SELECT\">​</a></h3>\n<p>If you want to find all columns from the <code>customer</code> table using the <code>SELECT</code> statement, use the following statement:</p>\n<div class=\"language-sql codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">SELECT</span><span class=\"token plain\"> </span><span class=\"token operator\">*</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">FROM</span><span class=\"token plain\"> customer</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Here is partial output:</p>\n<div class=\"codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> customer_id | store_id | first_name | last_name |                email                 | address_id | activebool | create_date |     last_update     | active   </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">-------------+----------+------------+-----------+-------------------------------------+------------+------------+-------------+---------------------+---------</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           1 |        1 | MARY       | SMITH     | MARY.SMITH@sakilacustomer.org        |          5 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           2 |        1 | PATRICIA   | JOHNSON   | PATRICIA.JOHNSON@sakilacustomer.org |          6 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           3 |        1 | LINDA      | WILLIAMS  | LINDA.WILLIAMS@sakilacustomer.org   |          7 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           4 |        2 | BARBARA    | JONES     | BARBARA.JONES@sakilacustomer.org    |          8 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           5 |        1 | ELIZABETH  | BROWN     | ELIZABETH.BROWN@sakilacustomer.org  |          9 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           6 |        2 | JENNIFER   | DAVIS     | JENNIFER.DAVIS@sakilacustomer.org   |         10 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           7 |        1 | MARIA      | MILLER    | MARIA.MILLER@sakilacustomer.org     |         11 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           8 |        2 | SUSAN      | WILSON    | SUSAN.WILSON@sakilacustomer.org     |         12 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">           9 |        2 | MARGARET   | MOORE     | MARGARET.MOORE@sakilacustomer.org   |         13 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">          10 |        1 | DOROTHY    | TAYLOR    | DOROTHY.TAYLOR@sakilacustomer.org   |         14 | t          | 2006-02-14  | 2006-02-15 04:57:20 |       1</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>In this example, we used the asterisk (<em>) in the <code>SELECT</code> clause which is shorthand for all columns. The asterisk (</em>) allows us to type less without having to list out all column names in the <code>customer</code> table.</p>\n<p>However, using asterisk (*) in <code>SELECT</code> statements is not a good practice for the following reasons:</p>\n<ol>\n<li>\n<p>Database performance. Assuming you have a table with lots of columns and large amounts of data, a <code>SELECT</code> statement with asterisk (*) shorthand will select data from all columns of the table which may not be necessary for the application.</p>\n</li>\n<li>\n<p>Application performance. Retrieving unnecessary data from the database increases traffic between the database server and application server. Hence your application's response time may be slower and less scalable.</p>\n</li>\n</ol>\n<p>For these reasons, it is best to explicitly specify column names in the <code>SELECT</code> clause to only get required data from the database.</p>\n<p>You should only use the asterisk (*) shorthand for adhoc queries that check database data.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"query-with-expressions-in-postgresql-select\">Query with Expressions in PostgreSQL SELECT<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#query-with-expressions-in-postgresql-select\" class=\"hash-link\" aria-label=\"Direct link to Query with Expressions in PostgreSQL SELECT\" title=\"Direct link to Query with Expressions in PostgreSQL SELECT\">​</a></h3>\n<p>In addition to column names, you can also use expressions in the <code>SELECT</code> statement. The following example uses a <code>SELECT</code> statement to return the full name and email of all customers:</p>\n<div class=\"language-sql codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">SELECT</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    first_name </span><span class=\"token operator\">||</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">' '</span><span class=\"token plain\"> </span><span class=\"token operator\">||</span><span class=\"token plain\"> last_name</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    email</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">FROM</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    customer</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Here is partial output:</p>\n<div class=\"codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">     ?column?      |                 email                 </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">-------------------+-------------------------------------</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> MARY SMITH        | MARY.SMITH@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> PATRICIA JOHNSON  | PATRICIA.JOHNSON@sakilacustomer.org  </span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> LINDA WILLIAMS    | LINDA.WILLIAMS@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> BARBARA JONES     | BARBARA.JONES@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> ELIZABETH BROWN   | ELIZABETH.BROWN@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> JENNIFER DAVIS    | JENNIFER.DAVIS@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> MARIA MILLER      | MARIA.MILLER@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> SUSAN WILSON      | SUSAN.WILSON@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> MARGARET MOORE    | MARGARET.MOORE@sakilacustomer.org</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> DOROTHY TAYLOR    | DOROTHY.TAYLOR@sakilacustomer.org   </span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>In this example, we concatenated each customer's first name, space and last name using the string concatenation operator <code>||</code>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"calculate-expressions-with-postgresql-select\">Calculate Expressions with PostgreSQL SELECT<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#calculate-expressions-with-postgresql-select\" class=\"hash-link\" aria-label=\"Direct link to Calculate Expressions with PostgreSQL SELECT\" title=\"Direct link to Calculate Expressions with PostgreSQL SELECT\">​</a></h3>\n<p>If you just want to calculate the result of an expression, you can omit the <code>FROM</code> clause in the <code>SELECT</code> statement. The following <code>SELECT</code> statement is used to calculate the result of <code>5 * 3</code>:</p>\n<div class=\"language-sql codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-sql codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">SELECT</span><span class=\"token plain\"> </span><span class=\"token number\">5</span><span class=\"token plain\"> </span><span class=\"token operator\">*</span><span class=\"token plain\"> </span><span class=\"token number\">3</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The output is:</p>\n<div class=\"codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">?column?</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">----------</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">       15</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-select#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In this tutorial, you learned how to use the basic form of PostgreSQL <code>SELECT</code> statements to query data from a single table. You can omit the <code>FROM</code> clause in <code>SELECT</code> statements if you do not need to query data from any table.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/postgresql-select",
            "title": "PostgreSQL SELECT Statement",
            "summary": "This article introduces the basic form of the `SELECT` statement in `PostgreSQL`, as well as how to use `SELECT` statements to query data from tables. In `PostgreSQL`, the `SELECT` statement is used to retrieve data from one or more tables and it is perhaps the most widely used statement.",
            "date_modified": "2024-02-21T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "postgresql",
                "select"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/postgresql-isnull",
            "content_html": "<p>This article explains how to use the <code>IS NULL</code> operator in PostgreSQL to check if a value is <code>NULL</code>.\nPostgreSQL <code>IS NULL</code> is a boolean operator that checks if a value is <code>NULL</code>. A <code>NULL</code> value is a special value that\nindicates nothing, it is neither an empty string nor false.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"postgresql-is-null-syntax\">PostgreSQL IS NULL Syntax<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-isnull#postgresql-is-null-syntax\" class=\"hash-link\" aria-label=\"Direct link to PostgreSQL IS NULL Syntax\" title=\"Direct link to PostgreSQL IS NULL Syntax\">​</a></h2>\n<p>PostgreSQL <code>IS NULL</code> is a unary comparison operator that only requires one operand. The syntax for the <code>IS NULL</code>\noperator is:</p>\n<div class=\"language-shell codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">expr IS NULL</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">expr IS NOT NULL</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p><strong>Breakdown:</strong></p>\n<ul>\n<li><code>expr</code> can be a field name, a value, or an expression.</li>\n<li><code>IS NOT NULL</code> is the negation of <code>IS NULL</code>.</li>\n<li><code>IS NULL</code> and <code>IS NOT NULL</code> can be used in <code>SELECT</code> statements or <code>WHERE</code> clauses.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"postgresql-is-null-operator-rules\">PostgreSQL IS NULL Operator Rules<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-isnull#postgresql-is-null-operator-rules\" class=\"hash-link\" aria-label=\"Direct link to PostgreSQL IS NULL Operator Rules\" title=\"Direct link to PostgreSQL IS NULL Operator Rules\">​</a></h2>\n<p>When the operand on the left side of the PostgreSQL <code>IS NULL</code> operator is <code>NULL</code>, the <code>IS NULL</code> operator returns <code>t</code>,\notherwise it returns <code>f</code>.</p>\n<div class=\"language-shell codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">SELECT</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    NULL IS NULL \"NULL IS NULL\",</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    0 IS NULL \"0 IS NULL\",</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    1 IS NULL \"1 IS NULL\";</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<div class=\"language-shell codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> NULL IS NOT NULL | 0 IS NOT NULL | 1 IS NOT NULL</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">------------------+---------------+---------------</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> f                | t             | t</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"postgresql-is-null-examples\">PostgreSQL IS NULL Examples<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-isnull#postgresql-is-null-examples\" class=\"hash-link\" aria-label=\"Direct link to PostgreSQL IS NULL Examples\" title=\"Direct link to PostgreSQL IS NULL Examples\">​</a></h2>\n<p>We will use the tables in the <code>Sakila</code> sample database for demonstration. Please install the <code>Sakila</code> sample database in\nPostgreSQL first.</p>\n<p>The <code>Sakila</code> sample database is one of the most widely used and best sample databases. The <code>Sakila</code> sample database was\noriginally developed by Mike Hillyer, a former member of the MySQL AB documentation team. It is designed to provide a\nstandard schema that can be used for example demonstrations in books, tutorials, articles, etc.</p>\n<p>The <code>Sakila</code> database models a DVD rental store business, including movies, actors, movie-actor relationships, and a\ncentral inventory table that connects movies, stores, and rental transactions.</p>\n<p>As one of the best sample databases, the <code>Sakila</code> database has been ported to platforms such as PostgreSQL, Oracle, DB2,\nand SQLite.</p>\n<p>In the <code>Sakila</code> sample database, the <code>staff</code> table stores employee information for the DVD rental store.</p>\n<p>In the <code>staff</code> table, <code>picture</code> stores the employee's photo file. To query for employees who have not uploaded a photo\nfrom the <code>staff</code> table, you need to check if <code>picture</code> is <code>NULL</code>. Use the following SQL statement with <code>IS NULL</code>:</p>\n<div class=\"language-shell codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">SELECT</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    first_name, last_name, picture</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">FROM</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    staff</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">WHERE</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    picture IS NULL;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<div class=\"language-shell codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-shell codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> first_name | last_name | picture</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">------------+-----------+---------</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> Mike       | Hillyer   | &lt;null&gt;</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> Jon        | Stephens  | &lt;null&gt;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/postgresql-isnull#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In this article, we learned the syntax and usage of the <code>IS NULL</code> and <code>IS NOT NULL</code> comparison operators in PostgreSQL.\nHere are the key takeaways from this article:</p>\n<ul>\n<li><code>IS NULL</code> and <code>IS NOT NULL</code> are unary comparison operators.</li>\n<li>Use the <code>IS NULL</code> operator to check if a value is <code>NULL</code>.</li>\n<li>The <code>IS NOT NULL</code> operator is the negation of <code>IS NULL</code>.</li>\n<li><code>NULL IS NULL</code> evaluates to true.</li>\n</ul>",
            "url": "https://illacloud.github.io/illa-website/blog/postgresql-isnull",
            "title": "Best Practices for PostgreSQL ISNULL and ISNOTNULL",
            "summary": "This article explains how to use the `IS NULL` operator in PostgreSQL to check if a value is `NULL`. PostgreSQL `IS NULL` is a boolean operator that checks if a value is `NULL`. A `NULL` value is a special value that indicates nothing, it is neither an empty string nor false.",
            "date_modified": "2024-02-04T11:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "postgresql",
                "isnull",
                "isnotnull"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/react-component-library",
            "content_html": "<p>React is a popular JavaScript library for building user interfaces. It is used by many companies, including Facebook, Instagram, Netflix, Airbnb, and Uber. React is also used by many open-source projects, such as WordPress, Drupal, and Magento.</p>\n<p>When building many interfaces, it's essential to choose an appropriate React component library. These libraries can help us quickly build user interfaces. They also provide many reusable components, such as buttons, forms, charts, tables, etc. These libraries offer many features, including themes, animations, routing, state management, and more.</p>\n<p>There are many React component libraries on the market. Each library has its own features, pros and cons, and price. In this blog post, we will review the top 5 React component libraries in 2024 and compare them based on their features, ease of use, compatibility.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"why-choose-a-component-library\">Why Choose a Component Library?<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#why-choose-a-component-library\" class=\"hash-link\" aria-label=\"Direct link to Why Choose a Component Library?\" title=\"Direct link to Why Choose a Component Library?\">​</a></h2>\n<p>Typically, companies choose component libraries to build web applications to simplify repetitive tasks. Component libraries provide a range of ready-to-use components, such as dropdowns, input boxes, checkboxes, etc. These components come with customizable styles or attractive built-in styles, allowing for the rapid development of visually appealing websites without starting from scratch.</p>\n<p>In summary, we usually use component libraries in two scenarios:</p>\n<ul>\n<li>External tools: Directly facing company users, often consistent with the company's style, more aesthetically pleasing, and more responsive.</li>\n<li>Internal tools: For internal use by company employees, emphasizing design aesthetics and rapid feature implementation.</li>\n</ul>\n<p>Next, we will analyze component libraries based on the following aspects:</p>\n<ol>\n<li>Advantages</li>\n<li>Disadvantages</li>\n<li>How to make a choice</li>\n</ol>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"best-choice-for-internal-tool-scenarios\">Best Choice for Internal Tool Scenarios<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#best-choice-for-internal-tool-scenarios\" class=\"hash-link\" aria-label=\"Direct link to Best Choice for Internal Tool Scenarios\" title=\"Direct link to Best Choice for Internal Tool Scenarios\">​</a></h2>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an out-of-the-box low-code tool that allows for the rapid construction of internal tools using simple JS, without the need for complex frontend projects. It offers drag-and-drop UI building.</p>\n<ul>\n<li>Web and application management panels</li>\n<li>Data dashboards</li>\n<li>Custom B2B tools</li>\n</ul>\n<p>Compared to building with component libraries, ILLA Cloud can achieve tool construction 10 times faster and supports collaborative editing within teams.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/react-component-library/dashboard.png\" alt=\"dashboard\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"mui\">MUI<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#mui\" class=\"hash-link\" aria-label=\"Direct link to MUI\" title=\"Direct link to MUI\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/react-component-library/mui.png\" alt=\"MUI\" class=\"img_CfaS\"></p>\n<p>⭐ GitHub Stars: 90k</p>\n<p>⏬ NPM Downloads: 3,263,852 per week</p>\n<p>💪🏼 Initial Release Date: November 6, 2014</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#advantages\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>MUI's components are comprehensive, consisting of:</p>\n<ul>\n<li>MUI Core: Core components, including buttons, forms, icons, charts, tables, etc.</li>\n<li>MUI X: Advanced components, including data tables, complex charts, etc.</li>\n</ul>\n<p>Using MUI can cover all scenarios without the need for other component libraries for complex data handling and presentation.</p>\n<p>If you like the style of Material Design, MUI is your best choice. You can build a complete Google-style application without any modifications.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#disadvantages\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<p>Complex data handling components in MUI X require payment.</p>\n<p>MUI, as an implementation of Material Design, has a rigorous design style, which may require extra work for scenarios needing custom design styles.</p>\n<p>MUI's custom Style system uses EmotionJs for overall layout style adjustments, which may have a learning curve and might not be suitable for direct development without consulting documentation.</p>\n<p>If you dislike the CSS-IN-JS approach, MUI might not be your best choice.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"shadcn-ui\">Shadcn UI<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#shadcn-ui\" class=\"hash-link\" aria-label=\"Direct link to Shadcn UI\" title=\"Direct link to Shadcn UI\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/react-component-library/shadcnui.png\" alt=\"Shadcn UI\" class=\"img_CfaS\"></p>\n<p>⭐ GitHub Stars: 37k</p>\n<p>⏬ NPM Downloads: 23,962 per week</p>\n<p>💪🏼 Initial Release Date: March 8, 2023</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-1\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#advantages-1\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>As a relatively new project, Shadcn UI has quickly gained recognition in the open-source community. Being newly built without historical baggage, it can adapt better to new technology stacks.</p>\n<p>Shadcn UI's design style is more business-oriented, with a clean user interface suitable for internal tools and serious application scenarios. Shadcn UI supports custom themes and some preset styles, allowing for quick application builds without the need for custom design styles.</p>\n<p>Shadcn UI's biggest advantage is that it is not a library distributed by npm. Integrating Shadcn UI involves building directly with code, meaning you can modify its code without additional effort.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-1\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#disadvantages-1\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<p>Shadcn UI's theme is based on CSS variables, which means it does not support IE11. If you need IE11 support, Shadcn UI might not be the best choice.</p>\n<p>Shadcn UI's theme customization uses CSS variables or Tailwind CSS utility classes, so additional work may be needed for CSS-IN-JS users.</p>\n<p>Being relatively new, Shadcn UI may lack support for complex components like DataGrid and Chart, requiring other solutions, meaning you can't rely on a single component library for all tasks.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"chakra-ui\">Chakra UI<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#chakra-ui\" class=\"hash-link\" aria-label=\"Direct link to Chakra UI\" title=\"Direct link to Chakra UI\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/react-component-library/chakraui.png\" alt=\"chakra-ui\" class=\"img_CfaS\"></p>\n<p>⭐ GitHub Stars: 35.8k</p>\n<p>⏬ NPM Downloads: 534,188 per week</p>\n<p>💪🏼 Initial Release Date: December 7, 2019</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-2\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#advantages-2\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>Chakra UI is a commercially styled component library, not bound to any specific style, making it aesthetically pleasing for most users.</p>\n<p>As a library, Chakra UI has a vast template market, offering complete templates for mainstream scenarios like e-commerce and SaaS websites. These templates can be used directly or modified.</p>\n<p>Chakra UI's features mostly require no configuration, helpful for rapid prototyping, and natively supports responsiveness for previews on different devices.</p>\n<p>Chakra UI is SEO-friendly, essential for products requiring SEO optimization.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-2\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#disadvantages-2\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<p>Chakra UI lacks component richness for complex scenarios like data handling and charts, requiring additional solutions.</p>\n<p>It's best not to use Chakra UI for complex tool or SaaS products due to its limited component customization capabilities. Using Chakra UI for Landing Pages is the best choice.</p>\n<p>Although Chakra UI has a rich template market, these templates are not free, and additional costs are required for purchases.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"ant-design\">Ant Design<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#ant-design\" class=\"hash-link\" aria-label=\"Direct link to Ant Design\" title=\"Direct link to Ant Design\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/react-component-library/antd.png\" alt=\"ant-design\" class=\"img_CfaS\"></p>\n<p>⭐ GitHub Stars: 89.1k</p>\n<p>⏬ NPM Downloads: 1,264,151 per week</p>\n<p>💪🏼 Initial Release Date: July 21, 2015</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-3\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#advantages-3\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>As a library maintained by a mature billion-dollar public company, Ant Design offers the best richness, covering all scenarios with stable components.</p>\n<p>If you need to unify React and Vue styles in your workspace, Ant Design is your best choice, supporting both React and Vue.</p>\n<p>Ant Design includes not only basic components but also Web3 components, allowing for direct Web3 application development.</p>\n<p>Ant Design also customizes component libraries for data charts, big data scenarios, and maps, supporting complex data screen scenarios.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-3\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#disadvantages-3\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<p>Ant Design's extensive support comes with historical baggage, such as poor performance in the Table component, requiring additional solutions.</p>\n<p>Although Ant Design excellently covers component breadth, it lacks depth in component satisfaction.</p>\n<p>All dependencies in Ant Design are maintained by Ant Design, requiring extra work to adapt your build and CSS schemes, which is unfriendly for scenarios wishing to use other open-source libraries.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"fluent-ui\">Fluent UI<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#fluent-ui\" class=\"hash-link\" aria-label=\"Direct link to Fluent UI\" title=\"Direct link to Fluent UI\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/react-component-library/fluentui.png\" alt=\"fluent-ui\" class=\"img_CfaS\"></p>\n<p>⭐ GitHub Stars: 17.3k</p>\n<p>⏬ NPM Downloads: 191,170 per week</p>\n<p>💪🏼 Initial Release Date: September 17, 2020</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-4\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#advantages-4\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>Maintained officially by Microsoft, Fluent UI's style is completely consistent with Microsoft's, helpful for scenarios needing to align with Microsoft's style.</p>\n<p>Fluent UI supports many platforms, including Web, React Native, iOS, Android, macOS, and Windows, allowing for the development of cross-platform applications.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-4\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#disadvantages-4\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<p>Not everyone likes Microsoft's style, so if you dislike it, Fluent UI might not be the best choice.</p>\n<p>Fluent UI lacks component richness for complex scenarios like data handling and charts, requiring additional solutions.</p>\n<p>Fluent UI's documentation could be improved, as documentation construction is crucial for developers.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/react-component-library#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>If you need a comprehensive component library and are willing to pay for it, MUI is recommended. If you don't want to pay, Ant Design is recommended.</p>\n<p>If you are developing a Landing Page, Chakra UI is recommended.</p>\n<p>If you want to use the Microsoft style, Fluent UI is recommended.</p>\n<p>If you don't want to introduce a component library and only want to integrate the source code, Shadcn UI is recommended.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/react-component-library",
            "title": "Most Popular 5 React Component Libraries in 2024",
            "summary": "React is a popular JavaScript library for building user interfaces. It is used by many companies, including Facebook, Instagram, Netflix, Airbnb, and Uber.",
            "date_modified": "2024-01-29T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "react",
                "component",
                "library"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/web-worker-tutorial",
            "content_html": "<p>Web Worker is a JavaScript API that allows you to run JavaScript in the background. It is designed to run complex calculations without blocking the main thread. This is a very useful feature for web developers. However, it is not widely used. In this article, I will show you how to use Web Worker.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"what-is-web-worker\">What is Web Worker<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#what-is-web-worker\" class=\"hash-link\" aria-label=\"Direct link to What is Web Worker\" title=\"Direct link to What is Web Worker\">​</a></h2>\n<p>As is well known, one of the key features of the JavaScript language is its single-threaded nature, meaning it can only synchronously process one task at a time. This is also a significant point of criticism by backend developers for the emergence of Node.js, which is derived from this language.</p>\n<p>However, when JavaScript was initially designed, it was intentionally designed as a single-threaded language, primarily due to its intended use case at the time.</p>\n<p>The original purpose of JavaScript was to facilitate interaction between the web page and the user, manipulating DOM or BOM elements. If multiple threads were used to pursue efficiency in this context, it would lead to issues such as resource contention and data synchronization. Therefore, it was necessary to specify that only one thread could directly manipulate page elements at any given time to ensure system stability and security.</p>\n<p>Despite this, JavaScript is not limited to linear task processing. JavaScript has message queues and an event loop mechanism, allowing concurrency through asynchronous message handling. In high I/O-concurrent transaction processing, the performance is excellent because it eliminates the need to manually create and destroy threads and occupy additional thread management space. Consequently, Node.js, as an explorer of JavaScript on the server side, exhibits significant advantages in handling high-concurrency network requests.</p>\n<p>Although JavaScript effectively addresses the performance issues related to high I/O with its asynchronous mechanisms, the fundamental nature of single-threaded execution remains unchanged. The drawback is evident when it comes to handling CPU-intensive tasks, as it cannot fully harness the computational resources of modern multi-core, multi-threaded machines.</p>\n<p>In modern large-scale frontend projects, as code complexity increases, local compute-intensive tasks also become more demanding. Running JavaScript projects in a single thread inevitably results in the application being busy with computations and neglecting the frequent user interactions, leading to suboptimal user experiences. In more severe cases, when there are too many compute-intensive tasks, it can lead to the web page becoming unresponsive due to resource saturation. Therefore, the need for local multi-threaded computing capability in web projects became imperative, giving rise to Web Workers.</p>\n<p>Web Workers were introduced as a standard in HTML5, and they are officially defined as follows:</p>\n<blockquote>\n<p>Web Workers makes it possible to run a script operation in a background thread separate from the main execution thread of a web application.</p>\n</blockquote>\n<p>It allows JavaScript scripts to create multiple threads, thus fully utilizing the CPU's multi-core computing capabilities without blocking the main thread (typically referred to as the UI rendering thread).</p>\n<p>Although Web Workers are part of the HTML5 standard, they were actually proposed in a draft by W3C as early as 2009. Therefore, their compatibility is excellent, and they are supported by virtually all major web browsers.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/web-worker-tutorial/worker.png\" alt=\"web_worker\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"the-limitations-of-web-workers\">The Limitations of Web Workers<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#the-limitations-of-web-workers\" class=\"hash-link\" aria-label=\"Direct link to The Limitations of Web Workers\" title=\"Direct link to The Limitations of Web Workers\">​</a></h2>\n<p>It's important to note that Web Workers fundamentally do not break JavaScript's single-threaded nature.</p>\n<p>In fact, the code within a Web Worker script cannot directly manipulate DOM nodes and cannot use the majority of BOM (Browser Object Model) APIs. Its global environment is DedicatedWorkerGlobalScope rather than Window. The Worker operates in a sandbox, running entirely separate JavaScript files from the main thread.</p>\n<p>These limitations imposed on Workers are designed to avoid the resource contention issues mentioned at the beginning of this article. Their primary use case is to act as adjuncts to the main thread, handling high CPU-intensive data processing tasks and then passing the execution results back to the main thread through inter-thread communication. Throughout this process, the main thread continues to be responsive to user interactions, effectively preventing page lagging issues.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"the-usage-of-web-workers\">The usage of Web Workers<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#the-usage-of-web-workers\" class=\"hash-link\" aria-label=\"Direct link to The usage of Web Workers\" title=\"Direct link to The usage of Web Workers\">​</a></h2>\n<p>Currently, browser support for Web Workers is quite comprehensive, and you can typically use them by simply providing the URI of the Worker script and instantiating it.</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* main.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> worker </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"./worker.js\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"communication\">Communication<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#communication\" class=\"hash-link\" aria-label=\"Direct link to Communication\" title=\"Direct link to Communication\">​</a></h3>\n<p>Communication between a Worker and the main thread requires only two APIs on each side: <code>onmessage</code> or <code>addEventListener</code> for receiving messages and <code>postMessage</code> for sending messages, enabling seamless message-based interaction.</p>\n<div class=\"language-js codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* main.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> worker </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"./worker.js\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Main thread sends a message</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'Main thread sends data'</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Main thread receives a message</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method-variable function-variable method function property-access\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> data </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">!</span><span class=\"token plain\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">log</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<div class=\"language-js codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* worker.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Worker thread receives a message</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">addEventListener</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'message'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> data </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">!</span><span class=\"token plain\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Worker thread sends a message</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'Worker received data'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Note: In the Worker, <code>this.xx</code>, <code>self.xx</code>, and directly using <code>xx</code> all have the same scope, referring to the global variable <code>DedicatedWorkerGlobalScope</code>, and can be used interchangeably.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"termination\">Termination<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#termination\" class=\"hash-link\" aria-label=\"Direct link to Termination\" title=\"Direct link to Termination\">​</a></h3>\n<p>There are two ways to terminate a Worker: it can be terminated internally or can be instructed to terminate by the main thread.</p>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* main.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">terminate</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<div class=\"language-javascript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* worker.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">close</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advanced-making-communication-promise-based\">Advanced: Making Communication Promise-Based<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#advanced-making-communication-promise-based\" class=\"hash-link\" aria-label=\"Direct link to Advanced: Making Communication Promise-Based\" title=\"Direct link to Advanced: Making Communication Promise-Based\">​</a></h3>\n<p>Based on the previous section, we have already been able to use the Worker's API to harness the browser's multi-threading capabilities quite simply. However, it lacks some usability features that are often needed in engineering applications, such as asynchronous responses. Let's do that next.</p>\n<p>Firstly, we need an asynchronous callback collection called <code>actionHandlerMap</code>, which is used to store Promise resolve methods awaiting responses from the Worker. The keys can be specified using some unique identifier from the communication (ensuring uniqueness is sufficient). Next, we need to encapsulate the native <code>postMessage</code> and <code>onmessage</code> methods.</p>\n<p>In the messages sent via <code>postMessage</code>, we include an <code>id</code> and place the current Promise's resolve method into <code>actionHandlerMap</code>, awaiting the Worker's response.</p>\n<p>Regarding the <code>onmessage</code> listener, after receiving a response from the Worker, we match it with the corresponding Promise and execute the <code>.then()</code> method. After completion, we remove the Promise's resolve function from the collection.</p>\n<div class=\"language-js codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* main.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> fakeId </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token number\">0</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">MainThreadController</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">constructor</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">options</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">workerUrl</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token plain\"> options</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">workerName</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Collection for awaiting asynchronous callbacks</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">onmessage</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">bind</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> response </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Execute the corresponding Promise resolve</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">call</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> response</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">delete</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// In practical use, you can specify or generate a business id as the key</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> id </span><span class=\"token operator\">=</span><span class=\"token plain\"> fakeId</span><span class=\"token operator\">++</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Promise</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">resolve</span><span class=\"token parameter punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token parameter\"> reject</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> message </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token spread operator\">...</span><span class=\"token plain\">action</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">message</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">response</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> mainThreadController </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">MainThreadController</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">workerUrl</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'./worker.js'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">workerName</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'test-worker'</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">mainThreadController</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token literal-property property\">actionType</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'asyncCalc'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token literal-property property\">payload</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'send messages to worker'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">1</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">then</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">log</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'Message received from worker:'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> response</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">msg</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The handling of the worker part is much simpler. After completing the computational processing, include the request's id in the response.</p>\n<div class=\"language-js codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* worker.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">WorkerThreadController</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">constructor</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Collection for awaiting asynchronous callbacks</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">onmessage</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">bind</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> actionType</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> payload </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">switch</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">actionType</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">case</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'print'</span><span class=\"token operator\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">log</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">msg</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">response</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'Message has been printed.'</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">break</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">case</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'asyncCalc'</span><span class=\"token operator\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Simulate an asynchronous processing scenario</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> result </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">await</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Promise</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">setTimeout</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">params</span><span class=\"token plain\"> </span><span class=\"token operator\">*</span><span class=\"token plain\"> </span><span class=\"token number\">2</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token number\">1000</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">response</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token template-string string\" style=\"color:rgb(255, 121, 198)\">The calculated answer is </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">${</span><span class=\"token template-string interpolation\">result</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token template-string string\" style=\"color:rgb(255, 121, 198)\">.</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">break</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">            </span><span class=\"token keyword module\" style=\"color:rgb(189, 147, 249);font-style:italic\">default</span><span class=\"token operator\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">                </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">break</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> workerThreadController </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">WorkerThreadController</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Of course, further improvements can be made on the worker side. We've noticed that as the Worker needs to handle more types of computations, using a switch statement in the <code>onmessage</code> function can become lengthy. String-based checks may also not be reliable enough. We can simplify the logic within the Worker by encapsulating it using a strategy pattern.</p>\n<div class=\"language-js codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/* worker.js */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// This can be extracted into a separate file and then imported</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> api </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">print</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">log</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">msg</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'Message has been printed.'</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">asyncCalc</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> result </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">await</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Promise</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">setTimeout</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">params</span><span class=\"token plain\"> </span><span class=\"token operator\">*</span><span class=\"token plain\"> </span><span class=\"token number\">2</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token number\">1000</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token template-string string\" style=\"color:rgb(255, 121, 198)\">The calculated answer is </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">${</span><span class=\"token template-string interpolation\">result</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token template-string string\" style=\"color:rgb(255, 121, 198)\">.</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">WorkerThreadController</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">constructor</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Collection for awaiting asynchronous callbacks</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">actionHandlerMap</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">worker</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">onmessage</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">bind</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">onmessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> actionType</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> payload </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> result </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:rgb(189, 147, 249);font-style:italic\">await</span><span class=\"token plain\"> api</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">actionType</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">call</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">this</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> payload</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">        self</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">postMessage</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> id</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">response</span><span class=\"token operator\">:</span><span class=\"token plain\"> result </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> workerThreadController </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">WorkerThreadController</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Thus, a simple and useful Promise-based Worker has been established.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/web-worker-tutorial#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In summary, this article provided a brief overview of Web Workers, including their capabilities and limitations, to give readers a comprehensive understanding of their use cases. It proposed a solution for encapsulating the native Worker API to enable Promise-based invocation. Finally, it recommended a feature-rich mature solution currently used within the team, with the hope of assisting frontend developers interested in working on Worker enhancements in the near future.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/web-worker-tutorial",
            "title": "Best Web Worker Tutorial",
            "summary": "Web Worker is a JavaScript API that allows you to run JavaScript in the background. It is designed to run complex calculations without blocking the main thread.",
            "date_modified": "2024-01-29T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "javascript",
                "webworker"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation",
            "content_html": "<p>The importance of type programming in projects goes without saying. This article will summarize some common features of TypeScript, helping everyone to familiarize and master its use.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advanced-types\">Advanced Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#advanced-types\" class=\"hash-link\" aria-label=\"Direct link to Advanced Types\" title=\"Direct link to Advanced Types\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"intersection-types\">Intersection Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#intersection-types\" class=\"hash-link\" aria-label=\"Direct link to Intersection Types\" title=\"Direct link to Intersection Types\">​</a></h3>\n<p>Intersection types combine multiple types into one using the &amp; symbol.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">I1</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">I2</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I1</span><span class=\"token plain\"> </span><span class=\"token operator\">&amp;</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"tj\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">11</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"union-types\">Union Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#union-types\" class=\"hash-link\" aria-label=\"Direct link to Union Types\" title=\"Direct link to Union Types\">​</a></h3>\n<p>Union types, indicated by the | symbol, mean a value can be one of several types.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token number\">1</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"string-literal-types\">String Literal Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#string-literal-types\" class=\"hash-link\" aria-label=\"Direct link to String Literal Types\" title=\"Direct link to String Literal Types\">​</a></h3>\n<p>String literal types use a string type as the type of a variable.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'number'</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'number'</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"numeric-literal-types\">Numeric Literal Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#numeric-literal-types\" class=\"hash-link\" aria-label=\"Direct link to Numeric Literal Types\" title=\"Direct link to Numeric Literal Types\">​</a></h3>\n<p>Numeric literal types use a number as the type of a variable.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token number\">1</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"boolean-literal-types\">Boolean Literal Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#boolean-literal-types\" class=\"hash-link\" aria-label=\"Direct link to Boolean Literal Types\" title=\"Direct link to Boolean Literal Types\">​</a></h3>\n<p>Boolean literal types use a boolean value as the type of a variable.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\">true</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token boolean\">true</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"template-literal-types\">Template Literal Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#template-literal-types\" class=\"hash-link\" aria-label=\"Direct link to Template Literal Types\" title=\"Direct link to Template Literal Types\">​</a></h3>\n<p>Template literal types use ES6 template string syntax to constrain types.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">https</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token template-string string\" style=\"color:rgb(255, 121, 198)\">https://</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">${</span><span class=\"token template-string interpolation builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\">https </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><span class=\"token template-string string\" style=\"color:rgb(255, 121, 198)\">https://jd.com</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(255, 121, 198)\">`</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"operators\">Operators<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#operators\" class=\"hash-link\" aria-label=\"Direct link to Operators\" title=\"Direct link to Operators\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"keyof\">keyof<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#keyof\" class=\"hash-link\" aria-label=\"Direct link to keyof\" title=\"Direct link to keyof\">​</a></h3>\n<p>keyof is used to get all keys of a type, returning a union type.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// const a: 'name' | 'age' = 'name'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'name'</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"typeof\">typeof<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#typeof\" class=\"hash-link\" aria-label=\"Direct link to typeof\" title=\"Direct link to typeof\">​</a></h3>\n<p>typeof is used to get the structural type of an object or function.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a2 </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'tj'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> a2 </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// {name: string}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">fn1</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">x</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> x </span><span class=\"token operator\">*</span><span class=\"token plain\"> </span><span class=\"token number\">10</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> fn1 </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// (x: number) =&gt; number</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"in\">in<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#in\" class=\"hash-link\" aria-label=\"Direct link to in\" title=\"Direct link to in\">​</a></h3>\n<p>in is used to iterate over union types.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> obj </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"tj\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">11</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T5</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/*</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">{</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">name: any,</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">age: any</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">}</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">*/</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tk\">T[K]<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#tk\" class=\"hash-link\" aria-label=\"Direct link to T[K]\" title=\"Direct link to T[K]\">​</a></h3>\n<p>T[K] is used to access an index, obtaining the union type of the corresponding value.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">I3</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T6</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I3</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I3</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string | number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"operators-1\">Operators<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#operators-1\" class=\"hash-link\" aria-label=\"Direct link to Operators\" title=\"Direct link to Operators\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"non-null-assertion-operator\">Non-null Assertion Operator<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#non-null-assertion-operator\" class=\"hash-link\" aria-label=\"Direct link to Non-null Assertion Operator\" title=\"Direct link to Non-null Assertion Operator\">​</a></h3>\n<p>The non-null assertion operator ! is used to emphasize that an element is neither null nor undefined, informing TypeScript that the property will be explicitly assigned.</p>\n<div class=\"language-jsx codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function maybe-class-name\" style=\"color:rgb(80, 250, 123)\">Demo</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">JSX</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access maybe-class-name\" style=\"color:rgb(80, 250, 123)\">Element</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">   </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> divRef </span><span class=\"token operator\">=</span><span class=\"token plain\"> useRef</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 121, 198)\">HTMLDivElement</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\">()</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">   useEffect(() =&gt; </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">      divRef</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token property-access\">current</span><span class=\"token operator\">!</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(80, 250, 123)\">scrollIntoView</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Asserting that divRef.current is not null or undefined</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">   </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain-text\">, [])</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">   return </span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">div</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(241, 250, 140)\">ref</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(248, 248, 242)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(255, 121, 198)\">divRef</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\">divDemo</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 121, 198)\">div</span><span class=\"token tag punctuation\" style=\"color:rgb(248, 248, 242)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain-text\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"optional-chaining-operator\">Optional Chaining Operator<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#optional-chaining-operator\" class=\"hash-link\" aria-label=\"Direct link to Optional Chaining Operator\" title=\"Direct link to Optional Chaining Operator\">​</a></h3>\n<p>The optional chaining operator ?. is used to check if the left-hand expression is null or undefined, stopping the expression if true.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a </span><span class=\"token operator\">=</span><span class=\"token plain\"> b</span><span class=\"token operator\">?.</span><span class=\"token plain\">a</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"nullish-coalescing-operator\">Nullish Coalescing Operator<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#nullish-coalescing-operator\" class=\"hash-link\" aria-label=\"Direct link to Nullish Coalescing Operator\" title=\"Direct link to Nullish Coalescing Operator\">​</a></h3>\n<p>The nullish coalescing operator ?? is used to check if the left-hand expression is null or undefined, returning the right-hand value if not.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a </span><span class=\"token operator\">=</span><span class=\"token plain\"> b </span><span class=\"token operator\">??</span><span class=\"token plain\"> </span><span class=\"token number\">10</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"numeric-separators\">Numeric Separators<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#numeric-separators\" class=\"hash-link\" aria-label=\"Direct link to Numeric Separators\" title=\"Direct link to Numeric Separators\">​</a></h3>\n<p>Numeric separators _ are used to split long numbers for easier reading. The compiled result will automatically remove _.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> num</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token number\">1_111_111_111</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"type-aliases\">Type Aliases<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#type-aliases\" class=\"hash-link\" aria-label=\"Direct link to Type Aliases\" title=\"Direct link to Type Aliases\">​</a></h2>\n<p>Type aliases are used to give a type a new name.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Message</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(80, 250, 123)\">greet</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">message</span><span class=\"token operator\">:</span><span class=\"token plain\"> Message</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"type-assertions\">Type Assertions<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#type-assertions\" class=\"hash-link\" aria-label=\"Direct link to Type Assertions\" title=\"Direct link to Type Assertions\">​</a></h2>\n<p>Type assertions tell the browser what type I am very certain of.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Angle bracket syntax</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> someValue</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"this is a string\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> strLength</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token operator\">&gt;</span><span class=\"token plain\">someValue</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">length</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// as syntax</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> someValue</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"this is a string\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> strLength</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">someValue </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">as</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">length</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"type-guards\">Type Guards<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#type-guards\" class=\"hash-link\" aria-label=\"Direct link to Type Guards\" title=\"Direct link to Type Guards\">​</a></h2>\n<p>Type guards are expressions that check types at runtime to ensure the type within a certain scope.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">B</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  sex</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  home</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">doSomething</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">person</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">B</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">void</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">person</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">name</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Error</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Using in type guard</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">doSomething</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">person</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">B</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">void</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"name\"</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> person</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// OK</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Using typeof type guard</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> a </span><span class=\"token operator\">===</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"string\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// OK</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> a </span><span class=\"token operator\">+</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> a </span><span class=\"token operator\">===</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"number\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// OK</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> a </span><span class=\"token operator\">+</span><span class=\"token plain\"> </span><span class=\"token number\">2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// instanceof type guard</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">Foo</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">Bar</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">test</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">input</span><span class=\"token operator\">:</span><span class=\"token plain\"> Foo </span><span class=\"token operator\">|</span><span class=\"token plain\"> Bar</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">input </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">instanceof</span><span class=\"token plain\"> </span><span class=\"token class-name\">Foo</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Here input type 'narrows' to Foo</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Here input type 'narrows' to Bar</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"generics\">Generics<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#generics\" class=\"hash-link\" aria-label=\"Direct link to Generics\" title=\"Direct link to Generics\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"introduction-to-generics\">Introduction to Generics<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#introduction-to-generics\" class=\"hash-link\" aria-label=\"Direct link to Introduction to Generics\" title=\"Direct link to Introduction to Generics\">​</a></h3>\n<p>Generics are like passing parameters to types to get a more general type, just like passing parameters to functions.</p>\n<p>As shown below, we get a general generic type T1, which can become T2 type string[] and T3 type number[] through passing parameters:</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string[]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// number[]</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>As above, T is a variable, and we can replace it with any other variable name.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T4</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T5</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T4</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string[]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T6</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T4</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// number[]</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"naming-convention\">Naming Convention<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#naming-convention\" class=\"hash-link\" aria-label=\"Direct link to Naming Convention\" title=\"Direct link to Naming Convention\">​</a></h3>\n<p>In the TypeScript generic variable naming convention, 4 common generic variable names are defaulted. To improve readability, it is not recommended to define them as other variable names.</p>\n<p>T: Represents the first parameter\nK: Represents the key type of the object\nV: Represents the value type of the object\nE: Represents the element type</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"generic-interface\">Generic Interface<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#generic-interface\" class=\"hash-link\" aria-label=\"Direct link to Generic Interface\" title=\"Direct link to Generic Interface\">​</a></h3>\n<p>Generic interfaces, similar to the examples above, pass parameters to interface types:</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">I1</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">I2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I1</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"generic-constraints-extends-operator\">Generic Constraints (extends operator)<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#generic-constraints-extends-operator\" class=\"hash-link\" aria-label=\"Direct link to Generic Constraints (extends operator)\" title=\"Direct link to Generic Constraints (extends operator)\">​</a></h3>\n<p>Sometimes, we need to constrain generic parameters, limiting each variable's type. TypeScript implements type constraints through extends.</p>\n<p>Generic constraint syntax is as follows:</p>\n<p>Generic name extends type\nT extends Length constraints T's type to include the length property, and the type of length must be number.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\">Length</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  length</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(80, 250, 123)\">fn1</span><span class=\"token generic-function generic class-name operator\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token generic-function generic class-name\"> </span><span class=\"token generic-function generic class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token generic-function generic class-name\"> Length</span><span class=\"token generic-function generic class-name operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">arg</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> arg</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">length</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>K is constrained by extends to be a key of T.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(80, 250, 123)\">getProperty</span><span class=\"token generic-function generic class-name operator\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token generic-function generic class-name\"> </span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token generic-function generic class-name\"> </span><span class=\"token generic-function generic class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token generic-function generic class-name\"> </span><span class=\"token generic-function generic class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token generic-function generic class-name\"> </span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token generic-function generic class-name operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">return</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> tsInfo </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"Typescript\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  supersetOf</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"Javascript\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  difficulty</span><span class=\"token operator\">:</span><span class=\"token plain\"> Difficulty</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">Intermediate</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> difficulty</span><span class=\"token operator\">:</span><span class=\"token plain\"> Difficulty </span><span class=\"token operator\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">getProperty</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">tsInfo</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"difficulty\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// OK</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">let</span><span class=\"token plain\"> supersetOf</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(80, 250, 123)\">getProperty</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token plain\">tsInfo</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"superset_of\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// Error</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"default-generic-parameters\">Default Generic Parameters<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#default-generic-parameters\" class=\"hash-link\" aria-label=\"Direct link to Default Generic Parameters\" title=\"Direct link to Default Generic Parameters\">​</a></h3>\n<p>Generic parameters default values, like function parameter default values, are given default values when not passed.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">I4</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name\"> </span><span class=\"token class-name operator\">=</span><span class=\"token class-name\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">S1</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I4</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"123\"</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// By default name: string type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">S2</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">I4</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">123</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conditional-generics\">Conditional Generics<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#conditional-generics\" class=\"hash-link\" aria-label=\"Direct link to Conditional Generics\" title=\"Direct link to Conditional Generics\">​</a></h3>\n<p>Conditional types mean the same as conditional judgments in Js, which is if the condition is met, then xx, otherwise xx.</p>\n<p>Conditional type expression:</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">X</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">Y</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>If T can be assigned to U, then the type is X, otherwise the type is Y.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'string'</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'number'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// 'string'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// 'number</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"generic-inference-infer-operator\">Generic Inference (infer Operator)<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#generic-inference-infer-operator\" class=\"hash-link\" aria-label=\"Direct link to Generic Inference (infer Operator)\" title=\"Direct link to Generic Inference (infer Operator)\">​</a></h3>\n<p>The keyword for generic inference is <code>infer</code>, and the syntax is <code>infer Type</code>.</p>\n<p>It is generally used in combination with generic conditional types. To understand this, consider a practical example:</p>\n<p>If the generic parameter <code>T</code> can be assigned to the type <code>{t: infer Test}</code>, then the type is the inferred type <code>Test</code>, otherwise, the type is <code>string</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Foo</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\">t</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">infer</span><span class=\"token plain\"> Test</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> Test </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The generic parameter <code>number</code> does not have a <code>t</code> property, so the type is <code>string</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">One</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Foo</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The <code>t</code> property of the generic parameter is <code>boolean</code>, so the type is the inferred type <code>boolean</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Two</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Foo</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> t</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">boolean</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// boolean</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The <code>t</code> property of the generic parameter is <code>() =&gt; void</code>, so the type is the inferred type <code>() =&gt; void</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Three</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Foo</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(80, 250, 123)\">t</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">void</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// () =&gt; void</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"generic-utility-types\">Generic Utility Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#generic-utility-types\" class=\"hash-link\" aria-label=\"Direct link to Generic Utility Types\" title=\"Direct link to Generic Utility Types\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"mapped-types\">Mapped Types<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#mapped-types\" class=\"hash-link\" aria-label=\"Direct link to Mapped Types\" title=\"Direct link to Mapped Types\">​</a></h3>\n<p>Mapped types are a kind of generic type that can be used to map an existing object type into a new object type.</p>\n<p>Common syntax for mapped types:</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">-</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">readonly</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">readonly</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"> </span><span class=\"token operator\">-</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">readonly</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>For example, making all properties optional using mapped types:</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Partial</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"partial\">Partial<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#partial\" class=\"hash-link\" aria-label=\"Direct link to Partial\" title=\"Direct link to Partial\">​</a></h3>\n<p>TypeScript has encapsulated some common mapped types, such as <code>Partial</code>, which is used to make all properties of a generic optional.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Partial</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Partial</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> a</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// No error without the name property</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"required\">Required<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#required\" class=\"hash-link\" aria-label=\"Direct link to Required\" title=\"Direct link to Required\">​</a></h3>\n<p><code>Required</code> makes all properties of the generic required.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Required</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Required</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> b</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// TypeScript error, the type \"{}\" lacks the property \"name\", but it is required in \"Required&lt;{ name?: string | undefined; }&gt;\". ts(2741)</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The syntax <code>-?</code> means to remove the optional <code>?</code> property.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"readonly\">Readonly<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#readonly\" class=\"hash-link\" aria-label=\"Direct link to Readonly\" title=\"Direct link to Readonly\">​</a></h3>\n<p><code>Readonly</code> makes all properties of the generic read-only.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Readonly</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> c</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"tj\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">c</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">name </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"tj1\"</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// TypeScript error, cannot assign to \"name\" because it is a read-only property. ts(2540)</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"pick\">Pick<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#pick\" class=\"hash-link\" aria-label=\"Direct link to Pick\" title=\"Direct link to Pick\">​</a></h3>\n<p><code>Pick</code> selects certain properties from a type to create a new type.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Pick</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\">&lt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">    age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"name\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token operator\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/*</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">This is a new type, T4 = {name: string}</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">*/</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> d</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"tj\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"record\">Record<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#record\" class=\"hash-link\" aria-label=\"Direct link to Record\" title=\"Direct link to Record\">​</a></h3>\n<p><code>Record</code> converts keys and values into type <code>T</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Record</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token class-name\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token plain\">key </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> e</span><span class=\"token operator\">:</span><span class=\"token plain\"> Record</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  name</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">'tj'</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">const</span><span class=\"token plain\"> f</span><span class=\"token operator\">:</span><span class=\"token plain\"> Record</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  age</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token number\">11</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p><code>keyof any</code> corresponds to types <code>number | string | symbol</code>, which are the collection of types that can be object keys.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"returntype\">ReturnType<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#returntype\" class=\"hash-link\" aria-label=\"Direct link to ReturnType\" title=\"Direct link to ReturnType\">​</a></h3>\n<p><code>ReturnType</code> gets the return type corresponding to type <code>T</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">ReturnType</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token class-name\"> </span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token class-name operator\">...</span><span class=\"token class-name\">args</span><span class=\"token class-name operator\">:</span><span class=\"token class-name\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token class-name\"> </span><span class=\"token class-name operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">...</span><span class=\"token plain\">args</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">R</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">R</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"exclude\">Exclude<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#exclude\" class=\"hash-link\" aria-label=\"Direct link to Exclude\" title=\"Direct link to Exclude\">​</a></h3>\n<p><code>Exclude</code> removes types in one type that are part of another.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Exclude</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">never</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T0</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\">&lt;</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"a\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"b\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"c\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"a\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// \"b\" | \"c\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\">&lt;</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"a\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"b\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"c\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"a\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"b\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// \"c\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">Function</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string | number</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"extract\">Extract<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#extract\" class=\"hash-link\" aria-label=\"Direct link to Extract\" title=\"Direct link to Extract\">​</a></h3>\n<p><code>Extract</code> extracts type <code>U</code> from <code>T</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Extract</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">U</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">never</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T0</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\">&lt;</span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"a\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"b\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"c\"</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"a\"</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"f\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// \"a\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">Function</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// () =&gt; void</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"omit\">Omit<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#omit\" class=\"hash-link\" aria-label=\"Direct link to Omit\" title=\"Direct link to Omit\">​</a></h3>\n<p><code>Omit</code> constructs a new type using all properties from type <code>T</code> except those in type <code>K</code>.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Omit</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token class-name\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token class-name\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\">&lt;</span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">K</span><span class=\"token operator\">&gt;&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\">Todo</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  title</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  completed</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\">  description</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">TodoPreview</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Omit</span><span class=\"token operator\">&lt;</span><span class=\"token plain\">Todo</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(255, 121, 198)\">\"description\"</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">/*</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">{</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">title: string;</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">completed: boolean;</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">}</span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">*/</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"nonnullable\">NonNullable<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#nonnullable\" class=\"hash-link\" aria-label=\"Direct link to NonNullable\" title=\"Direct link to NonNullable\">​</a></h3>\n<p><code>NonNullable</code> is used to filter out <code>null</code> and <code>undefined</code> from a type.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">NonNullable</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">null</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">undefined</span><span class=\"token plain\"> </span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">never</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T0</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> NonNullable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">undefined</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string | number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> NonNullable</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">string</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">[</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">null</span><span class=\"token plain\"> </span><span class=\"token operator\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">undefined</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// string[]</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"parameters\">Parameters<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#parameters\" class=\"hash-link\" aria-label=\"Direct link to Parameters\" title=\"Direct link to Parameters\">​</a></h3>\n<p><code>Parameters</code> is used to get the tuple type composed of a function's parameter types.</p>\n<div class=\"language-typescript codeBlockContainer_USIv theme-code-block\" style=\"--prism-color:#F8F8F2;--prism-background-color:#282A36\"><div class=\"codeBlockContent_PMfr\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_IHkF thin-scrollbar\" style=\"color:#F8F8F2;background-color:#282A36\"><code class=\"codeBlockLines_THA1\"><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\">Parameters</span><span class=\"token class-name operator\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token class-name\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token class-name\"> </span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token class-name operator\">...</span><span class=\"token class-name\">args</span><span class=\"token class-name operator\">:</span><span class=\"token class-name\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token class-name\"> </span><span class=\"token class-name operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token operator\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token operator\">...</span><span class=\"token plain\">args</span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">any</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token operator\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(189, 147, 249)\">P</span><span class=\"token plain\"> </span><span class=\"token operator\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">never</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">A</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">(</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">void</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// []</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">B</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(189, 147, 249)\">Array</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">isArray</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// [any]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">C</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> parseInt</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// [string, (number | undefined)?]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#F8F8F2\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(189, 147, 249)\">D</span><span class=\"token plain\"> </span><span class=\"token operator\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\" style=\"color:rgb(189, 147, 249);font-style:italic\">typeof</span><span class=\"token plain\"> Math</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">.</span><span class=\"token plain\">max</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(248, 248, 242)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(98, 114, 164)\">// number[]</span><br></span></code></pre><div class=\"buttonGroup_uxJT\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_LZ6a\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_H1v1\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_J5e4\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>Bookmark this now!</p>",
            "url": "https://illacloud.github.io/illa-website/blog/typescript-most-practical-features-compilation",
            "title": "Most Practical TypeScript Features",
            "summary": "The importance of type programming in projects goes without saying. This article summarizes some common features of TypeScript to help everyone familiarize and master the use of TypeScript.",
            "date_modified": "2024-01-25T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "typescript"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/it-support",
            "content_html": "<p>IT Support is divided into Technical Support and Program Support.</p>\n<p>Technical Support requires technicians with a broad knowledge structure. Companies of a certain size all have an IT department, commonly referred to as network management, but not all companies have Program Support.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"job-content-of-it-support\">Job Content of IT Support<a href=\"https://illacloud.github.io/illa-website/blog/it-support#job-content-of-it-support\" class=\"hash-link\" aria-label=\"Direct link to Job Content of IT Support\" title=\"Direct link to Job Content of IT Support\">​</a></h2>\n<p>In ordinary companies, the IT department's Technical Support is responsible for managing the company's information system, database, machinery hardware equipment, etc. If the company needs any special software or to update a new system, it is usually done by forming a team with programmers from a technology company and the company's own Program Support.</p>\n<p>Technical Support is more like a consultant, guiding the more macroscopic direction, so they generally know a lot.</p>\n<p>Program Support specializes more in coding.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"recommended-tools\">Recommended Tools<a href=\"https://illacloud.github.io/illa-website/blog/it-support#recommended-tools\" class=\"hash-link\" aria-label=\"Direct link to Recommended Tools\" title=\"Direct link to Recommended Tools\">​</a></h2>\n<p>In the course of IT Support work, we definitely need many tools to help us better complete our tasks, as every IT has many common needs. For example:</p>\n<ul>\n<li>Handling work orders</li>\n<li>Project management</li>\n<li>Code management</li>\n<li>Document management</li>\n<li>Notifications</li>\n<li>Meetings</li>\n<li>...</li>\n</ul>\n<p>Here are some recommended tools to help everyone better complete their work.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud\">ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/it-support#illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud\" title=\"Direct link to ILLA Cloud\">​</a></h2>\n<p>If you're considering building a business-logic oriented tool and only require a beautiful UI without pursuing complex animations and flashy pages, ILLA Cloud is recommended for development and construction.</p>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>\n<ul>\n<li>Web &amp; App Admin Panel</li>\n<li>Data Dashboard</li>\n<li>Customized B2B Tools</li>\n<li>CRM</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>ILLA Cloud lets you quickly build tools through drag-and-drop without needing to write code, boosting your work efficiency by 10 times. It also natively supports team collaboration, allowing you and your colleagues to edit and build together.</p>\n<p>ILLA Cloud also features connector capabilities, enabling quick connections to other SaaS tools you use. It supports scheduled tasks, Webhooks, parameter passing, and more.</p>\n<p>ILLA Cloud also includes an AI Agent feature, helping you quickly build AI-driven tools, such as text analysis, voice analysis, image analysis, and more.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/it-support/agent.png\" alt=\"agent\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"linear\">Linear<a href=\"https://illacloud.github.io/illa-website/blog/it-support#linear\" class=\"hash-link\" aria-label=\"Direct link to Linear\" title=\"Direct link to Linear\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/it-support/linear.png\" alt=\"linear\" class=\"img_CfaS\"></p>\n<p>Linear is a project management tool that helps streamline software projects, sprints, tasks, and bug tracking. It is a simple, fast, and powerful tool built for high-performance teams.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/it-support#advantages\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<ol>\n<li>\n<p><strong>Streamlined Project Management</strong>: Linear's focus on streamlining software projects suggests a user-friendly interface that simplifies complex project management tasks, making it easier for teams to follow through on project goals and deadlines.</p>\n</li>\n<li>\n<p><strong>Efficient Sprint and Task Management</strong>: With features tailored for managing sprints and tasks, Linear likely offers effective tools for Agile methodologies, facilitating better planning, tracking, and execution of software development cycles.</p>\n</li>\n<li>\n<p><strong>Effective Bug Tracking</strong>: The emphasis on bug tracking indicates that Linear provides robust tools for identifying, documenting, and resolving software bugs, which is crucial for maintaining software quality and reliability.</p>\n</li>\n<li>\n<p><strong>Speed and Simplicity</strong>: Being described as simple and fast, Linear might offer quick setup and ease of use, which can be particularly beneficial for teams looking to implement a tool without a steep learning curve.</p>\n</li>\n<li>\n<p><strong>Suitability for High-Performance Teams</strong>: Built for high-performance teams, Linear is likely optimized for efficiency and scalability, supporting teams in managing complex projects without performance degradation.</p>\n</li>\n</ol>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/it-support#disadvantages\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<ol>\n<li>\n<p><strong>Potential Over-Simplification</strong>: While simplicity is an advantage, it might also mean that Linear lacks certain advanced features required by very large or complex projects, possibly limiting its utility for some specialized applications.</p>\n</li>\n<li>\n<p><strong>Focus on Software Projects</strong>: Linear’s specific focus on software projects suggests it may not be as well-suited for other types of project management, limiting its versatility for non-software teams.</p>\n</li>\n<li>\n<p><strong>Learning Curve for New Users</strong>: Despite its simplicity, new users, especially those not familiar with Agile methodologies, might still face a learning curve in understanding how to best utilize the tool for their specific needs.</p>\n</li>\n<li>\n<p><strong>Limited Customization</strong>: Fast and simple tools sometimes offer limited customization options, which might not meet the needs of teams that require highly tailored project management solutions.</p>\n</li>\n<li>\n<p><strong>Dependence on Team Discipline</strong>: The effectiveness of any project management tool, including Linear, often depends on the team's discipline in using it consistently and correctly, which can be a challenge in some organizational cultures.</p>\n</li>\n</ol>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"gitlab\">Gitlab<a href=\"https://illacloud.github.io/illa-website/blog/it-support#gitlab\" class=\"hash-link\" aria-label=\"Direct link to Gitlab\" title=\"Direct link to Gitlab\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/it-support/gitlab.png\" alt=\"gitlab\" class=\"img_CfaS\"></p>\n<p>GitLab is a complete DevOps platform, delivered as a single application. It enables Concurrent DevOps to make the software lifecycle 200% faster, radically improving the speed of business.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-1\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/it-support#advantages-1\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<ol>\n<li>\n<p><strong>Integrated DevOps Workflow</strong>: As a single application offering a complete DevOps solution, GitLab provides an integrated environment for all stages of software development, from planning to monitoring, which can greatly simplify the workflow.</p>\n</li>\n<li>\n<p><strong>Increased Efficiency</strong>: GitLab's emphasis on Concurrent DevOps suggests it supports simultaneous actions in the development cycle, which can lead to a 200% faster software lifecycle, thereby accelerating the pace of business.</p>\n</li>\n<li>\n<p><strong>All-in-One Platform</strong>: The platform's all-in-one nature means that teams can avoid the hassle of integrating multiple separate tools, which can reduce complexity and potential compatibility issues.</p>\n</li>\n<li>\n<p><strong>Streamlined Collaboration</strong>: GitLab likely facilitates better collaboration among team members by providing a unified platform for code repository, issue tracking, CI/CD, and more, which can enhance teamwork and productivity.</p>\n</li>\n<li>\n<p><strong>Visibility and Transparency</strong>: Having all aspects of the DevOps cycle in one place can provide better visibility and transparency across the development process, enabling more informed decision-making.</p>\n</li>\n</ol>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-1\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/it-support#disadvantages-1\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<ol>\n<li>\n<p><strong>Learning Curve</strong>: The comprehensive nature of GitLab may present a steep learning curve, especially for teams not accustomed to such an all-encompassing platform or those transitioning from simpler tools.</p>\n</li>\n<li>\n<p><strong>Resource Intensiveness</strong>: Given its wide range of functionalities, GitLab could be resource-intensive, requiring significant server resources, which might be a challenge for smaller organizations or teams with limited IT infrastructure.</p>\n</li>\n<li>\n<p><strong>Overwhelming for Small Projects</strong>: For smaller projects or teams, the extensive features of GitLab might be more than what is necessary, potentially leading to underutilization of the platform.</p>\n</li>\n<li>\n<p><strong>Potential for Vendor Lock-in</strong>: Relying on a single platform for all DevOps needs may lead to vendor lock-in, where teams become dependent on GitLab and might face challenges if they decide to switch to another tool in the future.</p>\n</li>\n<li>\n<p><strong>Cost Considerations</strong>: While GitLab offers a variety of plans, including a free tier, the more advanced features, essential for larger teams and complex projects, are often part of their paid plans, which could be a significant expense for some organizations.</p>\n</li>\n</ol>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"notion\">Notion<a href=\"https://illacloud.github.io/illa-website/blog/it-support#notion\" class=\"hash-link\" aria-label=\"Direct link to Notion\" title=\"Direct link to Notion\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/it-support/notion.png\" alt=\"notion\" class=\"img_CfaS\"></p>\n<p>Notion is an all-in-one workspace for your notes, tasks, wikis, and databases. It is a simple, fast, and powerful tool built for high-performance teams.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-2\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/it-support#advantages-2\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<ol>\n<li>\n<p><strong>Versatility</strong>: As an all-in-one workspace, Notion offers a versatile platform where you can manage a variety of content types like notes, tasks, wikis, and databases. This versatility can streamline different aspects of work within a single application.</p>\n</li>\n<li>\n<p><strong>Ease of Use</strong>: Described as simple and fast, Notion likely has a user-friendly interface, allowing for quick adoption and ease of use. This can reduce the learning curve and increase productivity.</p>\n</li>\n<li>\n<p><strong>Customizability</strong>: Notion's platform generally allows for a high degree of customization, enabling users to tailor it to their specific workflow needs, whether for individual use or team collaboration.</p>\n</li>\n<li>\n<p><strong>Collaboration Features</strong>: Being built for high-performance teams, Notion is expected to have robust collaboration features, facilitating effective teamwork, information sharing, and project management.</p>\n</li>\n<li>\n<p><strong>Integration Capabilities</strong>: Notion often integrates well with other tools, which is beneficial for teams that use a variety of applications and services for their work.</p>\n</li>\n</ol>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-2\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/it-support#disadvantages-2\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<ol>\n<li>\n<p><strong>Potentially Overwhelming for New Users</strong>: The vast array of features and customization options in Notion can be overwhelming for new users, particularly those who are looking for a more straightforward, plug-and-play type solution.</p>\n</li>\n<li>\n<p><strong>Limited Offline Capabilities</strong>: Notion's functionality can be limited when offline, which could be a drawback for users who need to access their workspace in areas with poor or no internet connectivity.</p>\n</li>\n<li>\n<p><strong>Performance Issues with Large Databases</strong>: As databases grow in size, some users have reported performance issues with Notion, such as slower loading times and lag, which can hinder efficiency.</p>\n</li>\n<li>\n<p><strong>Limited Export Options</strong>: While Notion is great for accumulating and organizing information, exporting this data out of Notion can sometimes be a challenge, potentially causing issues with data portability.</p>\n</li>\n<li>\n<p><strong>Cost Factor for Premium Features</strong>: While Notion offers a free tier, more advanced features and larger usage limits are gated behind their paid plans, which could be a consideration for budget-conscious individuals or small teams.</p>\n</li>\n</ol>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-flow\">ILLA Flow<a href=\"https://illacloud.github.io/illa-website/blog/it-support#illa-flow\" class=\"hash-link\" aria-label=\"Direct link to ILLA Flow\" title=\"Direct link to ILLA Flow\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/it-support/connector.png\" alt=\"connector\" class=\"img_CfaS\"></p>\n<p>ILLA Flow is a low-code workflow tool that helps you automate your business processes. It is a simple, fast, and powerful tool built for high-performance teams.</p>\n<p>You can build your own workflow through a drag-and-drop interface, and then execute your workflow by scheduling triggers or Webhook triggers.</p>\n<p>The smooth drag-and-drop experience allows you to quickly build workflows without worrying about any integration issues. The entire system is driven by JavaScript, ensuring flexibility while also being developer-friendly.</p>\n<p>ILLA Flow supports multiple trigger types, including scheduled triggers and Webhook triggers.</p>\n<p>We use ILLA Flow to do lots of things, like:</p>\n<ul>\n<li>Send a message to Slack when a new user registers</li>\n<li>Report the number of stars on GitHub every day</li>\n<li>Book a meeting room every day</li>\n<li>...</li>\n</ul>\n<p>Our engineers use ILLA Flow to automate many tasks, like:</p>\n<ul>\n<li>Read some business data from databases and send to Slack every day</li>\n<li>Build a CI/CD report system</li>\n<li>Send email when some warning occurs</li>\n<li>...</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/it-support#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>For IT Support, simple and easy-to-use tools are key to enhancing work efficiency. Choosing the right tools for your needs is crucial. Hopefully, everyone can find useful tools and become an outstanding IT Support.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/it-support",
            "title": "Best tools for IT Support",
            "summary": "In ordinary companies, the IT department's Technical Support is responsible for managing the company's information system, database",
            "date_modified": "2024-01-23T20:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "workflow"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool",
            "content_html": "<p>In recent decades, application development has been the exclusive domain of IT programmers, but this might change in the future!</p>\n<p>Considering the increasingly competitive business demands, the only way for enterprises to develop is to increase their business capabilities and accelerate delivery speeds without incurring additional costs.</p>\n<p>To address the digital challenges faced by enterprises, Citizen Development (CD) paves the way for non-technical business users (also known as Citizen Developers). Using IT-approved Low Code/No Code (LCNC) platforms, it is possible to intuitively build enterprise applications in an efficient, flexible, and user-friendly environment.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"the-value-of-citizen-development\">The Value of Citizen Development<a href=\"https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool#the-value-of-citizen-development\" class=\"hash-link\" aria-label=\"Direct link to The Value of Citizen Development\" title=\"Direct link to The Value of Citizen Development\">​</a></h2>\n<p>According to the Project Management Institute (PMI), Citizen Development will be a disruptor of this new norm, and many low-code/no-code platforms have already demonstrated this to their clients and partners. In practical use, LCNC has proven its ability to significantly reduce the complexity of application development at a minimal cost. So far, many organizations have started adopting citizen development in their operations to stimulate rapid change and create a unique footprint in the community, thereby benefiting overall productivity. Particularly in today's digital realm, low-code/no-code plays a key role in helping businesses leverage the limitless potential offered by this new digital space and easily spark innovation.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"recommended-tools\">Recommended Tools<a href=\"https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool#recommended-tools\" class=\"hash-link\" aria-label=\"Direct link to Recommended Tools\" title=\"Direct link to Recommended Tools\">​</a></h2>\n<p>As a Citizen Developer with basic computer skills, you'll need various tools to assist in your work. Here are some recommended tools to make your job more efficient.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud\">ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool#illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud\" title=\"Direct link to ILLA Cloud\">​</a></h3>\n<p>If you're considering building a business-logic oriented tool and only require a beautiful UI without pursuing complex animations and flashy pages, ILLA Cloud is recommended for development and construction.</p>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>\n<ul>\n<li>Web &amp; App Admin Panel</li>\n<li>Data Dashboard</li>\n<li>Customized B2B Tools</li>\n<li>CRM</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>ILLA Cloud lets you quickly build tools through drag-and-drop without needing to write code, boosting your work efficiency by 10 times. It also natively supports team collaboration, allowing you and your colleagues to edit and build together.</p>\n<p>ILLA Cloud also features connector capabilities, enabling quick connections to other SaaS tools you use. It supports scheduled tasks, Webhooks, parameter passing, and more.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/connector.png\" alt=\"connector\" class=\"img_CfaS\"></p>\n<p>ILLA Cloud also includes an AI Agent feature, helping you quickly build AI-driven tools, such as text analysis, voice analysis, image analysis, and more.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/agent.png\" alt=\"agent\" class=\"img_CfaS\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"webflow\">Webflow<a href=\"https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool#webflow\" class=\"hash-link\" aria-label=\"Direct link to Webflow\" title=\"Direct link to Webflow\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/webflow.png\" alt=\"webflow\" class=\"img_CfaS\"></p>\n<p>If you're considering building a user-facing tool with high UI requirements, seeking complex animations and cool pages, Webflow is recommended for development and construction.</p>\n<p>Webflow naturally supports a plethora of animation functions and powerful UI configurations, allowing you to build stunning pages in a very short time. It also natively adapts to mobile devices.</p>\n<p>Webflow's community has a wealth of templates supporting various business needs, like e-commerce, blogs, corporate websites, and more.</p>\n<p>Webflow also includes a CRM backend for managing website visitors, eliminating the need for secondary development for basic management tasks and enabling quick use.</p>\n<p>Of course, Webflow also supports hosting services without any operational costs.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"supabase\">Supabase<a href=\"https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool#supabase\" class=\"hash-link\" aria-label=\"Direct link to Supabase\" title=\"Direct link to Supabase\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-citizen-developer-tool/supabase.png\" alt=\"supabase\" class=\"img_CfaS\"></p>\n<p>When you've built an online site, you'll use Webflow for the user-facing parts and ILLA Cloud for internal tools. But you're still missing an important piece.</p>\n<p>For the data in your business development, you need a place to store it.</p>\n<p>Supabase is recommended for storage, offering the following advantages:</p>\n<ul>\n<li>Developer-friendly, catering to both super complex and simple business needs.</li>\n<li>Scalable, dynamically expanding with your business, so you don't have to worry about technical issues due to rapid business growth.</li>\n<li>Supports various SDKs for compatibility with different technologies.</li>\n<li>Easy operations using SQL, as Supabase is based on PostgreSQL, allowing for quick data manipulation.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>For Citizen Developers, simple and easy-to-use tools are key to enhancing work efficiency. Choosing the right tools for your needs is crucial. Hopefully, everyone can find useful tools and become an outstanding Citizen Developer.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/best-citizen-developer-tool",
            "title": "The Best Tools for Citizen Developers in 2024",
            "summary": "In recent decades, application development has been the exclusive domain of IT programmers, but this might change in the future!",
            "date_modified": "2024-01-23T11:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "citizen developer",
                "citizen development",
                "citizen developer tool"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/appsmith-vs-retool",
            "content_html": "<p>In the ever-evolving landscape of low-code development platforms, Appsmith and Retool have emerged as strong contenders, each offering unique features and capabilities. These platforms aim to simplify application development and empower organizations to build custom internal tools efficiently. In this comprehensive comparison, we'll explore the strengths and weaknesses of both platforms and introduce a top-tier alternative, ILLA Cloud, to help you make an informed choice for your low-code development needs.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud-the-best-software-development-tool\">ILLA Cloud: The best software development tool<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#illa-cloud-the-best-software-development-tool\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud: The best software development tool\" title=\"Direct link to ILLA Cloud: The best software development tool\">​</a></h2>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>\n<ul>\n<li>Web &amp; App Admin Panel</li>\n<li>Data Dashboard</li>\n<li>Customized B2B Tools</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>Compared to building with a component library, ILLA Cloud enables 10x faster tool construction and supports collaborative editing within teams.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"appsmith\">Appsmith<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#appsmith\" class=\"hash-link\" aria-label=\"Direct link to Appsmith\" title=\"Direct link to Appsmith\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/appsmith.png\" alt=\"appsmith\" class=\"img_CfaS\"></p>\n<p>Appsmith, an India-based open-source platform, has quickly gained recognition in the low-code development arena. It boasts feature parity with many aspects of the Retool application builder, making it a formidable competitor. However, it's essential to delve into the specific characteristics that set Appsmith apart:</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-of-appsmith\">Advantages of Appsmith:<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#advantages-of-appsmith\" class=\"hash-link\" aria-label=\"Direct link to Advantages of Appsmith:\" title=\"Direct link to Advantages of Appsmith:\">​</a></h3>\n<ul>\n<li>Open Source Advantage: Appsmith is an open-source platform, providing developers with access to the platform's source code. This open nature encourages collaboration and customization, making it a preferred choice for those who require greater control over their development environment.</li>\n<li>Cloud and On-Premise Deployment: Appsmith offers flexibility by supporting both cloud and fully on-premise deployments. This duality enables organizations to choose the hosting option that aligns with their security and compliance requirements.</li>\n<li>Active Developer Community: Appsmith enjoys a growing developer community on platforms like Github. This community support leads to continuous improvements, timely bug fixes, and the development of new features, ensuring the platform remains current and responsive to user needs.</li>\n<li>Extensive Integration Options: Appsmith facilitates integration with a wide array of databases and APIs, enabling businesses to connect to their data sources seamlessly. This versatility ensures that your applications can interact with the necessary data resources.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-of-appsmith\">Disadvantages of Appsmith:<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#disadvantages-of-appsmith\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages of Appsmith:\" title=\"Direct link to Disadvantages of Appsmith:\">​</a></h3>\n<p>Lacks Automated Workflows: One notable limitation is the absence of support for automated workflows or scheduled jobs within Appsmith. This could be a drawback for organizations requiring complex automation processes in their internal tools.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"retool-a-pioneer-in-internal-tooling\">Retool: A Pioneer in Internal Tooling<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#retool-a-pioneer-in-internal-tooling\" class=\"hash-link\" aria-label=\"Direct link to Retool: A Pioneer in Internal Tooling\" title=\"Direct link to Retool: A Pioneer in Internal Tooling\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/retool.png\" alt=\"retool\" class=\"img_CfaS\"></p>\n<p>Retool is a well-established development platform for creating custom internal software. It offers an intuitive drag-and-drop application builder and a library of pre-built UI components. However, it's essential to recognize both its strengths and shortcomings:</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-of-retool\">Advantages of Retool:<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#advantages-of-retool\" class=\"hash-link\" aria-label=\"Direct link to Advantages of Retool:\" title=\"Direct link to Advantages of Retool:\">​</a></h3>\n<ul>\n<li>Drag &amp; Drop Application Builder: Retool provides an intuitive drag-and-drop application builder, making it accessible for users with varying technical expertise.</li>\n<li>Integration Library: With an extensive library of integrations, Retool simplifies the process of connecting to databases and APIs, allowing businesses to access and manipulate their data efficiently.</li>\n<li>Granular Permissions: Retool supports role-based access controls, providing a secure environment and ensuring that users have appropriate access to tools and data.</li>\n<li>Enterprise Features: Retool caters to enterprise needs by offering features such as single sign-on (SSO), audit logging, and dedicated enterprise support.</li>\n<li>Native Mobile Apps: Retool Mobile provides a dedicated solution for building native iOS and Android mobile apps within the Retool environment.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages-of-retool\">Disadvantages of Retool:<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#disadvantages-of-retool\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages of Retool:\" title=\"Direct link to Disadvantages of Retool:\">​</a></h3>\n<ul>\n<li>Limited Extensibility with Code: Retool's code extensibility is restricted, primarily supporting JavaScript. This limitation can pose challenges for developers who require more diverse coding options.</li>\n<li>Poor Performance: Users often report performance issues with Retool applications due to browser-based code execution, single-step queries, and a lack of global edge caching.</li>\n<li>Limited Workflows &amp; Scheduled Jobs: Retool's workflow offering is still in beta and lacks full functionality. Additionally, it is only available on Retool Cloud, limiting its accessibility to self-hosted customers.</li>\n<li>SQL-Only Generative AI: Retool's generative AI functionality is limited to SQL, which may not fully meet developers' requirements for code generation and optimization in various languages and use cases.</li>\n<li>Legacy On-Premise Deployment: Retool's on-premise deployment model is resource-intensive, making it complex for businesses to maintain and update. This can divert resources away from tool development.</li>\n<li>Expensive Pricing: Retool employs an inflexible pricing model with hefty platform fees, making it expensive for many organizations.</li>\n<li>Slow Feature Rollouts: New features are sometimes slow to roll out, particularly for on-premise customers, leading to delays in leveraging the latest technologies.</li>\n<li>Closed Source Code: Retool is closed-source, limiting code audits and extensibility options.</li>\n<li>US-Cloud Only: Retool Cloud is hosted in the US, which may result in performance degradation for users and data centers outside the US.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud-offers-the-best-of-both-worlds\">ILLA Cloud offers the best of both worlds<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#illa-cloud-offers-the-best-of-both-worlds\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud offers the best of both worlds\" title=\"Direct link to ILLA Cloud offers the best of both worlds\">​</a></h2>\n<p>ILLA is one of the fastest platforms for internal tool development. It saves developers precious time on web design and other aspects of their job. One of the main reasons developers are increasingly choosing ILLA is the library. The platform has conjured a rich collection of code components that you can simply drag and drop and build complex applications within minutes.</p>\n<p>You can also use application programming interfaces to join ILLA with a database of your choice. The platform can excellently integrate back-end and front-end data. As a result, developers can make vast information interactions possible with basic data calls.</p>\n<p>Any developer will love ILLA for two reasons-freedom and the chance to work simultaneously with other developers. Firstly, developers can write JavaScript wherever they want. This permits more flexibility in their job and increased variety in results.</p>\n<p>Secondly, developers can share links in ILLA Builder with other professionals in real time. Consequently, they can edit and comment on each other’s work as they go along. In other words, developers get to work in a fun and collaborative workspace. Naturally, this yields faster and improved results.</p>\n<p>Lastly, developers can always carry their work with them when using ILLA cloud. Just one click from any device will give them access to the cloud and bring them to ILLA’s user interface.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"key-features-of-illa\">Key features of ILLA<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#key-features-of-illa\" class=\"hash-link\" aria-label=\"Direct link to Key features of ILLA\" title=\"Direct link to Key features of ILLA\">​</a></h3>\n<p>Here are the key features of ILLA you must know:</p>\n<ul>\n<li>ILLA has a ready-to-use library for React components.</li>\n<li>Most amazingly, the ILLA design tool has a typescript typing feature and supports predictable static typing.</li>\n<li>ILLA Design provides quick and easy import, which helps in improving developers’ productivity.</li>\n<li>You can access beautifully designed and powerful themes and components.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"upgraded-illa-features\">Upgraded ILLA features<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#upgraded-illa-features\" class=\"hash-link\" aria-label=\"Direct link to Upgraded ILLA features\" title=\"Direct link to Upgraded ILLA features\">​</a></h3>\n<p>Here are some upgraded features of ILLA that you must know:</p>\n<ul>\n<li>Quick integration with any data source</li>\n<li>You can connect ILLA to any mainstream database or any other data source. This tool allows you to get data from the backend using front-end components.</li>\n<li>Real-time collaboration for enhanced efficiency</li>\n<li>ILLA Builder allows developers to work collaboratively on a project. They can create and share links to different developers to co-edit their tools and communicate with other team members in real time.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"responsive-ui-library-to-meet-your-needs\">Responsive UI library to meet your needs<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#responsive-ui-library-to-meet-your-needs\" class=\"hash-link\" aria-label=\"Direct link to Responsive UI library to meet your needs\" title=\"Direct link to Responsive UI library to meet your needs\">​</a></h3>\n<p>ILLA Builder also has numerous components to meet every developer’s needs efficiently. So, developers can access the drag-and-drop builder to develop their desired internal tools quickly.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/appsmith-vs-retool#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In conclusion, Retool and Appsmith are both excellent low-code platforms that can help you build applications quickly and efficiently. However, they each have their own strengths and weaknesses, so it’s important to consider your needs before deciding which one is right for you. If you’re looking for a more hands-on approach with powerful management features, then Tooljet may be the better option for you. On the other hand, if you want a user-friendly platform that doesn’t require any coding experience, then Appsmith may be the better choice. Ultimately, it all comes down to what type of developer you are and what type of application you want to build.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/appsmith-vs-retool",
            "title": "Appsmith vs Retool: Which open-source low-code platform is better?",
            "summary": "In the ever-evolving landscape of low-code development platforms, Appsmith and Retool have emerged as strong contenders, each offering unique features and capabilities.",
            "date_modified": "2024-01-23T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "tooljet",
                "appsmith",
                "retool"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith",
            "content_html": "<p>If you’re considering using a low-code development platform to build applications, you may wonder whether Tooljet or Appsmith is the better option. Both are open-source platforms with various features to choose from, but they each have their own strengths and weaknesses. This blog post will compare Tooljet and Appsmith to help you decide which is suitable for your needs.</p>\n<p>Tooljet is excellent for those who prefer working with visual elements and drag-and-drop tools. Its user interface allows you to quickly create applications by simply dragging and dropping different components into place, making it easy and fast to build applications from the ground up. Additionally, Tooljet has powerful management features that allow you to collaborate with other users in real-time and monitor project progress.</p>\n<p>Appsmith is an excellent option for developers who want more control over their applications. It offers a wide range of great features, such as API integration, triggers, and scripts that can add complex functionality to your apps. Moreover, Appsmith also provides an intuitive code editor, making it easy to write custom code in your projects if needed.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud-the-best-software-development-tool\">ILLA Cloud: The best software development tool<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#illa-cloud-the-best-software-development-tool\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud: The best software development tool\" title=\"Direct link to ILLA Cloud: The best software development tool\">​</a></h2>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>\n<ul>\n<li>Web &amp; App Admin Panel</li>\n<li>Data Dashboard</li>\n<li>Customized B2B Tools</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>Compared to building with a component library, ILLA Cloud enables 10x faster tool construction and supports collaborative editing within teams.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tooljet-and-appsmith-are-two-popular-software-development-tools\">Tooljet and Appsmith are two popular software development tools.<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#tooljet-and-appsmith-are-two-popular-software-development-tools\" class=\"hash-link\" aria-label=\"Direct link to Tooljet and Appsmith are two popular software development tools.\" title=\"Direct link to Tooljet and Appsmith are two popular software development tools.\">​</a></h2>\n<p>Tooljet and Appsmith are two extremely powerful software development tools that enable developers to create applications with data sources quickly and efficiently without too much hand coding. Both tools use intuitive drag-and-drop elements, code tools, data connectors, and a visual development process to help streamline business process management.</p>\n<p>With their extensive feature sets, both Tooljet and Appsmith have successfully served many developers as they continue to rapidly develop data-driven applications. They prove time and time again that they are essential tools for any software developer with coding knowledge looking to create advanced data-driven applications in just a few simple steps.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tooljet---better-for-those-who-want-more-control-over-their-project\">Tooljet - better for those who want more control over their project<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#tooljet---better-for-those-who-want-more-control-over-their-project\" class=\"hash-link\" aria-label=\"Direct link to Tooljet - better for those who want more control over their project\" title=\"Direct link to Tooljet - better for those who want more control over their project\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/tooljet.png\" alt=\"tooljet\" class=\"img_CfaS\"></p>\n<p>Both Tooljet and Appsmith are powerful for citizen developers to do rapid application development. Tooljet provides flexibility with a more hands-on approach, allowing business users the control they need to create total admin panels with custom UI components.</p>\n<p>It offers an intuitive user interface that allows users to rapidly design, develop, and manage applications through a series of drag-and-drop tools, visual elements, and data sources. Beyond its easy UI, Tooljet also boasts powerful features such as real-time collaboration, comprehensive project management capabilities, and built-in components.</p>\n<p>This comprehensive suite of features makes it easier for developers to quickly build robust apps without worrying about coding from scratch. Tooljet also supports various coding languages, including Java, JavaScript, Python, and Ruby, giving developers even more freedom when creating custom applications. Additionally, Tooljet has extensive documentation for users looking for additional support when working on their projects.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"pros-of-tooljet\">Pros of Tooljet:<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#pros-of-tooljet\" class=\"hash-link\" aria-label=\"Direct link to Pros of Tooljet:\" title=\"Direct link to Pros of Tooljet:\">​</a></h3>\n<ul>\n<li>Intuitive and easy-to-use user interface that makes it simple to create applications quickly with drag-and-drop tools</li>\n<li>Powerful management features to help collaborate with other users in real-time and monitor project progress</li>\n<li>Built-in analytics and reporting tools to measure the performance, usage, and reliability of applications</li>\n<li>A feature-rich platform that supports webhooks, API integration, and custom code for added complexity</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"cons-of-tooljet\">Cons of Tooljet:<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#cons-of-tooljet\" class=\"hash-link\" aria-label=\"Direct link to Cons of Tooljet:\" title=\"Direct link to Cons of Tooljet:\">​</a></h3>\n<ul>\n<li>The visual approach means it can be difficult to troubleshoot problems without an understanding of the underlying code</li>\n<li>Visual elements are limited, which may not provide enough flexibility for more complex projects</li>\n<li>Limited support for third-party integrations, which could restrict the use cases for certain applications</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"appsmith---more-user-friendly\">Appsmith - more user-friendly<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#appsmith---more-user-friendly\" class=\"hash-link\" aria-label=\"Direct link to Appsmith - more user-friendly\" title=\"Direct link to Appsmith - more user-friendly\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/appsmith.png\" alt=\"appsmith\" class=\"img_CfaS\"></p>\n<p>On the other hand, Appsmith is ideal for those who don’t have coding experience but still want to craft an app - it makes app development more accessible than ever with user-friendly tools that require no technical knowledge. Appsmith is an intuitive, user-friendly low-code platform for non-technical users to build robust data-driven applications quickly. With a simple drag-and-drop interface, you can easily create custom UI components and manage your projects with comprehensive project management capabilities.</p>\n<p>Appsmith also offers advanced security features such as role-based access control to ensure that only authorized personnel access sensitive information. Additionally, Appsmith integrates with third-party services and supports webhooks, API integration, and custom code, which makes it a great choice for creating robust applications without the need to code from scratch.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"pros-of-appsmith\">Pros of Appsmith:<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#pros-of-appsmith\" class=\"hash-link\" aria-label=\"Direct link to Pros of Appsmith:\" title=\"Direct link to Pros of Appsmith:\">​</a></h3>\n<ul>\n<li>Highly customizable features so developers can add complex functionality to their apps easily</li>\n<li>Intuitive code editor makes it easy to write custom code into your projects if needed</li>\n<li>Supports multiple programming languages such as JavaScript, HTML5, CSS3, TypeScript, etc.</li>\n<li>Flexible API integration allows users to connect various services together quickly and securely</li>\n<li>A wide range of predefined templates and components make it easier to create new applications from scratch</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"cons-of-appsmith\">Cons of Appsmith:<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#cons-of-appsmith\" class=\"hash-link\" aria-label=\"Direct link to Cons of Appsmith:\" title=\"Direct link to Cons of Appsmith:\">​</a></h3>\n<ul>\n<li>Not as beginner-friendly compared to other low-code platforms, which could limit its usefulness for certain users</li>\n<li>Code changes can be tricky as they require manual adjustments every time they are made</li>\n<li>More expensive than Tooljet, which may not make it a viable option for some budgets</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud-offers-the-best-of-both-worlds\">ILLA Cloud offers the best of both worlds<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#illa-cloud-offers-the-best-of-both-worlds\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud offers the best of both worlds\" title=\"Direct link to ILLA Cloud offers the best of both worlds\">​</a></h2>\n<p>ILLA is one of the fastest platforms for internal tool development. It saves developers precious time on web design and other aspects of their job. One of the main reasons developers are increasingly choosing ILLA is the library. The platform has conjured a rich collection of code components that you can simply drag and drop and build complex applications within minutes.</p>\n<p>You can also use application programming interfaces to join ILLA with a database of your choice. The platform can excellently integrate back-end and front-end data. As a result, developers can make vast information interactions possible with basic data calls.</p>\n<p>Any developer will love ILLA for two reasons- freedom and the chance to work simultaneously with other developers. Firstly, developers can write JavaScript wherever they want. This permits more flexibility in their job and increased variety in results.</p>\n<p>Secondly, developers can share links in ILLA Builder with other professionals in real time. Consequently, they can edit and comment on each other’s work as they go along. In other words, developers get to work in a fun and collaborative workspace. Naturally, this yields faster and improved results.</p>\n<p>Lastly, developers can always carry their work with them when using ILLA cloud. Just one click from any device will give them access to the cloud and bring them to ILLA’s user interface.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"key-features-of-illa\">Key features of ILLA<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#key-features-of-illa\" class=\"hash-link\" aria-label=\"Direct link to Key features of ILLA\" title=\"Direct link to Key features of ILLA\">​</a></h3>\n<p>Here are the key features of ILLA you must know:</p>\n<ul>\n<li>ILLA has a ready-to-use library for React components.</li>\n<li>Most amazingly, the ILLA design tool has a typescript typing feature and supports predictable static typing.</li>\n<li>ILLA Design provides quick and easy import, which helps in improving developers’ productivity.</li>\n<li>You can access beautifully designed and powerful themes and components.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"upgraded-illa-features\">Upgraded ILLA features<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#upgraded-illa-features\" class=\"hash-link\" aria-label=\"Direct link to Upgraded ILLA features\" title=\"Direct link to Upgraded ILLA features\">​</a></h3>\n<p>Here are some upgraded features of ILLA that you must know:</p>\n<ul>\n<li>Quick integration with any data source</li>\n<li>You can connect ILLA to any mainstream database or any other data source. This tool allows you to get data from the backend using front-end components.</li>\n<li>Real-time collaboration for enhanced efficiency</li>\n<li>ILLA Builder allows developers to work collaboratively on a project. They can create and share links to different developers to co-edit their tools and communicate with other team members in real time.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"responsive-ui-library-to-meet-your-needs\">Responsive UI library to meet your needs<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#responsive-ui-library-to-meet-your-needs\" class=\"hash-link\" aria-label=\"Direct link to Responsive UI library to meet your needs\" title=\"Direct link to Responsive UI library to meet your needs\">​</a></h3>\n<p>ILLA Builder also has numerous components to meet every developer’s needs efficiently. So, developers can access the drag-and-drop builder to develop their desired internal tools quickly.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In conclusion, Tooljet and Appsmith are both excellent low-code platforms that can help you build applications quickly and efficiently. However, they each have their own strengths and weaknesses, so it’s important to consider your needs before deciding which one is right for you. If you’re looking for a more hands-on approach with powerful management features, then Tooljet may be the better option for you. On the other hand, if you want a user-friendly platform that doesn’t require any coding experience, then Appsmith may be the better choice. Ultimately, it all comes down to what type of developer you are and what type of application you want to build.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/tooljet-vs-appsmith",
            "title": "Tooljet vs Appsmitm: Which open-source low-code platform is better?",
            "summary": "If you’re considering using a low-code development platform to build applications, you may wonder whether Tooljet or Appsmith is the better option",
            "date_modified": "2024-01-23T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "tooljet",
                "appsmith",
                "retool"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/tooljet-vs-retool",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"introduction\">Introduction<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#introduction\" class=\"hash-link\" aria-label=\"Direct link to Introduction\" title=\"Direct link to Introduction\">​</a></h2>\n<p>The demand for efficient and easy-to-use internal tools is on the rise, and low-code platforms have emerged as the go-to solution for businesses looking to streamline their internal processes. Retool and Tooljet are two popular low-code platforms that have attracted attention for their ability to build internal tools with ease. In this blog, we'll compare Retool and Tooljet, exploring their key features, use cases, and performance, and introduce ILLA Cloud as a supporting platform for app development and deployment.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud-the-best-software-development-tool\">ILLA Cloud: The best software development tool<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#illa-cloud-the-best-software-development-tool\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud: The best software development tool\" title=\"Direct link to ILLA Cloud: The best software development tool\">​</a></h2>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an out-of-the-box low-code tool that allows quick construction of internal tools with simple JS, without the need to create new projects.</p>\n<ul>\n<li>Web &amp; App Admin Panel</li>\n<li>Data Dashboard</li>\n<li>Customized B2B Tools</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>Compared to building with a component library, ILLA Cloud enables 10x faster tool construction and supports collaborative editing within teams.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"retool\">Retool<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#retool\" class=\"hash-link\" aria-label=\"Direct link to Retool\" title=\"Direct link to Retool\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/retool.png\" alt=\"retool\" class=\"img_CfaS\"></p>\n<p>Retool is a widely-used low-code platform that makes it easy to build custom internal tools, including SQL GUIs and Airtable dashboards. With its extensive integration capabilities, Retool allows users to connect to various databases and APIs, making it a popular choice for developing Redis UIs and Airtable admin panels. Retool offers both self-hosted and cloud-based solutions, making it a flexible option for businesses of all sizes. However, some users may find Retool's pricing a bit steep, which has led to a search for open-source Retool alternatives.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"retools-key-features-and-use-cases\">Retool's key features and use cases:<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#retools-key-features-and-use-cases\" class=\"hash-link\" aria-label=\"Direct link to Retool's key features and use cases:\" title=\"Direct link to Retool's key features and use cases:\">​</a></h3>\n<ul>\n<li>Extensive Integration Capabilities: Retool supports a wide range of databases and APIs, such as SQL, Redis, and Airtable, making it a popular choice for developing Redis UIs, SQL GUIs, and Airtable admin panels.</li>\n<li>User Interface and Experience: Retool features a drag-and-drop interface, which enables users to build internal tools without extensive coding knowledge. The platform also provides a range of pre-built components, such as tables, forms, and charts, to speed up the development process.</li>\n<li>Customizability: With Retool custom components, users can create bespoke solutions tailored to their specific needs. This feature allows for greater flexibility and control over the appearance and functionality of internal tools.</li>\n<li>Security and Compliance: Retool offers robust security features, including role-based access control, audit logs, and SSO. In addition to its cloud-based solution, Retool's self-hosted and on-premise options provide businesses with even more control over their data and infrastructure.</li>\n<li>Pricing: Retool offers a range of pricing plans, but its relatively higher costs may lead some users to search for more affordable open-source Retool alternatives.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tooljet\">Tooljet<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#tooljet\" class=\"hash-link\" aria-label=\"Direct link to Tooljet\" title=\"Direct link to Tooljet\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/tooljet-vs-appsmith-vs-retool/tooljet.png\" alt=\"tooljet\" class=\"img_CfaS\"></p>\n<p>Tooljet is another powerful low-code platform that enables users to build and deploy internal tools and software quickly. Like Retool, Tooljet offers a wide range of integrations, making it easy to create GUIs for Redis and MySQL, as well as handle Redis queries. Tooljet's open-source nature makes it an appealing choice for businesses looking for Retool alternatives. In addition to its ease of use and customizability, Tooljet offers a secure and compliant environment for developing internal tooling, with features like SSO and Docker support.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tooljets-key-features-and-use-cases\">Tooljet's key features and use cases:<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#tooljets-key-features-and-use-cases\" class=\"hash-link\" aria-label=\"Direct link to Tooljet's key features and use cases:\" title=\"Direct link to Tooljet's key features and use cases:\">​</a></h3>\n<ul>\n<li>Integration Capabilities: Like Retool, Tooljet offers a wide range of integrations, allowing users to connect to various databases and APIs, such as SQL, Redis, and Airtable. This makes it easy to create GUIs for Redis and MySQL and handle Redis queries.</li>\n<li>User Interface and Experience: Tooljet provides an intuitive interface with a drag-and-drop builder, making it easy for users to create and customize their internal tools. It also includes a rich library of pre-built components to facilitate rapid development.</li>\n<li>Customizability: Tooljet's open-source nature allows for greater customization and flexibility than Retool. Users can modify the source code and contribute to the platform's development, ensuring that their internal tools align with their unique requirements.</li>\n<li>Security and Compliance: Tooljet prioritizes security, offering features like SSO, Docker support, and role-based access control. This ensures that your internal tools remain secure and compliant while using Tooljet.</li>\n<li>Pricing: Tooljet's open-source model is free to use and modify, making it an attractive and cost-effective alternative to Retool, especially for smaller businesses or those with limited budgets.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"comparing-retool-and-tooljet\">Comparing Retool and Tooljet<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#comparing-retool-and-tooljet\" class=\"hash-link\" aria-label=\"Direct link to Comparing Retool and Tooljet\" title=\"Direct link to Comparing Retool and Tooljet\">​</a></h2>\n<p>When comparing Retool and Tooljet, several key factors come into play:</p>\n<ul>\n<li>Integration Capabilities: Both platforms offer extensive integrations, allowing users to connect to various databases and APIs, including SQL, Redis, and Airtable. While both platforms excel in this area, your choice may depend on specific integration requirements or preferences.</li>\n<li>User Interface and Experience: Retool and Tooljet both provide intuitive drag-and-drop interfaces and a library of pre-built components, making it easy for users to build internal tools like Google internal tools and Airtable dashboards. Personal preferences and ease of use will play a role in determining the best option for your needs.</li>\n<li>Customizability: Retool offers custom components, while Tooljet's open-source nature allows for even greater customization. Consider the level of customization required for your internal tools when choosing between the two platforms.</li>\n<li>Security and Compliance: Both platforms prioritize security, with Retool providing self-hosted and on-premise options, while Tooljet offers SSO and Docker support. Evaluate your organization's specific security and compliance requirements when making a decision.</li>\n<li>Pricing: Retool's pricing may be a barrier for some users, while Tooljet's open-source model offers a more budget-friendly alternative. Consider your organization's budget and financial constraints when selecting the most suitable platform.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"choosing-the-right-low-code-platform-for-your-needs\">Choosing the Right Low-Code Platform for Your Needs<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#choosing-the-right-low-code-platform-for-your-needs\" class=\"hash-link\" aria-label=\"Direct link to Choosing the Right Low-Code Platform for Your Needs\" title=\"Direct link to Choosing the Right Low-Code Platform for Your Needs\">​</a></h2>\n<p>To choose between Retool and Tooljet, consider the following factors:</p>\n<ul>\n<li>Integration Requirements: Both platforms offer extensive integration options, so your choice may depend on specific needs or preferences. Evaluate which platform best supports the databases and APIs essential to your internal tools.</li>\n<li>Customizability: If custom components are a priority, Retool may be the better choice. However, if you prefer an open-source platform with greater flexibility, Tooljet could be more suitable.</li>\n<li>Security and Compliance: Both Retool and Tooljet offer robust security features, so consider your specific compliance requirements when making a decision. Assess which platform best aligns with your organization's security policies and standards.</li>\n<li>Budget: If you're searching for a cost-effective solution, Tooljet's open-source model may be more appealing than Retool's pricing structure. Take into account the long-term costs associated with each platform, including potential updates and maintenance.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud-offers-the-best-of-both-worlds\">ILLA Cloud offers the best of both worlds<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#illa-cloud-offers-the-best-of-both-worlds\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud offers the best of both worlds\" title=\"Direct link to ILLA Cloud offers the best of both worlds\">​</a></h2>\n<p>ILLA is one of the fastest platforms for internal tool development. It saves developers precious time on web design and other aspects of their job. One of the main reasons developers are increasingly choosing ILLA is the library. The platform has conjured a rich collection of code components that you can simply drag and drop and build complex applications within minutes.</p>\n<p>You can also use application programming interfaces to join ILLA with a database of your choice. The platform can excellently integrate back-end and front-end data. As a result, developers can make vast information interactions possible with basic data calls.</p>\n<p>Any developer will love ILLA for two reasons-freedom and the chance to work simultaneously with other developers. Firstly, developers can write JavaScript wherever they want. This permits more flexibility in their job and increased variety in results.</p>\n<p>Secondly, developers can share links in ILLA Builder with other professionals in real time. Consequently, they can edit and comment on each other’s work as they go along. In other words, developers get to work in a fun and collaborative workspace. Naturally, this yields faster and improved results.</p>\n<p>Lastly, developers can always carry their work with them when using ILLA cloud. Just one click from any device will give them access to the cloud and bring them to ILLA’s user interface.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"key-features-of-illa\">Key features of ILLA<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#key-features-of-illa\" class=\"hash-link\" aria-label=\"Direct link to Key features of ILLA\" title=\"Direct link to Key features of ILLA\">​</a></h3>\n<p>Here are the key features of ILLA you must know:</p>\n<ul>\n<li>ILLA has a ready-to-use library for React components.</li>\n<li>Most amazingly, the ILLA design tool has a typescript typing feature and supports predictable static typing.</li>\n<li>ILLA Design provides quick and easy import, which helps in improving developers’ productivity.</li>\n<li>You can access beautifully designed and powerful themes and components.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"upgraded-illa-features\">Upgraded ILLA features<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#upgraded-illa-features\" class=\"hash-link\" aria-label=\"Direct link to Upgraded ILLA features\" title=\"Direct link to Upgraded ILLA features\">​</a></h3>\n<p>Here are some upgraded features of ILLA that you must know:</p>\n<ul>\n<li>Quick integration with any data source</li>\n<li>You can connect ILLA to any mainstream database or any other data source. This tool allows you to get data from the backend using front-end components.</li>\n<li>Real-time collaboration for enhanced efficiency</li>\n<li>ILLA Builder allows developers to work collaboratively on a project. They can create and share links to different developers to co-edit their tools and communicate with other team members in real time.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"responsive-ui-library-to-meet-your-needs\">Responsive UI library to meet your needs<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#responsive-ui-library-to-meet-your-needs\" class=\"hash-link\" aria-label=\"Direct link to Responsive UI library to meet your needs\" title=\"Direct link to Responsive UI library to meet your needs\">​</a></h3>\n<p>ILLA Builder also has numerous components to meet every developer’s needs efficiently. So, developers can access the drag-and-drop builder to develop their desired internal tools quickly.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/tooljet-vs-retool#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In conclusion, Tooljet and Appsmith are both excellent low-code platforms that can help you build applications quickly and efficiently. However, they each have their own strengths and weaknesses, so it’s important to consider your needs before deciding which one is right for you. If you’re looking for a more hands-on approach with powerful management features, then Tooljet may be the better option for you. On the other hand, if you want a user-friendly platform that doesn’t require any coding experience, then Appsmith may be the better choice. Ultimately, it all comes down to what type of developer you are and what type of application you want to build.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/tooljet-vs-retool",
            "title": "Tooljet vs Retool: Which open-source low-code platform is better?",
            "summary": "The demand for efficient and easy-to-use internal tools is on the rise, and low-code platforms have emerged as the go-to solution for businesses.",
            "date_modified": "2024-01-23T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "tooljet",
                "appsmith",
                "retool"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/build-ai-tools",
            "content_html": "<p>AI development has reached a point today where it's no longer a novelty, but rather widely applied in various fields. However, for most people, AI remains a high-barrier technology, requiring a significant amount of time and effort to learn before it can be applied effectively in practical work.</p>\n<p>Each of us has our own unique needs, such as building text-to-image tools or writing tools specific to our work chains. There are numerous interesting models on HuggingFace, allowing us to quickly create our own AI tools based on these models, thereby making our work more intelligent!</p>\n<p>Here is a recommended tool that allows users to build AI tools like assembling blocks:</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud\">ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/build-ai-tools#illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud\" title=\"Direct link to ILLA Cloud\">​</a></h2>\n<p>The official website is: <a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://illacloud.com</a></p>\n<p>Github: <a href=\"https://github.com/illacloud/illa-builder\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/illacloud/illa-builder</a></p>\n<p>This open-source low-code tool's slogan is: <strong>Build AI Driven Business Tools</strong>. It focuses on helping users quickly build AI-driven tools. Users can construct pages through drag-and-drop. Then, by using three major functions, they can connect to AI:</p>\n<ul>\n<li>ILLA AI Agent</li>\n<li>Models from HuggingFace</li>\n<li>RestAPI to call OpenAI's interface</li>\n</ul>\n<p>This allows for the quick creation of personalized AI tools.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"building-smart-applications\">Building Smart Applications<a href=\"https://illacloud.github.io/illa-website/blog/build-ai-tools#building-smart-applications\" class=\"hash-link\" aria-label=\"Direct link to Building Smart Applications\" title=\"Direct link to Building Smart Applications\">​</a></h2>\n<p>Here we use OpenAI's text-to-image interface to build our own text-to-image panel, using tools built with ILLA Cloud, which offers certain advantages:</p>\n<p>Example here: <a href=\"https://illacloud.com/image-generator\" target=\"_blank\" rel=\"noopener noreferrer\">https://illacloud.com/image-generator</a></p>\n<ul>\n<li>The generated images can be sent to any system or SaaS using the ILLA Flow feature.</li>\n<li>The models used later can be called via RestAPI or through HuggingFace's models.</li>\n<li>Built-in prompts can be added to ensure that the generated content is sufficiently customized.</li>\n<li>The ILLA AI Agent feature can enrich the content's prompts, as not everyone is familiar with writing prompts.</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/build-ai-tools/image_generate_content.webp\" alt=\"image_generate_content\" class=\"img_CfaS\"></p>\n<p>I used several components here, quickly creating my own web panel through drag-and-drop, and then connected the logic through JavaScript, making it available for use by my team.</p>\n<p>I built two examples; another is an AI voice processing panel.</p>\n<p>Example here: <a href=\"https://illacloud.com/ai-voice-generator\" target=\"_blank\" rel=\"noopener noreferrer\">https://illacloud.com/ai-voice-generator</a></p>\n<p>This panel has the following functions:</p>\n<ul>\n<li>Meeting minutes transcription</li>\n<li>Generation of meeting minutes</li>\n<li>Translation and dubbing of meeting minutes</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/build-ai-tools/mix_ai_voice.webp\" alt=\"mix_ai_voice\" class=\"img_CfaS\"></p>\n<p>It primarily uses OpenAI's Whisper capability. There are thousands of AI capabilities, but the most important is to find what suits you. Using ILLA Cloud, you can quickly build AI applications like building blocks. Start using it now!</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/build-ai-tools#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>From the above introduction, we can see that using ILLA Cloud, you can quickly build your own AI tools, and ILLA Cloud has a rich array of components, basically meeting a large number of everyday business needs.</p>\n<p>ILLA's self-developed component library has made the above functions flexible enough. Come and use ILLA Cloud to build your own AI tools!</p>",
            "url": "https://illacloud.github.io/illa-website/blog/build-ai-tools",
            "title": "Create AI Tools like building with blocks",
            "summary": "AI development has reached a point today where it's no longer a novelty, but rather widely applied in various fields.",
            "date_modified": "2024-01-19T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "ai",
                "tools"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/automate-send-to-slack",
            "content_html": "<p>Slack, as a primary communication tool for many people's work, has become one of the essential tools that must be opened daily. Supporting powerful text and media formats, Slack allows us to send various messages. As developers, we have a multitude of tasks that need to be automated, such as:</p>\n<ul>\n<li><strong>Code Compilation and Building</strong>: Automating the process of code compilation, especially in large projects, can significantly improve efficiency.</li>\n<li><strong>Test Execution</strong>: Automatically running unit tests, integration tests, and performance tests to ensure code quality.</li>\n<li><strong>Code Deployment</strong>: Automating code deployment to production or test environments, a common practice in Continuous Integration/Continuous Deployment (CI/CD) processes.</li>\n<li><strong>Data Backup and Recovery</strong>: Regularly automating database and application data backups, and restoring them when needed.</li>\n<li><strong>Monitoring and Alerts</strong>: Automating the monitoring of system and application performance and sending alerts in case of issues.</li>\n<li><strong>Log File Management</strong>: Automating the collection, analysis, and archiving of logs.</li>\n<li><strong>Environment Configuration</strong>: Using configuration management tools to automatically set up and maintain development, testing, and production environments.</li>\n<li><strong>Documentation Generation</strong>: Automatically generating documentation from code comments or database structures.</li>\n<li><strong>Batch Processing of Data or Files</strong>: Automatically performing data transformations, migrations, or other batch processing tasks.</li>\n<li><strong>Dependency Management</strong>: Automatically managing project dependencies to ensure the latest and compatible versions of libraries and frameworks.</li>\n</ul>\n<p>These tasks are usually automated through various tools and scripts, such as using Jenkins or GitHub Actions for CI/CD processes, or Ansible, Puppet for environment configuration and management. Developers use many tools to accomplish these tasks, but these tools are usually independent. After completing their tasks, I believe everyone would appreciate a comprehensive notification for updates.</p>\n<p>Studies show that if an issue is notified via Slack at the time of creation, the resolution time can be reduced by 50%. Therefore, we need a tool to help us automate message sending to Slack, allowing us to see all messages in one place, rather than checking various tools.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/connector.png\" alt=\"connector\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"how-to-solve\">How to Solve<a href=\"https://illacloud.github.io/illa-website/blog/automate-send-to-slack#how-to-solve\" class=\"hash-link\" aria-label=\"Direct link to How to Solve\" title=\"Direct link to How to Solve\">​</a></h2>\n<p>Here we choose a tool to solve this, named ILLA Flow. It is a connector tool aimed at developers, helping them quickly build various automation tasks, including automating message sending to Slack.</p>\n<p>ILLA Flow offers various integrations, including but not limited to the most commonly used RestAPI, GraphQL, and a vast number of database connections and various SaaS platform capabilities, allowing you to quickly connect your products with those used by your customers. ILLA Flow also supports scheduled tasks, Webhooks, and parameter passing.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/resource.png\" alt=\"resource\" class=\"img_CfaS\"></p>\n<p>The most unique feature of ILLA Flow is the ability to incorporate an AI Agent into the workflow. This allows you to use an AI Agent, created by OpenAI's model, to process your notifications before sending them, making the notifications smarter and more interesting. You can also use the AI Agent for complex analyses, simplifying previously challenging summaries.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/agent.png\" alt=\"agent\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"achieved-results\">Achieved Results<a href=\"https://illacloud.github.io/illa-website/blog/automate-send-to-slack#achieved-results\" class=\"hash-link\" aria-label=\"Direct link to Achieved Results\" title=\"Direct link to Achieved Results\">​</a></h2>\n<p>We can create a workflow in ILLA Flow and then call Slack's Webhook in the workflow to achieve automated message sending to Slack.</p>\n<p>After the completion of CI/CD tools, or after daily scheduled tasks, we can see messages in Slack.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/automate-send-to-slack/connector.png\" alt=\"connector\" class=\"img_CfaS\"></p>\n<p>We can also connect ILLA Flow to GitHub, allowing us to see messages sent by ILLA Flow in GitHub Issues.</p>\n<p>We can also connect ILLA Flow to the alert monitoring system, so when an alarm or anomaly occurs, we can see messages in Slack.</p>\n<p>Finally, another product of ILLA, ILLA Builder, supports building custom panels, allowing us to jump directly to ILLA Builder to view more information through the links sent in Slack, making notifications very smart and detailed.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/automate-send-to-slack#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>In daily work, there are numerous automation scenarios, and ILLA Flow is a tool aimed at developers. Most other automation connection tools are geared towards general users, which can make configuration more complex for developers.</p>\n<p>Using ILLA Flow, you can integrate AI Agents and various SaaS with one click, making internal team processes more automated and notifications smarter.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/automate-send-to-slack",
            "title": "Best Developer-Friendly Tool for Automating Message Sending to Slack",
            "summary": "Slack, as a primary communication tool for many people's work, has become one of the essential tools that must be opened daily.",
            "date_modified": "2024-01-17T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "workflow",
                "slack",
                "automate"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/boost-freelancer",
            "content_html": "<p>Hello everyone, I'm Owen, a full-stack engineer with previous experience at TikTok. My role there involved developing the platform, known for its engaging short video content, and ensuring a delightful user experience.</p>\n<p>I am currently a freelancer and once took on a web development project on a freelancer platform. The frontend part of this project didn't take much of my time, but the extensive requirements for Admin Panels consumed a lot of it.</p>\n<p>All my data was stored on Supabase, and I developed a complete set of REST APIs for backend management. I realized that most of the work involved CRUD operations on Supabase. I needed a tool to help me quickly develop these Admin Panels.</p>\n<p>So, I created an open-source project to assist in the rapid development of Admin Panels. This project is named ILLA Cloud.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"what-is-illa-cloud\">What is ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/boost-freelancer#what-is-illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to What is ILLA Cloud\" title=\"Direct link to What is ILLA Cloud\">​</a></h2>\n<p>ILLA is a low-code tool designed for developers, allowing you to rapidly develop Admin Panels and Dashboards through a drag-and-drop interface. ILLA Cloud integrates with a wide range of common databases and data sources, including REST APIs and GraphQL.</p>\n<p>Official Website: <a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://illacloud.com</a></p>\n<p>With ILLA, you can quickly build various tools such as:</p>\n<ul>\n<li>Web &amp; App Admin Panels</li>\n<li>Data Dashboards</li>\n<li>Customized B2B Tools</li>\n</ul>\n<p>These can be created with drag-and-drop ease, requiring only a minimal amount of JavaScript for logical connections.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/boost-freelancer/dashboard.png\" alt=\"dashboard\" class=\"img_CfaS\"></p>\n<p>ILLA also features a comprehensive set of connector tools, capable of integrating AI, databases, and various SaaS platforms. This enables your clients to quickly link the products you build with the ones they use. It supports scheduled tasks, Webhooks, and also allows for parameter passing.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/boost-freelancer/connector.png\" alt=\"connector\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"why-i-created-illa-cloud\">Why I created ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/boost-freelancer#why-i-created-illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to Why I created ILLA Cloud\" title=\"Direct link to Why I created ILLA Cloud\">​</a></h2>\n<p>For freelancers, the most important thing is undoubtedly time, as time is money. I don't want to spend too much time on Admin Panels; I need a tool that helps me develop Admin Panels quickly. Additionally, for my clients, usability and aesthetic appeal are paramount. Therefore, using a low-code tool for development offers a very user-friendly experience.</p>\n<p>With drag-and-drop, I can rapidly construct an Admin Panel that directly interacts with Supabase, without needing to write any code. This tool helps me quickly develop Admin Panels, allowing me to focus on developing business logic.</p>\n<p>The reason I use Supabase is that it's an extremely user-friendly open-source project, which aids in swiftly setting up backend services. Moreover, its documentation is very accessible, making it easy for me to get started.</p>\n<p>ILLA Cloud has an integration with Supabase. With SQL, I can quickly query and modify data in Supabase, facilitating rapid development of both Dashboards and Admin Panels.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"why-i-recommend-illa-cloud\">Why I recommend ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/boost-freelancer#why-i-recommend-illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to Why I recommend ILLA Cloud\" title=\"Direct link to Why I recommend ILLA Cloud\">​</a></h2>\n<p>You only need to pay $20 per month for ILLA, and this fee is solely for the use of ILLA's editor, which is very freelancer-friendly. You might need to interact with numerous clients, but you don't have to pay for the users; you only pay for yourself.</p>\n<p>Additionally, ILLA comes with a ready-to-use Drive service. For file storage needs during development, you can directly use the Drive service, which aids in rapid development. Moreover, if your client has a high usage volume, you can have them recharge their account themselves, or they can come back to you for more. This can be very beneficial for closing follow-up deals.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/boost-freelancer",
            "title": "Best product that enables freelancers to create admin panels",
            "summary": "I am currently a freelancer and once took on a web development project on a freelancer platform.",
            "date_modified": "2024-01-15T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "freelancer",
                "freelance",
                "upwork",
                "fiverr"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases",
            "content_html": "<p>Database GUI tools make working with SQL databases much simpler and more efficient for developers. Many great database GUIs are available, each with different features and capabilities. In this blog post, we'll look at seven of the best database GUIs to help you choose the right one.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"database-guis-and-why-they-are-important\">Database GUIs and why they are important<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#database-guis-and-why-they-are-important\" class=\"hash-link\" aria-label=\"Direct link to Database GUIs and why they are important\" title=\"Direct link to Database GUIs and why they are important\">​</a></h2>\n<p>Database GUIs are essential tools for database developers, database administrators, and database management systems users. Database management tools enable database developers to edit and manage MySQL and PostgreSQL databases and browse the database schema on Windows, Linux, and macOS operating systems.</p>\n<p>Popular databases such as Microsoft SQL Server, Oracle MySQL Database, and Oracle MySQL server also benefit from this technology through comprehensive cross-platform GUI database management tools. GUI database management tools allow users to construct complex query builders for their databases with just a mouse click instead of manually entering complex SQL statements.</p>\n<p>Web-based GUIs are becoming increasingly popular as they allow those with access to a web browser to easily manage their databases from any system, including Windows, Linux, and Mac. Using a database GUI is a much quicker way of managing your databases. It is also far more comprehensive when compared to entering SQL statements by hand. Allowing developers easy access to any database system's functionality makes database management significantly more accessible.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud\">ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud\" title=\"Direct link to ILLA Cloud\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>ILLA is a top-notch low-code solution that allows developers to create a feature-rich internal tool within no time. Moreover, developers using the ILLA cloud will have to spend less effort and time on web designs and other integrations.</p>\n<p>The creators of ILLA have developed numerous inserts for the tool. So, the tool can quickly meet the requirements and needs of developers in any scenario. Moreover, developers can use drag and drag-and-drop builder of ILLA to improve their productivity in the best possible way. You can also connect this tool to any data source through APIs.</p>\n<p>ILLA Cloud is also one of the most popular Graphical User Interfaces (GUI) for managing SQL databases. It offers a user-friendly and intuitive interface, allowing developers to quickly change their database without manually entering complex SQL statements. ILLA Cloud also provides comprehensive cross-platform support, making it accessible from any system, including Windows, Linux, and Mac.</p>\n<p>With ILLA Cloud, users can quickly construct complex query builders with a mouse click. In addition to its great features, ILLA Cloud offers enterprise level security protocols protecting the user's data. Furthermore, users can easily extend their database by creating custom web services with ILLA's REST API platform. ILLA Cloud is the perfect choice for those looking for an easy way to manage their databases.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"dbeaver\">DBeaver<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#dbeaver\" class=\"hash-link\" aria-label=\"Direct link to DBeaver\" title=\"Direct link to DBeaver\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/dbeaver.avif\" alt=\"dbeaver\" class=\"img_CfaS\"></p>\n<p>DBeaver is an excellent choice for SQL Database GUI, particularly for those looking to avoid subscription-based models. It is a free and open-source database management tool that provides cross-platform support, allowing users to access their databases from any system, including Windows, Linux, and Mac.</p>\n<p>With DBeaver, users can quickly create complex queries and edit the database schema with a mouse click. It also features an extensive set of tools that make it easy to manage large SQL databases. These tools include an ER Diagram generator, data export/import features, and a powerful query builder that helps users construct complex queries.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"retool\">Retool<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#retool\" class=\"hash-link\" aria-label=\"Direct link to Retool\" title=\"Direct link to Retool\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/retool.avif\" alt=\"retool\" class=\"img_CfaS\"></p>\n<p>Retool is an intuitive Graphical User Interface (GUI) for managing SQL databases that offers a wide range of features and benefits. It provides an clean interface with drag-and-drop features to construct complex queries without needing to manually enter SQL statements. Retool makes it easier for developers to interact with their databases, enabling them to make changes quickly and efficiently.</p>\n<p>Furthermore, Retool's advanced security protocols help protect users' data from unauthorized access. It also offers cross-platform support, making it accessible from any system, including Windows, Linux, and Mac.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tooljet\">Tooljet<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#tooljet\" class=\"hash-link\" aria-label=\"Direct link to Tooljet\" title=\"Direct link to Tooljet\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/tooljet.avif\" alt=\"tooljet\" class=\"img_CfaS\"></p>\n<p>Tooljet is an advanced Graphical User Interface (GUI) for managing SQL databases that offer users a comprehensive suite of features and tools to manage their databases efficiently. It has an intuitive drag-and-drop interface, allowing developers to quickly change their database without manually entering complex SQL statements.</p>\n<p>Tooljet also provides powerful query builders that enable users to construct complex queries in a few clicks and built-in reporting capabilities for generating reports quickly and easily. Furthermore, users can take advantage of the extensive cross-platform support provided by Tooljet and access their database from any system.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"dbvisualizer\">DbVisualizer<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#dbvisualizer\" class=\"hash-link\" aria-label=\"Direct link to DbVisualizer\" title=\"Direct link to DbVisualizer\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/dbvisualizer.avif\" alt=\"DbVisualizer\" class=\"img_CfaS\"></p>\n<p>DbVisualizer is a powerful and comprehensive GUI tool for managing SQL databases. It offers users an easy-to-use drag-and-drop interface for making changes to their database and robust query builders for constructing complex queries without manually entering SQL statements. DbVisualizer provides extensive cross-platform support, allowing users to access their database from any system, including Windows, Linux, and Mac.</p>\n<p>It also features advanced security protocols to help protect users' data from unauthorized access. Overall, DbVisualizer is an excellent choice.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"appsmith\">Appsmith<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#appsmith\" class=\"hash-link\" aria-label=\"Direct link to Appsmith\" title=\"Direct link to Appsmith\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/appsmith.avif\" alt=\"appsmith\" class=\"img_CfaS\"></p>\n<p>Appsmith is an incredibly powerful graphical user interface (GUI) that makes it easy to manage large SQL databases. It features a comprehensive set of tools that make managing such databases simpler and more intuitive than ever. The drag-and-drop interface allows developers to quickly construct complex queries without manually entering long strings of SQL statements.</p>\n<p>Appsmith also offers numerous advanced security protocols, such as user authentication and secure connection encryption. Moreover, Appsmith's cross-platform support enables users to access their data from any system, including Windows, Linux, and Mac.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"dronahq\">Dronahq<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#dronahq\" class=\"hash-link\" aria-label=\"Direct link to Dronahq\" title=\"Direct link to Dronahq\">​</a></h3>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/top-7-database-guis-for-sql-databases/dronahq.avif\" alt=\"dronahq\" class=\"img_CfaS\"></p>\n<p>Dronahq is a powerful and feature-rich graphical user interface (GUI) for managing SQL databases. It offers users an intuitive drag-and-drop interface that makes creating complex queries simple without manually entering SQL statements.</p>\n<p>Dronahq provides extensive cross-platform support, enabling users to access their database from any system, including Windows, Linux, and Mac. It also features advanced security protocols such as role-based authentication and secure connection encryption. Furthermore, Dronahq has a powerful query builder that allows users to quickly create custom reports with the built-in reporting capabilities.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"find-the-one-that-best-suits-you\">Find the one that best suits you<a href=\"https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases#find-the-one-that-best-suits-you\" class=\"hash-link\" aria-label=\"Direct link to Find the one that best suits you\" title=\"Direct link to Find the one that best suits you\">​</a></h2>\n<p>With the wide range of Graphical User Interfaces (GUIs) available, it is important to try out different options to find the one that best suits you. Each GUI has unique features, so users should take the time to research and weigh the pros and cons.</p>\n<p>Ultimately, choosing the right GUI is a long-term investment that can significantly improve a person’s computing experience. Why not check out ILLA Cloud today? Its excellent features, user-friendly interface, and optimized performance could be just the right solution you need!</p>",
            "url": "https://illacloud.github.io/illa-website/blog/top-7-database-guis-for-sql-databases",
            "title": "Top 7 Database GUIs for SQL databases",
            "summary": "Database GUI tools make working with SQL databases much simpler and more efficient for developers. Many great database GUIs are available.",
            "date_modified": "2024-01-09T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "database",
                "gui",
                "tools"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications",
            "content_html": "<p>CRUD applications are a type of software that allows users to create, read, update, and delete data using various interfaces such as web pages or mobile apps. CRUD stands for Create, Read, Update, and Delete, which are the four basic operations that models should be able to do on data. CRUD applications are very common in web development, as they allow users to perform basic operations on data without writing complex code.</p>\n<p>CRUD applications consist of three main components: a database, a user interface, and an API. The database is where the data is stored and retrieved. The user interface is the front end that users interact with. The API contains the code and methods that communicate with the database. Each component can use different technologies and frameworks, depending on the needs and preferences of the developer.</p>\n<p>In this blog post, we will review some of the best tools for building CRUD applications, covering each component separately. We will also provide some examples and tips on how to use them effectively.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"database\">Database<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#database\" class=\"hash-link\" aria-label=\"Direct link to Database\" title=\"Direct link to Database\">​</a></h2>\n<p>The database is the core of any CRUD application, as it stores the data that users can create, read, update, and delete. There are many types of databases available, but they can be broadly categorized into two groups: relational (SQL) and non-relational (NoSQL).</p>\n<p>Relational databases use tables to store data; each table has a predefined schema and each row represents a record. Relational databases are good for structured and consistent data that requires complex queries and transactions. Some of the most popular relational databases are MySQL, PostgreSQL, Oracle, and SQL Server.</p>\n<p>Non-relational databases use collections to store data, where each collection can have a flexible schema and each document represents a record. Non-relational databases are good for unstructured and dynamic data that require high scalability and performance. Some of the most popular non-relational databases are MongoDB, CouchDB, Firebase, and DynamoDB.</p>\n<p>Choosing the right database for your CRUD application depends on several factors, such as the type and volume of data you need to store, the level of consistency and reliability you need to ensure, and the complexity and frequency of queries you need to perform. You should also consider the compatibility and integration of your database with your user interface and API tools.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"user-interface\">User Interface<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#user-interface\" class=\"hash-link\" aria-label=\"Direct link to User Interface\" title=\"Direct link to User Interface\">​</a></h2>\n<p>The user interface is the front end of your CRUD application, where users can see and manipulate the data stored in your database. The user interface can be built using various technologies and frameworks, depending on the type and complexity of your application.</p>\n<p>One of the most common ways to build a user interface for a CRUD application is by using HTML, CSS, and JavaScript. HTML defines the structure and content of your web page, CSS styles the appearance and layout of your web page, and JavaScript adds interactivity and functionality to your web page. You can use plain HTML, CSS, and JavaScript or use libraries and frameworks that simplify and enhance your development process.</p>\n<p>Some of the most popular libraries and frameworks for building user interfaces are React, Angular, Vue.js, Bootstrap, Tailwind CSS, jQuery, etc. These tools provide various features and benefits for creating dynamic and responsive web pages that can communicate with your API and database.</p>\n<p>Another way to build a user interface for a CRUD application is by using low-code or no-code platforms. These platforms allow you to create web pages using drag-and-drop components and visual editors without writing much or any code. Some of the most popular low-code or no-code platforms are Budibase, Appsmith, Bubble.io, Webflow, etc. These tools are great for beginners or non-developers who want to create simple and fast CRUD applications without learning complex technologies.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"api\">API<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#api\" class=\"hash-link\" aria-label=\"Direct link to API\" title=\"Direct link to API\">​</a></h2>\n<p>The API is the bridge between your user interface and your database. It defines how your user interface can request data from your database or send data to your database using HTTP methods such as GET (read), POST (create), PUT (update), or DELETE (delete). The API also handles authentication, authorization, validation, error handling, etc.</p>\n<p>There are many ways to build an API for your CRUD application, but one of the most common ways is using REST (Representational State Transfer). REST is an architectural style that defines how resources (data) can be accessed and manipulated using standard HTTP methods and formats such as JSON or XML. REST APIs are easy to understand and use by both humans and machines.</p>\n<p>Some of the most popular tools for building REST APIs are Node.js, Express.js, Flask, Django, Ruby on Rails, Laravel, etc. These tools are frameworks that provide various features and libraries for creating and managing web servers and APIs.</p>\n<p>Another way to build an API for your CRUD application is using GraphQL. GraphQL is a query language and a runtime that allows you to define and execute queries and mutations (operations) on your data using a single endpoint. GraphQL APIs are more flexible and efficient than REST APIs, as they allow you to request or send only the data you need, avoiding over-fetching or under-fetching.</p>\n<p>Some of the most popular tools for building GraphQL APIs are Apollo Server, Prisma, Hasura, Graphene, etc. These tools are libraries or platforms that help you create and manage GraphQL servers and schemas.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tools-for-building-crud-applications\">Tools For Building Crud Applications<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#tools-for-building-crud-applications\" class=\"hash-link\" aria-label=\"Direct link to Tools For Building Crud Applications\" title=\"Direct link to Tools For Building Crud Applications\">​</a></h2>\n<p>You will find many software claiming to provide ease in building useful CRUD Applications, but you need to be careful to find the ones that help in making the most compatible CRUD Applications. Let us discuss the top 7 software that can help you. We short-listed these seven tools according to client’s preferences and feasibility. We will mention their features and drawbacks so that you can choose wisely and according to your demands.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud\">ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud\" title=\"Direct link to ILLA Cloud\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/illa.png\" alt=\"illa\" class=\"img_CfaS\"></p>\n<p>ILLA  Cloud is an open-source low-code platform for building internal tools. Its main aim is to help programmers develop modules to monitor data, which is one of the most tedious jobs for a developer. Another new feature in this open-source low-code app is that you can make your own customized block of code and then later put it up for sale in the marketplace.</p>\n<p>It gets connected to the mainstream database, or, alternatively, it can connect to any database through APIs. It can even add action to the chain of user events. Its backend and front-end data components are tightly integrated; hence developers can write data calls for massive information interaction.</p>\n<p>It is doubly useful for developers because it offers them the freedom to implement richer functionality. They can use {{template syntax}} for richer content.</p>\n<p>It allows real-time collaboration, making it easier for developers to interact at different ends of the world to work on it simultaneously. They can use ILLA Builder by sharing links, co-editing, and communicating for improved development efficiency.</p>\n<p>ILLA Builder has a comprehensive UI library. It has several useful components that developers can use to drop and drag to build attractive interfaces without wasting much time</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>It can easily be integrated with any database.</li>\n<li>You can download ILLA CLI for any of these operating systems: Windows, Linux, and MAC.</li>\n<li>It offers real-time collaboration which enables the developers to communicate for better development.</li>\n<li>It provides flexible deployment. You can use ILLA Cloud, ILLA CLI, Kubernetes, and Docker.</li>\n<li>You can easily integrate third-party APIs.</li>\n<li>It is free to share, use, copy, and update.</li>\n<li>It is constantly being polished with new updates and features.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<ul>\n<li>ILLA Cloud has basically been developed for the convenience of programmers.</li>\n<li>You need to be proficient in either of the four languages to fully utilize it. JavaScript, RUST, and Forlang are its major languages.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"appsmith\">AppSmith<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#appsmith\" class=\"hash-link\" aria-label=\"Direct link to AppSmith\" title=\"Direct link to AppSmith\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/appsmith.png\" alt=\"appsmith\" class=\"img_CfaS\"></p>\n<p>AppSmith was the first open-source low-code tool. It introduced the developers to a whole new world of click-and-drag programming. The standard plan consists of unlimited apps and widgets that are immensely useful for building live dashboards. This standard plan is free. It has many features; a summary of these is below:</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features-1\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features-1\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>It easily gets connected to your supported database.</li>\n<li>Instinctive drag-and-drop widgets prove to be very helpful and make coding even easier.</li>\n<li>A complete guide, including documentation and videos, is available for guidance.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks-1\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks-1\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<ul>\n<li>To fully utilize this app, you need to know JavaScript.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"knack\">Knack<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#knack\" class=\"hash-link\" aria-label=\"Direct link to Knack\" title=\"Direct link to Knack\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/knack.png\" alt=\"knack\" class=\"img_CfaS\"></p>\n<p>Knack is another no-code app that is used generally used for automating manual processes. It will be problematic if you try to plug it in with an existing database. It has certain limitations, which is why it is best used for internal processes only. It will allow you to view, manage, update, analyze, and share data. The application templates for different cases start quickly. Here are a few features of this application.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features-2\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features-2\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>It supports a built-in database as well as user management, authentication, email, and notification automation workflows.</li>\n<li>Developers can easily customize it with JavaSript and CSS.</li>\n<li>A complete guide, including documentation and videos, is available for guidance.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks-2\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks-2\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<p>The most severe drawback is its incapability to interact with other databases.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"budibase\">Budibase<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#budibase\" class=\"hash-link\" aria-label=\"Direct link to Budibase\" title=\"Direct link to Budibase\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/budibase.png\" alt=\"budibase\" class=\"img_CfaS\"></p>\n<p>Budibase is another popular low-code tool extensively used for CRUD applications. You can easily integrate it with major databases. Below are a few prominent features of the tool.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features-3\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features-3\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>It has a load of widgets and other features to beautify your page.</li>\n<li>It supports an internal database but supports by connecting to an external database as well.</li>\n<li>In the shape of extensive documentation, a complete guide is also available for guidance.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks-3\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks-3\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<ul>\n<li>JavaScript, as well as technical skills, are required.</li>\n<li>No templates are available.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"bubble\">Bubble<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#bubble\" class=\"hash-link\" aria-label=\"Direct link to Bubble\" title=\"Direct link to Bubble\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/bubble.png\" alt=\"bubble\" class=\"img_CfaS\"></p>\n<p>This much more complicated tool is not recommended for smaller internal apps.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features-4\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features-4\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>Widgets and designs are available.</li>\n<li>Perfectly capable of deployment.</li>\n<li>The volume of traffic, users, and data is unlimited.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks-4\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks-4\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<ul>\n<li>It is complicated to learn.</li>\n<li>You cannot host it on your infrastructure</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"ui-bakery\">UI Bakery<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#ui-bakery\" class=\"hash-link\" aria-label=\"Direct link to UI Bakery\" title=\"Direct link to UI Bakery\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/uibakery.png\" alt=\"bakery\" class=\"img_CfaS\"></p>\n<p>This app is a relatively new product but is still the perfect no-code tool for building internal tools and CRUD apps because of the predefined widgets and ready-made templates. It can easily connect to SQL Databases like MySQL, Google Datasheets, and Postgres.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features-5\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features-5\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>It supports user management through Google, Twitter, and Facebook.</li>\n<li>Developers can do app hosting on a unique URL</li>\n<li>You can customize the widgets and templates.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks-5\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks-5\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<ul>\n<li>It is not suitable for public-facing apps, customer-facing websites, and mobile apps.</li>\n<li>You need technical staff to deal with this, as it requires a moderate level of knowledge to deal with JavaScript.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"retool\">Retool<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#retool\" class=\"hash-link\" aria-label=\"Direct link to Retool\" title=\"Direct link to Retool\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/the-best-tools-for-build-crud-applications/retool.png\" alt=\"retool\" class=\"img_CfaS\"></p>\n<p>Though last on the list, retool is also an excellent choice as a CRUD application. It is a drag-and-drop building blocks platform. You need to customize JavaScript in order to fetch your data from an external database.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features-6\">Features:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#features-6\" class=\"hash-link\" aria-label=\"Direct link to Features:\" title=\"Direct link to Features:\">​</a></h3>\n<ul>\n<li>It supports built-in authorization and authentication.</li>\n<li>You can customize it with JavaScript.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks-6\">Drawbacks:<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#drawbacks-6\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks:\" title=\"Direct link to Drawbacks:\">​</a></h3>\n<ul>\n<li>Its free plan is minimal and charges at a per-end user base.</li>\n<li>You cannot use it for public-facing apps.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>CRUD applications are a type of software that allows users to create, read, update, and delete data using various interfaces. CRUD applications consist of three main components: a database, a user interface, and an API. Each component can use different technologies and frameworks, depending on the needs and preferences of the developer.</p>\n<p>In this blog post, we reviewed some of the best tools for building CRUD applications, covering each component separately. We also provided some examples and tips on how to use them effectively. We hope this post helped you learn more about CRUD applications and how to build them.</p>\n<p>If you are looking for a tool that can help you build CRUD applications quickly and easily, we recommend you check out ILLA Cloud. ILLA Cloud is a cloud-based platform that lets you create CRUD applications without coding. You can connect to any database or API, design your user interface with drag-and-drop components, and deploy your application with one click. ILLA Cloud also provides features such as authentication, authorization, validation, error handling, etc. ILLA Cloud is the best tool for building CRUD applications in minutes.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/the-best-tools-for-build-crud-applications",
            "title": "The Best Tools for Building Crud Applications in 2024",
            "summary": "CRUD applications are a type of software that allows users to create, read, update, and delete data using various interfaces such as web pages or mobile apps.",
            "date_modified": "2024-01-08T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "crud",
                "tools"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/internal-tool",
            "content_html": "<p>Open-source tools are common, but it's rare to see one with 10,000 stars. I'm sharing a product that has seen a crazy growth of 10,000 stars overseas. There are many low-code tools, but few are truly useful. This tool is primarily used by developers in North America, and their Discord community is very active.</p>\n<p>The community indeed has some good reviews.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/popular-tool/good.png\" alt=\"good\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"what-illa-cloud-can-do\">What ILLA Cloud Can Do<a href=\"https://illacloud.github.io/illa-website/blog/internal-tool#what-illa-cloud-can-do\" class=\"hash-link\" aria-label=\"Direct link to What ILLA Cloud Can Do\" title=\"Direct link to What ILLA Cloud Can Do\">​</a></h2>\n<p>Github: <a href=\"https://illacloud.com/illacloud/illa-builder\" target=\"_blank\" rel=\"noopener noreferrer\">https://illacloud.com/illacloud/illa-builder</a></p>\n<p>Official Website: <a href=\"https://illa.cloud/\" target=\"_blank\" rel=\"noopener noreferrer\">https://illa.cloud</a></p>\n<p>The main users of ILLA Cloud are backend engineers, which might be different from what most people think. A large number of backend engineers have used ILLA Cloud to build numerous data panels and management backends. After all, web development has always been a headache for backend engineers. The tools built with ILLA Cloud are indeed quite aesthetically pleasing and fast.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/popular-tool/dashboard.png\" alt=\"dashboard\" class=\"img_CfaS\"></p>\n<p>ILLA also supports collaboration, allowing multiple people to edit a project together. Backend engineers no longer need to worry about building various internal backends. We all know the pain and tears of relying on front-end engineers.</p>\n<p>The official website also has some solutions, which currently seem to focus mainly on management backends, data panels, etc.</p>\n<ul>\n<li>AI text-to-image panel</li>\n<li>AI voice processing panel</li>\n<li>Data analysis panel</li>\n<li>Content management CMS</li>\n<li>Custom CRM</li>\n<li>Management backend</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/popular-tool/solution.png\" alt=\"solution\" class=\"img_CfaS\"></p>\n<p>They also support building workflows, and it seems they have done a lot of work in the low-code field, looking like a well-rounded product. It basically meets various common cases.</p>\n<p>For instance:</p>\n<ul>\n<li>Sending a message to Slack when a new user registers</li>\n<li>Daily reporting of the number of stars on GitHub</li>\n<li>Daily booking of meeting rooms</li>\n</ul>\n<p>Engineers use ILLA Flow to automatically execute many tasks, such as:</p>\n<ul>\n<li>Reading business data from a database daily and sending it to Slack</li>\n<li>Building CI/CD reporting systems</li>\n<li>Sending emails when certain warnings occur</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/popular-tool/flow.jpeg\" alt=\"flow\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"user-experience\">User Experience<a href=\"https://illacloud.github.io/illa-website/blog/internal-tool#user-experience\" class=\"hash-link\" aria-label=\"Direct link to User Experience\" title=\"Direct link to User Experience\">​</a></h2>\n<p>I briefly experienced it, and they have really put a lot of effort into the editor's smoothness and overall experience. The overall editing experience is quite good. It includes smooth drag-and-drop capabilities and also supports collaboration.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/popular-tool/team.gif\" alt=\"collabration\" class=\"img_CfaS\"></p>\n<p>Various database integration capabilities are also supported, allowing quick data reading and writing from various data sources and databases. For backend engineers, integrating various services is indeed a nightmare. In this case, ILLA has already done the work. They also support integration with Huggingface, which seems like an official collaboration. It allows for quick use of the model capabilities on Huggingface, which is indeed interesting. You can quickly create some AI-driven tools.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/popular-tool/resource.png\" alt=\"resource\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/internal-tool#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>There are many low-code tools, but few can be practically used and implemented. ILLA seems to have been maintained for two years now, and their company is currently fully committed to this one thing. Unlike some low-code tools produced for certain purposes, they are directly addressing the needs of developers. Everyone can try it out!\"</p>",
            "url": "https://illacloud.github.io/illa-website/blog/internal-tool",
            "title": "Best Open-Source Low-Code Platform for Building Internal Tools",
            "summary": "Open-source tools are common, but it's rare to see one with 10,000 stars.",
            "date_modified": "2024-01-05T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "nvm",
                "nodejs",
                "mac",
                "javascript"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/launch-flow",
            "content_html": "<p>Hi everyone, I'm Owen, and we are a startup company focused on low-code solutions. Our team is quite small, consisting of only 7 people.</p>\n<p>Today, we launched our new product: ILLA Flow.</p>\n<p>Website: <a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://illacloud.com</a> (You can find it after login, at the left of dashboard -&gt; Flow)</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-flow\">ILLA Flow<a href=\"https://illacloud.github.io/illa-website/blog/launch-flow#illa-flow\" class=\"hash-link\" aria-label=\"Direct link to ILLA Flow\" title=\"Direct link to ILLA Flow\">​</a></h2>\n<p>ILLA Flow is a workflow product that allows you to construct a complete workflow in a manner similar to mind mapping, thereby enabling connections and scheduling with various databases and APIs.</p>\n<p>You can build your own workflow through a drag-and-drop interface, and then execute your workflow by scheduling triggers or Webhook triggers.</p>\n<p>The smooth drag-and-drop experience allows you to quickly build workflows without worrying about any integration issues. The entire system is driven by JavaScript, ensuring flexibility while also being developer-friendly.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/launch-flow/flow.jpeg\" alt=\"flow\" class=\"img_CfaS\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"integrate-everything\">Integrate Everything<a href=\"https://illacloud.github.io/illa-website/blog/launch-flow#integrate-everything\" class=\"hash-link\" aria-label=\"Direct link to Integrate Everything\" title=\"Direct link to Integrate Everything\">​</a></h2>\n<p>ILLA Flow can connect to any</p>\n<ul>\n<li>RestAPI</li>\n<li>MySQL</li>\n<li>MariaDB,</li>\n<li>PostgreSQL</li>\n<li>...</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/launch-flow/resource.jpeg\" alt=\"resource\" class=\"img_CfaS\"></p>\n<p>We will strive to expand support for more connectivity features.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"some-examples\">Some examples<a href=\"https://illacloud.github.io/illa-website/blog/launch-flow#some-examples\" class=\"hash-link\" aria-label=\"Direct link to Some examples\" title=\"Direct link to Some examples\">​</a></h2>\n<p>ILLA Flow supports multiple trigger types, including scheduled triggers and Webhook triggers.</p>\n<p>We use ILLA Flow to do lots of things, like:</p>\n<ul>\n<li>Send a message to Slack when a new user registers</li>\n<li>Report the number of stars on GitHub every day</li>\n<li>Book a meeting room every day</li>\n<li>...</li>\n</ul>\n<p>Our engineers use ILLA Flow to automate many tasks, like:</p>\n<ul>\n<li>Read some business data from databases and send to Slack every day</li>\n<li>Build a CI/CD report system</li>\n<li>Send email when some warning occurs</li>\n<li>...</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/launch-flow#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>ILLA Flow supports scheduled triggers and the use of Webhooks for triggering. As a low-code tool, ILLA also enables the construction of panels to drive multiple workflows, forming a complete business process. Currently, the product is entirely free and requires no costs.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/launch-flow/dashboard.jpeg\" alt=\"dashboard\" class=\"img_CfaS\"></p>\n<p>Our initial intention in creating this product was to address the lack of developer-friendly workflow products on the market. We aim to build a complete low-code matrix product to provide a better experience. Moreover, we have achieved multi-person real-time collaboration, similar to the experience of editing in Figma, ensuring that a team can edit workflows together.</p>\n<p>As an early-stage product, there are still many features that are not perfect, and we hope everyone can provide valuable feedback to help us optimize it.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/launch-flow",
            "title": "ILLA Flow: A javascript-driven, developer-friendly product for creating automate workflow",
            "summary": "ILLA Flow is a workflow product that allows you to construct a complete workflow in a manner similar to mind mapping.",
            "date_modified": "2024-01-05T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "workflow"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/best-low-code-platform",
            "content_html": "<p>As the software industry evolves, low-code tools are increasingly gaining popularity. Implementing the right low-code tools in various business scenarios can lead to remarkable efficiency and productivity gains. This article delves into the most popular low-code tool products in 2024, offering insights and reliable recommendations for making informed choices.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"why-choose-low-code-tools\">Why Choose Low-Code Tools<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#why-choose-low-code-tools\" class=\"hash-link\" aria-label=\"Direct link to Why Choose Low-Code Tools\" title=\"Direct link to Why Choose Low-Code Tools\">​</a></h2>\n<p>Low-code tools offer several compelling advantages, which include:</p>\n<ul>\n<li>Zero operational maintenance costs</li>\n<li>Ultra-fast development speed</li>\n<li>Reduced need for extensive developer teams</li>\n<li>Accelerated time-to-market for new applications</li>\n</ul>\n<p>Typically, low-code tools are particularly well-suited for developing internal tools and Portal scenarios.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"the-spectrum-of-choices\">The Spectrum of Choices<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#the-spectrum-of-choices\" class=\"hash-link\" aria-label=\"Direct link to The Spectrum of Choices\" title=\"Direct link to The Spectrum of Choices\">​</a></h2>\n<p>We have compiled a list of currently popular low-code platforms for your consideration, with detailed introductions to follow.</p>\n<ul>\n<li>ILLA Cloud: Open-source</li>\n<li>Budibase: Open-source</li>\n<li>Tooljet: Open-source</li>\n<li>SuperBlocks: Proprietary</li>\n<li>Retool: Proprietary</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"illa-cloud\">ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to ILLA Cloud\" title=\"Direct link to ILLA Cloud\">​</a></h2>\n<p>GitHub link: <a href=\"https://github.com/illacloud/illa-builder\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/illacloud/illa-builder</a></p>\n<p><a href=\"https://illacloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ILLA Cloud</a> is an innovative low-code tool that facilitates the swift creation of internal tools using simple JavaScript, eliminating the need to start new projects from scratch.</p>\n<p>Key offerings include:</p>\n<ul>\n<li>Web &amp; App Administration Panels</li>\n<li>Data Dashboards</li>\n<li>Customized B2B Tools</li>\n</ul>\n<p>ILLA Cloud boasts a development speed up to 10 times faster than traditional component library building, and it also supports collaborative editing, enhancing teamwork efficiency.</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/crm.webp\" alt=\"crm\" class=\"img_CfaS\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"best-choice\">Best Choice<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#best-choice\" class=\"hash-link\" aria-label=\"Direct link to Best Choice\" title=\"Direct link to Best Choice\">​</a></h3>\n<p>Unique advantages of ILLA Cloud over other low-code tools:</p>\n<ul>\n<li>Multi-user collaboration support</li>\n<li>Comprehensive workflow capabilities</li>\n<li>Open-source product with options for private deployment</li>\n<li>Compatibility with various mainstream integrations, enabling quick connection to diverse data sources</li>\n</ul>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/team.gif\" alt=\"team\" class=\"img_CfaS\"></p>\n<p>Furthermore, ILLA Cloud incorporates an AI Agent feature. This unique functionality allows for rapid AI-powered writing, seamlessly integrating into any product developed using low-code tools.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"budibase\">Budibase<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#budibase\" class=\"hash-link\" aria-label=\"Direct link to Budibase\" title=\"Direct link to Budibase\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/budibase.png\" alt=\"budibase\" class=\"img_CfaS\"></p>\n<p>In the realm of rapid application development, Budibase emerges as a powerful low-code platform, tailored to equip developers with the tools they need to swiftly craft bespoke applications. At its core, Budibase offers a user-friendly visual development environment that simplifies the creation process. This environment is enriched with a diverse selection of pre-built components, catering to a range of application needs, from data entry forms to interactive dashboards. Beyond the pre-built offerings, Budibase extends a unique flexibility — the freedom to design custom CSS styles. This empowers developers to infuse their applications with distinct visual identities, reflecting the essence of their projects.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"opensource\">Opensource<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#opensource\" class=\"hash-link\" aria-label=\"Direct link to Opensource\" title=\"Direct link to Opensource\">​</a></h3>\n<p>While Budibase doesn’t explicitly advertise itself as open source, a significant hint lies in its foundation. The platform proudly boasts its utilization of open-source technologies, fostering a sense of community-driven innovation. The absence of a clear open-source declaration doesn’t undermine its commitment to collaborative development, tapping into the power of shared knowledge and expertise. However, prospective users keen on an established open-source ecosystem might need to dig deeper into Budibase’s architecture to assess its alignment with their preferences.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#advantages\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>An undeniable highlight of Budibase is its prowess in integration. The platform recognizes the contemporary need for applications to communicate seamlessly with diverse external services. Enter plugins — a mechanism that empowers Budibase to integrate with a variety of third-party services. This feature propels the platform’s utility, enabling developers to harness the capabilities of external tools and services while staying within the Budibase environment. This integration-friendly approach fosters efficiency and unleashes the potential for sophisticated, multifunctional applications.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"drawbacks\">Drawbacks<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#drawbacks\" class=\"hash-link\" aria-label=\"Direct link to Drawbacks\" title=\"Direct link to Drawbacks\">​</a></h3>\n<p>As with any powerful tool, there’s a learning curve to conquer, and Budibase is no exception. While it holds the promise of accelerated application development, some users, particularly those new to low-code development, might initially find the learning curve a bit steep. The platform’s array of features and capabilities demands a certain investment of time and effort to master fully. However, for those who persevere through this initial phase, Budibase opens the doors to a world of creative possibilities, enabling the realization of innovative application ideas with remarkable efficiency.</p>\n<p>In the competitive landscape of low-code platforms, Budibase shines as a promising contender, offering a balance between user-friendly visual development, flexibility, integration capabilities, and an array of pricing plans. Whether you’re a seasoned developer seeking to expedite your workflow or a newcomer exploring the realm of application development, Budibase presents itself as a canvas for your creative ideas, enabling you to bring applications to life with agility and finesse.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"tooljet\">Tooljet<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#tooljet\" class=\"hash-link\" aria-label=\"Direct link to Tooljet\" title=\"Direct link to Tooljet\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/tooljet.png\" alt=\"tooljet\" class=\"img_CfaS\"></p>\n<p>In the ever-evolving landscape of low-code development, Tooljet emerges as a dynamic contender, offering a platform that empowers users to craft sophisticated web applications without delving into the intricacies of coding. At its core, Tooljet introduces a versatile toolkit equipped with an array of features aimed at streamlining the application development process. Central to its offerings is a seamless drag-and-drop interface, enabling users to intuitively assemble components and design intricate layouts.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"features\">Features<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#features\" class=\"hash-link\" aria-label=\"Direct link to Features\" title=\"Direct link to Features\">​</a></h3>\n<p>Database modeling, a cornerstone of modern application development, finds its place within Tooljet’s arsenal. Users can shape and mold their data structures with ease, aligning their applications with specific use cases and business needs. The platform’s emphasis on API integrations extends the boundaries of what’s achievable, allowing applications to seamlessly connect with external services and data sources. This integration prowess opens doors to dynamic, data-rich applications that respond seamlessly to real-world scenarios.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"opensource-1\">Opensource<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#opensource-1\" class=\"hash-link\" aria-label=\"Direct link to Opensource\" title=\"Direct link to Opensource\">​</a></h3>\n<p>While Tooljet refrains from explicitly branding itself as open source, a notable feature stands out — the ability for users to export their generated code. This distinctive attribute empowers developers to take ownership of their creations fully, hosting applications on their servers. This approach combines the efficiency of low-code development with the freedom and control typically associated with traditional coding practices.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-1\">Advantages<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#advantages-1\" class=\"hash-link\" aria-label=\"Direct link to Advantages\" title=\"Direct link to Advantages\">​</a></h3>\n<p>Feedback from users highlights Tooljet’s user-friendly interface as a significant advantage. The platform’s intuitive nature accelerates the learning curve, enabling even those with limited technical expertise to bring their application visions to life. Moreover, Tooljet’s capacity to facilitate the creation of complex workflows amplifies its utility, allowing users to orchestrate intricate sequences of actions within their applications.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"disadvantages\">Disadvantages<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#disadvantages\" class=\"hash-link\" aria-label=\"Direct link to Disadvantages\" title=\"Direct link to Disadvantages\">​</a></h3>\n<p>However, no tool is without its limitations. While Tooljet empowers users with an array of features, some might find themselves yearning for advanced customization options. The platform’s focus on user-friendliness and efficiency might occasionally result in constraints for users seeking highly specialized functionalities or intricate design nuances. As with any technology, users must strike a balance between the ease of use and the extent of customization based on their specific project requirements.</p>\n<p>In the realm of low-code development, Tooljet emerges as a formidable contender, offering a blend of intuitive design, data modeling prowess, API integration capabilities, and a flexible pricing model. The platform’s unique approach to exporting code and hosting applications on personal servers adds a touch of versatility, bridging the gap between low-code convenience and coding control. Whether you’re an individual exploring the application development landscape or a business seeking streamlined solutions, Tooljet invites you to navigate its feature-rich toolkit and embark on a journey of creativity and innovation.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"superblocks\">SuperBlocks<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#superblocks\" class=\"hash-link\" aria-label=\"Direct link to SuperBlocks\" title=\"Direct link to SuperBlocks\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/superblocks.png\" alt=\"superblocks\" class=\"img_CfaS\"></p>\n<p>Superblocks is a leading low-code development platform that empowers businesses to create robust and customized internal tools with ease. With its intuitive interface and powerful features, Superblocks offers a range of benefits for organizations seeking efficient and flexible solutions for their development needs.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"key-features-of-superblocks\">Key Features of Superblocks<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#key-features-of-superblocks\" class=\"hash-link\" aria-label=\"Direct link to Key Features of Superblocks\" title=\"Direct link to Key Features of Superblocks\">​</a></h3>\n<ul>\n<li>Drag-and-Drop Interface: Superblocks provides a user-friendly drag-and-drop interface, allowing users to visually design and build their applications without the need for extensive coding knowledge. This feature simplifies the development process, enabling even non-technical users to create complex internal tools.</li>\n<li>Extensive Component Library: Superblocks offers a vast library of pre-built components and templates that can be easily customized and integrated into applications. This saves time and effort by providing ready-made solutions for common functionalities, such as data visualization, form inputs, and workflow automation.</li>\n<li>Seamless Integrations: Superblocks seamlessly integrates with various third-party services and APIs, enabling users to incorporate external tools and data sources into their applications. This ensures compatibility with existing systems and enhances the functionality and versatility of the developed tools.</li>\n<li>Collaboration and Version Control: Superblocks includes collaboration features that facilitate teamwork and streamline the development process. Multiple team members can work on a project simultaneously, making it easy to collaborate, share feedback, and track changes. Additionally, version control capabilities enable developers to revert to previous versions of the application if needed.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"benefits-of-superblocks\">Benefits of Superblocks<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#benefits-of-superblocks\" class=\"hash-link\" aria-label=\"Direct link to Benefits of Superblocks\" title=\"Direct link to Benefits of Superblocks\">​</a></h3>\n<ul>\n<li>Rapid Development: With its intuitive interface and extensive component library, Superblocks accelerates the development process. The visual approach and ready-to-use components reduce the need for manual coding, enabling faster prototyping and deployment of internal tools.</li>\n<li>Customizability: Superblocks allows users to tailor their applications to specific requirements. The platform offers flexibility in designing user interfaces, workflows, and data integrations, ensuring that the developed tools align with the organization's unique needs and branding.</li>\n<li>Cost-Effectiveness: By providing a low-code solution, Superblocks reduces the reliance on traditional development resources and expensive coding efforts. This translates into significant cost savings, as organizations can create and maintain internal tools without the need for extensive development teams or specialized expertise.</li>\n<li>Scalability: Superblocks is designed to scale alongside growing businesses. Whether an organization needs to build a simple internal tool or a complex enterprise-grade application, Superblocks can accommodate the scalability requirements, ensuring that the developed tools can handle increased data volumes and user demand.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"retool\">Retool<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#retool\" class=\"hash-link\" aria-label=\"Direct link to Retool\" title=\"Direct link to Retool\">​</a></h2>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/best-low-code-platform/retool.png\" alt=\"retool\" class=\"img_CfaS\"></p>\n<p>Retool is a popular low-code development platform that empowers organizations to build internal tools with speed and efficiency. With its intuitive interface and powerful features, Retool enables businesses to create customized applications without the need for extensive coding knowledge.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"key-features-of-retool\">Key Features of Retool<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#key-features-of-retool\" class=\"hash-link\" aria-label=\"Direct link to Key Features of Retool\" title=\"Direct link to Key Features of Retool\">​</a></h3>\n<ul>\n<li>Drag-and-Drop Interface: Retool offers a user-friendly drag-and-drop interface, allowing users to visually design and assemble their applications. This simplifies the development process, enabling both technical and non-technical users to build functional internal tools quickly.</li>\n<li>Extensive Integration Capabilities: Retool seamlessly integrates with a wide range of data sources and APIs, including databases, REST APIs, and third-party services. This allows users to leverage existing data and systems within their applications, streamlining workflows and enhancing functionality.</li>\n<li>Pre-Built Components and Templates: Retool provides a vast library of pre-built components and templates that users can leverage to accelerate development. These components cover common functionalities such as data tables, forms, charts, and authentication, saving time and effort in building these features from scratch.</li>\n<li>Real-Time Collaboration: Retool offers real-time collaboration features that enable team members to work together on projects simultaneously. This promotes collaboration, facilitates knowledge sharing, and streamlines the development process by eliminating version control issues and bottlenecks.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"advantages-of-retool\">Advantages of Retool:<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#advantages-of-retool\" class=\"hash-link\" aria-label=\"Direct link to Advantages of Retool:\" title=\"Direct link to Advantages of Retool:\">​</a></h3>\n<ul>\n<li>Speed and Efficiency: Retool's intuitive interface and pre-built components allow for rapid development, reducing time-to-market for internal tools. The platform eliminates the need to start from scratch, enabling developers to focus on customizing and fine-tuning applications rather than building basic functionalities.</li>\n<li>Customizability: Despite its low-code approach, Retool offers extensive customization options. Users can tailor the appearance, behavior, and workflows of their applications to align with specific business requirements and branding guidelines.</li>\n<li>Integration Flexibility: Retool's robust integration capabilities make it suitable for organizations with diverse tech stacks. The platform can seamlessly connect with a wide range of data sources and APIs, ensuring compatibility with existing systems and allowing for seamless data flow between applications.</li>\n</ul>\n<p>Though last on the list, retool is also an excellent choice as a CRUD application. It is a drag-and-drop building blocks platform. You need to customize JavaScript in order to fetch your data from an external database.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/best-low-code-platform#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>These are the most promising low-code tools in 2024, each with its own characteristics. Different scenarios call for different problem-solving approaches, and we hope readers can choose the most efficient solutions for development in suitable situations. Speed up your work, go home early using low-code tools.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/best-low-code-platform",
            "title": "5 Best Low Code Platform in 2024",
            "summary": "As the software industry evolves, low-code tools are increasingly gaining popularity. Implementing the right low-code tools",
            "date_modified": "2024-01-04T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "low code"
            ]
        },
        {
            "id": "https://illacloud.github.io/illa-website/blog/core-app-dashboard-2",
            "content_html": "<p>The Core App Dashboard is the nerve center of any sophisticated application. At its essence, it is a centralized interface providing comprehensive insights and controls tailored to the specifics of an application, facilitating better decision-making and management.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"what-is-the-core-app-dashboard\">What is the Core App Dashboard?<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#what-is-the-core-app-dashboard\" class=\"hash-link\" aria-label=\"Direct link to What is the Core App Dashboard?\" title=\"Direct link to What is the Core App Dashboard?\">​</a></h2>\n<p>The Core App Dashboard is the nerve center of any sophisticated application. At its essence, it is a centralized interface providing comprehensive insights and controls tailored to the specifics of an application, facilitating better decision-making and management.</p>\n<p>Think of it as the dashboard in a car—it presents the driver with all the essential data at a glance, ensuring efficient navigation and vehicle performance. Similarly, a Core App Dashboard does the same, but for the application realm.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"why-should-we-use-the-core-dash-app\">Why should we use the Core Dash app?<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#why-should-we-use-the-core-dash-app\" class=\"hash-link\" aria-label=\"Direct link to Why should we use the Core Dash app?\" title=\"Direct link to Why should we use the Core Dash app?\">​</a></h2>\n<p>The use of Core Dash apps, or more commonly known as core dashboard applications, has become increasingly prevalent in today's tech-driven world. These dashboards play a pivotal role in simplifying complex processes, providing insights, and enhancing user experience. Here's why you should consider using a Core Dash app:</p>\n<p>Centralized Control: A core dashboard application offers a unified platform where users can access, monitor, and control various functionalities and features of an application. This centralization minimizes the need to jump between multiple interfaces, thus improving efficiency.</p>\n<p>Real-time Data Visualization: Dashboards provide real-time data visualization, allowing users to quickly grasp the current status, trends, and performance metrics. This can aid in making informed decisions promptly.</p>\n<p>Enhanced User Experience: A well-designed dashboard provides an intuitive user interface, making it easier for users to navigate and access the information they need. This contributes to a more seamless and enhanced user experience.</p>\n<p>Customization: Core Dash apps can often be tailored to meet specific needs. Users can customize views, metrics, and even the layout to suit their preferences or job functions.</p>\n<p>Improved Productivity: By consolidating essential data and functionalities in one place, dashboards reduce the time spent searching for information, leading to increased productivity.</p>\n<p>Integrated Analytics: Many Core Dash apps come with integrated analytics tools that offer insights into user behavior, application performance, and other critical metrics. This data can be invaluable for driving growth and optimization.</p>\n<p>Security: Dashboards can provide robust security features, including user access controls, encryption, and audit trails. This ensures that sensitive data is protected and only accessible to authorized users.</p>\n<p>Collaboration: Some dashboards come with collaborative tools, enabling teams to work together more effectively, share insights, and communicate seamlessly within the platform.</p>\n<p>Scalability: As organizations grow, their data and processes can become more complex. Core Dash apps are designed to be scalable, ensuring they remain effective and efficient even as demands increase.</p>\n<p>Cost-Effective: By integrating multiple functionalities and data sources into one platform, dashboards can reduce the need for multiple standalone tools. This consolidation can lead to cost savings in both software procurement and training.</p>\n<p>Alerts and Notifications: Dashboards can be set up to send alerts or notifications based on specific criteria or thresholds. This ensures that users are promptly informed about any critical events or changes.</p>\n<p>Support for Decision-making: With all the relevant data and analytics at their fingertips, decision-makers can derive actionable insights, helping them make more informed and strategic decisions.</p>\n<p>In summary, a Core Dash app provides a powerful and comprehensive tool for businesses and individuals alike. Whether it's for monitoring, analytics, collaboration, or decision-making, these dashboards offer a range of benefits that can significantly enhance efficiency, productivity, and overall user experience. If you're looking for a way to consolidate data, gain insights, and improve operational efficiency, a Core Dash app might be the solution you need.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"functions-of-the-core-app-dashboard\">Functions of the Core App Dashboard<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#functions-of-the-core-app-dashboard\" class=\"hash-link\" aria-label=\"Direct link to Functions of the Core App Dashboard\" title=\"Direct link to Functions of the Core App Dashboard\">​</a></h2>\n<p>While the specific functionalities might differ based on the nature of the application, universally, a Core App Dashboard is expected to deliver the following capabilities:</p>\n<p>Comprehensive Analytics: A bird's-eye view of the application's performance metrics, user activity, and other pivotal data, enabling users to understand and optimize app usage.</p>\n<p>User Administration: A crucial feature for multi-user platforms, the dashboard provides tools for the seamless management of users—enabling add-ons, edits, deletions, and role definitions.</p>\n<p>Configurational Controls: Whether it's changing the interface's aesthetics or adjusting the application's backend mechanics, the dashboard allows for intuitive, centralized control over various settings.</p>\n<p>Notification Hub: This consolidates all alerts, ensuring users never miss out on essential updates, messages, or tasks.</p>\n<p>Task Management: Some dashboards integrate task management tools to enable users to allocate, track, and manage projects and responsibilities.</p>\n<p>Integration and Extensions: Dashboards might provide interfaces for integrating third-party tools or extending the application's capabilities.</p>\n<p>Utilizing the Core App Dashboard: What to Keep in Mind</p>\n<p>Harnessing the potential of a Core App Dashboard necessitates understanding and addressing a few critical considerations:</p>\n<p>Intuitive Design: A cluttered or convoluted dashboard can deter users. Ensuring a clean, intuitive, and user-friendly design is paramount.</p>\n<p>Robust Security: Given the control and insights a dashboard offers, its security cannot be compromised. Regular updates, strong encryption, and multi-factor authentication can enhance security.</p>\n<p>Scalability: As applications evolve, dashboards should scale accordingly. This includes accommodating additional data, users, and functionalities.</p>\n<p>Customization: Every organization or user has unique needs. Offering customization options ensures the dashboard remains relevant and effective.</p>\n<p>Regular Updates: The digital realm is dynamic. Dashboards should regularly update to incorporate new features, fix bugs, and enhance performance.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"how-to-build-a-core-dashboard-using-illa-cloud\">How to build a core dashboard using ILLA Cloud?<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#how-to-build-a-core-dashboard-using-illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to How to build a core dashboard using ILLA Cloud?\" title=\"Direct link to How to build a core dashboard using ILLA Cloud?\">​</a></h2>\n<p>In the ever-evolving digital realm, the ability to visualize and act upon data quickly is crucial. A well-structured core app dashboard can be your central hub for all pivotal information. Combining this with the innovative prowess of ILLA Cloud can make your dashboard not just functional but transformative. Here's how you can embark on this transformative journey:</p>\n<p><img loading=\"lazy\" src=\"https://cdn.illacloud.com/illa-website/blog/core-app-dashboard/dashboard.png\" alt=\"dashboard\" class=\"img_CfaS\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-1-getting-started-with-illa-cloud\">Step 1: Getting Started with ILLA Cloud<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-1-getting-started-with-illa-cloud\" class=\"hash-link\" aria-label=\"Direct link to Step 1: Getting Started with ILLA Cloud\" title=\"Direct link to Step 1: Getting Started with ILLA Cloud\">​</a></h3>\n<p>Your first stop is the official ILLA Cloud website. Register and create an account. With this step, you open the gateway to a dashboard replete with tools tailored for intuitive application development.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-2-creating-a-new-project\">Step 2: Creating a New Project<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-2-creating-a-new-project\" class=\"hash-link\" aria-label=\"Direct link to Step 2: Creating a New Project\" title=\"Direct link to Step 2: Creating a New Project\">​</a></h3>\n<p>Spot the \"Create New Project\" button? Click on it. Now, christen your project with a name and sprinkle in a description. Given our focus, you'd want to select a core app dashboard as your project type.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-3-designing-the-user-interface\">Step 3: Designing the User Interface<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-3-designing-the-user-interface\" class=\"hash-link\" aria-label=\"Direct link to Step 3: Designing the User Interface\" title=\"Direct link to Step 3: Designing the User Interface\">​</a></h3>\n<p>Harness the strength of ILLA Cloud's low-code environment. Crafting a user interface becomes a game of drag-and-drop. Be it buttons, charts, or widgets, position them as you deem fit and give them a makeover to resonate with your brand's identity.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-4-integrating-data-sources\">Step 4: Integrating Data Sources<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-4-integrating-data-sources\" class=\"hash-link\" aria-label=\"Direct link to Step 4: Integrating Data Sources\" title=\"Direct link to Step 4: Integrating Data Sources\">​</a></h3>\n<p>ILLA Cloud makes data integration a breeze. Using the no-code API connector, you can seamlessly fetch data from various repositories, be it intricate databases, versatile external APIs, or humble spreadsheets. Your dashboard now thrives with real-time data.ILLA Cloud supports a myriad of data sources to ensure it caters to a wide range of business needs.For example,</p>\n<p>Airtable: Known for its spreadsheet-database hybrid functionalities, businesses can leverage Airtable's structured data with ILLA Cloud.</p>\n<p>Google Sheets: Many organizations use Google Sheets due to its collaboration features. Directly integrate these sheets into your dashboard for an efficient workflow.</p>\n<p>MySQL &amp; PostgreSQL: These popular relational database management systems hold vast amounts of structured data. ILLA Cloud’s connectors ensure this data can be visualized seamlessly.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-5-creating-data-automation-workflows\">Step 5: Creating Data Automation Workflows<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-5-creating-data-automation-workflows\" class=\"hash-link\" aria-label=\"Direct link to Step 5: Creating Data Automation Workflows\" title=\"Direct link to Step 5: Creating Data Automation Workflows\">​</a></h3>\n<p>Accuracy is key. With ILLA Cloud's data automation workflows and the robust Event Handler feature, say goodbye to inconsistencies. Set the stage for meticulous data validation, apt transformation, and synchronized updates. The Event Handler acts as an event processing function, allowing you to create dynamic triggering mechanisms in the workflow. Simply put, its logic operates on the principle of 'when something happens, then something else will happen.' This ensures that your dashboard always responds in real-time and reflects the absolute truth.\"</p>\n<p>This revision emphasizes the importance of the Event Handler within the context of ensuring data accuracy and real-time responsiveness.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-6-operations-automation\">Step 6: Operations Automation<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-6-operations-automation\" class=\"hash-link\" aria-label=\"Direct link to Step 6: Operations Automation\" title=\"Direct link to Step 6: Operations Automation\">​</a></h3>\n<p>Routine tasks can be automated. Let ILLA Cloud's operation automation features take the helm. Design workflows that are proactive, initiating actions based on set criteria. The result? A reduction in manual tasks and a boost in overall efficiency.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"step-7-testing-and-deployment\">Step 7: Testing and Deployment<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#step-7-testing-and-deployment\" class=\"hash-link\" aria-label=\"Direct link to Step 7: Testing and Deployment\" title=\"Direct link to Step 7: Testing and Deployment\">​</a></h3>\n<p>Before you unveil your masterpiece, test it. Use the ILLA Cloud environment to ensure every cog in your dashboard machine runs smoothly. Once you're content with its performance, roll out your dashboard to the desired environment, and let your stakeholders revel in its capabilities.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_dXVO\" id=\"conclusion\">Conclusion<a href=\"https://illacloud.github.io/illa-website/blog/core-app-dashboard-2#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<p>Building a core app dashboard might seem daunting, but with ILLA Cloud, it's akin to weaving a story—with data as your language. This guide laid down a structured path, taking you from initiation to deployment, ensuring your journey is seamless. The core app dashboard you create with ILLA Cloud won't just be a repository of data; it'll be a hub of insights, driving informed decisions and fostering growth. Dive into the world of ILLA Cloud, and make app development an experience, not just a task.</p>",
            "url": "https://illacloud.github.io/illa-website/blog/core-app-dashboard-2",
            "title": "Build core app dashboard at lightning speed",
            "summary": "The Core App Dashboard is the nerve center of any sophisticated application.",
            "date_modified": "2024-01-04T10:00:00.000Z",
            "author": {
                "name": "Owen Chen",
                "url": "https://github.com/smallSohoSolo"
            },
            "tags": [
                "low code",
                "core app dashboard"
            ]
        }
    ]
}